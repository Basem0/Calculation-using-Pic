

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Dec 26 20:06:04 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    72                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    73                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    74                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    75   000000                     
    76                           ; Generated 23/03/2023 GMT
    77                           ; 
    78                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    79                           ; All rights reserved.
    80                           ; 
    81                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    82                           ; 
    83                           ; Redistribution and use in source and binary forms, with or without modification, are
    84                           ; permitted provided that the following conditions are met:
    85                           ; 
    86                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    87                           ;        conditions and the following disclaimer.
    88                           ; 
    89                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    90                           ;        of conditions and the following disclaimer in the documentation and/or other
    91                           ;        materials provided with the distribution. Publication is not required when
    92                           ;        this file is used in an embedded application.
    93                           ; 
    94                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    95                           ;        software without specific prior written permission.
    96                           ; 
    97                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    98                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    99                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   100                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   101                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   102                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   103                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   104                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   105                           ; 
   106                           ; 
   107                           ; Code-generator required, PIC18F4620 Definitions
   108                           ; 
   109                           ; SFR Addresses
   110   000000                     
   111                           	psect	idataBANK0
   112   004B8A                     __pidataBANK0:
   113                           	callstack 0
   114                           
   115                           ;initializer for _pos
   116   004B8A  01                 	db	1
   117                           
   118                           	psect	idataBANK1
   119   0049DE                     __pidataBANK1:
   120                           	callstack 0
   121                           
   122                           ;initializer for _port_registers
   123   0049DE  80                 	db	128
   124   0049DF  0F                 	db	15
   125   0049E0  81                 	db	129
   126   0049E1  0F                 	db	15
   127   0049E2  82                 	db	130
   128   0049E3  0F                 	db	15
   129   0049E4  83                 	db	131
   130   0049E5  0F                 	db	15
   131   0049E6  84                 	db	132
   132   0049E7  0F                 	db	15
   133                           
   134                           ;initializer for _lat_registers
   135   0049E8  89                 	db	137
   136   0049E9  0F                 	db	15
   137   0049EA  8A                 	db	138
   138   0049EB  0F                 	db	15
   139   0049EC  8B                 	db	139
   140   0049ED  0F                 	db	15
   141   0049EE  8C                 	db	140
   142   0049EF  0F                 	db	15
   143   0049F0  8D                 	db	141
   144   0049F1  0F                 	db	15
   145                           
   146                           ;initializer for _tris_registers
   147   0049F2  92                 	db	146
   148   0049F3  0F                 	db	15
   149   0049F4  93                 	db	147
   150   0049F5  0F                 	db	15
   151   0049F6  94                 	db	148
   152   0049F7  0F                 	db	15
   153   0049F8  95                 	db	149
   154   0049F9  0F                 	db	15
   155   0049FA  96                 	db	150
   156   0049FB  0F                 	db	15
   157                           
   158                           ;initializer for _operators
   159   0049FC  2F                 	db	47
   160   0049FD  45                 	db	69
   161   0049FE  2A                 	db	42
   162   0049FF  2D                 	db	45
   163   004A00  2B                 	db	43
   164   004A01  3D                 	db	61
   165   004A02  44                 	db	68
   166   004A03  43                 	db	67
   167                           
   168                           ;initializer for _pad1
   169   004A04  03                 	db	3
   170   004A05  0B                 	db	11
   171   004A06  13                 	db	19
   172   004A07  1B                 	db	27
   173   004A08  63                 	db	99
   174   004A09  6B                 	db	107
   175   004A0A  73                 	db	115
   176   004A0B  7B                 	db	123
   177   004A0C  72                 	db	114
   178   004A0D  7A                 	db	122
   179                           
   180                           ;initializer for _my_lcd
   181   004A0E  22                 	db	34
   182   004A0F  2A                 	db	42
   183   004A10  02                 	db	2
   184   004A11  0A                 	db	10
   185   004A12  12                 	db	18
   186   004A13  1A                 	db	26
   187                           
   188                           	psect	smallconst
   189   001000                     __psmallconst:
   190                           	callstack 0
   191   001000  00                 	db	0
   192   001001                     _btn_values:
   193                           	callstack 0
   194   001001  41                 	db	65
   195   001002  37                 	db	55
   196   001003  38                 	db	56
   197   001004  39                 	db	57
   198   001005  2A                 	db	42
   199   001006  2F                 	db	47
   200   001007  42                 	db	66
   201   001008  34                 	db	52
   202   001009  35                 	db	53
   203   00100A  36                 	db	54
   204   00100B  2D                 	db	45
   205   00100C  45                 	db	69
   206   00100D  43                 	db	67
   207   00100E  31                 	db	49
   208   00100F  32                 	db	50
   209   001010  33                 	db	51
   210   001011  2B                 	db	43
   211   001012  46                 	db	70
   212   001013  44                 	db	68
   213   001014  30                 	db	48
   214   001015  2E                 	db	46
   215   001016  3D                 	db	61
   216   001017  2B                 	db	43
   217   001018  47                 	db	71
   218   001019                     __end_of_btn_values:
   219                           	callstack 0
   220   000000                     _PORTE	set	3972
   221   000000                     _PORTD	set	3971
   222   000000                     _PORTC	set	3970
   223   000000                     _PORTB	set	3969
   224   000000                     _PORTA	set	3968
   225   000000                     _LATA	set	3977
   226   000000                     _TRISA	set	3986
   227   000000                     _TRISE	set	3990
   228   000000                     _TRISD	set	3989
   229   000000                     _TRISC	set	3988
   230   000000                     _TRISB	set	3987
   231   000000                     _LATE	set	3981
   232   000000                     _LATD	set	3980
   233   000000                     _LATC	set	3979
   234   000000                     _LATB	set	3978
   235   001019                     STR_5:
   236   001019  42                 	db	66	;'B'
   237   00101A  61                 	db	97	;'a'
   238   00101B  73                 	db	115	;'s'
   239   00101C  65                 	db	101	;'e'
   240   00101D  6D                 	db	109	;'m'
   241   00101E  00                 	db	0
   242   00101F                     STR_4:
   243   00101F  25                 	db	37
   244   001020  2E                 	db	46
   245   001021  35                 	db	53	;'5'
   246   001022  66                 	db	102	;'f'
   247   001023  00                 	db	0
   248   001024                     STR_6:
   249   001024  69                 	db	105	;'i'
   250   001025  6E                 	db	110	;'n'
   251   001026  66                 	db	102	;'f'
   252   001027  00                 	db	0
   253   001028                     STR_9:
   254   001028  6E                 	db	110	;'n'
   255   001029  61                 	db	97	;'a'
   256   00102A  6E                 	db	110	;'n'
   257   00102B  00                 	db	0
   258   00102C                     STR_1:
   259   00102C  25                 	db	37
   260   00102D  69                 	db	105	;'i'
   261   00102E  00                 	db	0
   262   00102F  00                 	db	0	; dummy byte at the end
   263   000000                     
   264                           ; #config settings
   265                           
   266                           	psect	cinit
   267   004670                     __pcinit:
   268                           	callstack 0
   269   004670                     start_initialization:
   270                           	callstack 0
   271   004670                     __initialization:
   272                           	callstack 0
   273                           
   274                           ; Initialize objects allocated to BANK1 (54 bytes)
   275                           ; load TBLPTR registers with __pidataBANK1
   276   004670  0EDE               	movlw	low __pidataBANK1
   277   004672  6EF6               	movwf	tblptrl,c
   278   004674  0E49               	movlw	high __pidataBANK1
   279   004676  6EF7               	movwf	tblptrh,c
   280   004678  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   281   00467A  6EF8               	movwf	tblptru,c
   282   00467C  EE01  F06F         	lfsr	0,__pdataBANK1
   283   004680  EE10 F036          	lfsr	1,54
   284   004684                     copy_data0:
   285   004684  0009               	tblrd		*+
   286   004686  CFF5 FFEE          	movff	tablat,postinc0
   287   00468A  50E5               	movf	postdec1,w,c
   288   00468C  50E1               	movf	fsr1l,w,c
   289   00468E  E1FA               	bnz	copy_data0
   290                           
   291                           ; Initialize objects allocated to BANK0 (1 bytes)
   292                           ; load TBLPTR registers with __pidataBANK0
   293   004690  0E8A               	movlw	low __pidataBANK0
   294   004692  6EF6               	movwf	tblptrl,c
   295   004694  0E4B               	movlw	high __pidataBANK0
   296   004696  6EF7               	movwf	tblptrh,c
   297   004698  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   298   00469A  6EF8               	movwf	tblptru,c
   299   00469C  0009               	tblrd		*+	;fetch initializer
   300   00469E  CFF5 F0FF          	movff	tablat,__pdataBANK0
   301                           
   302                           ; Clear objects allocated to BANK2 (200 bytes)
   303   0046A2  EE02  F000         	lfsr	0,__pbssBANK2
   304   0046A6  0EC8               	movlw	200
   305   0046A8                     clear_0:
   306   0046A8  6AEE               	clrf	postinc0,c
   307   0046AA  06E8               	decf	wreg,f,c
   308   0046AC  E1FD               	bnz	clear_0
   309                           
   310                           ; Clear objects allocated to BANK1 (111 bytes)
   311   0046AE  EE01  F000         	lfsr	0,__pbssBANK1
   312   0046B2  0E6F               	movlw	111
   313   0046B4                     clear_1:
   314   0046B4  6AEE               	clrf	postinc0,c
   315   0046B6  06E8               	decf	wreg,f,c
   316   0046B8  E1FD               	bnz	clear_1
   317                           
   318                           ; Clear objects allocated to BANK0 (19 bytes)
   319   0046BA  EE00  F0EC         	lfsr	0,__pbssBANK0
   320   0046BE  0E13               	movlw	19
   321   0046C0                     clear_2:
   322   0046C0  6AEE               	clrf	postinc0,c
   323   0046C2  06E8               	decf	wreg,f,c
   324   0046C4  E1FD               	bnz	clear_2
   325                           
   326                           ; Clear objects allocated to COMRAM (1 bytes)
   327   0046C6  6A7F               	clrf	__pbssCOMRAM& (0+255),c
   328   0046C8                     end_of_initialization:
   329                           	callstack 0
   330   0046C8                     __end_of__initialization:
   331                           	callstack 0
   332   0046C8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   333   0046CA  6EF8               	movwf	tblptru,c
   334   0046CC  0100               	movlb	0
   335   0046CE  EF58  F00F         	goto	_main	;jump to C main() function
   336                           
   337                           	psect	bssCOMRAM
   338   00007F                     __pbssCOMRAM:
   339                           	callstack 0
   340   00007F                     led_initialize@F3058:
   341                           	callstack 0
   342   00007F                     	ds	1
   343                           
   344                           	psect	bssBANK0
   345   0000EC                     __pbssBANK0:
   346                           	callstack 0
   347   0000EC                     _width:
   348                           	callstack 0
   349   0000EC                     	ds	2
   350   0000EE                     _prec:
   351                           	callstack 0
   352   0000EE                     	ds	2
   353   0000F0                     _op:
   354                           	callstack 0
   355   0000F0                     	ds	2
   356   0000F2                     _flags:
   357                           	callstack 0
   358   0000F2                     	ds	1
   359   0000F3                     _calcState:
   360                           	callstack 0
   361   0000F3                     	ds	1
   362   0000F4                     _equal_flag:
   363                           	callstack 0
   364   0000F4                     	ds	1
   365   0000F5                     _res_counter:
   366                           	callstack 0
   367   0000F5                     	ds	1
   368   0000F6                     _flag:
   369                           	callstack 0
   370   0000F6                     	ds	1
   371   0000F7                     _start_flag:
   372                           	callstack 0
   373   0000F7                     	ds	1
   374   0000F8                     relay_turn_off@F3062:
   375                           	callstack 0
   376   0000F8                     	ds	1
   377   0000F9                     relay_turn_on@F3057:
   378                           	callstack 0
   379   0000F9                     	ds	1
   380   0000FA                     relay_initialize@F3052:
   381                           	callstack 0
   382   0000FA                     	ds	1
   383   0000FB                     led_turn_toggle@F3073:
   384                           	callstack 0
   385   0000FB                     	ds	1
   386   0000FC                     led_turn_off@F3068:
   387                           	callstack 0
   388   0000FC                     	ds	1
   389   0000FD                     led_turn_on@F3063:
   390                           	callstack 0
   391   0000FD                     	ds	1
   392   0000FE                     _val:
   393                           	callstack 0
   394   0000FE                     	ds	1
   395                           
   396                           	psect	dataBANK0
   397   0000FF                     __pdataBANK0:
   398                           	callstack 0
   399   0000FF                     _pos:
   400                           	callstack 0
   401   0000FF                     	ds	1
   402                           
   403                           	psect	bssBANK1
   404   000100                     __pbssBANK1:
   405                           	callstack 0
   406   000100                     floorf@F521:
   407                           	callstack 0
   408   000100                     	ds	4
   409   000104                     ___fpclassifyf@F465:
   410                           	callstack 0
   411   000104                     	ds	4
   412   000108                     _previousResult:
   413                           	callstack 0
   414   000108                     	ds	4
   415   00010C                     _num_1:
   416                           	callstack 0
   417   00010C                     	ds	4
   418   000110                     _dbuf:
   419                           	callstack 0
   420   000110                     	ds	80
   421   000160                     _arr:
   422                           	callstack 0
   423   000160                     	ds	11
   424   00016B                     _result:
   425                           	callstack 0
   426   00016B                     	ds	4
   427                           
   428                           	psect	dataBANK1
   429   00016F                     __pdataBANK1:
   430                           	callstack 0
   431   00016F                     _port_registers:
   432                           	callstack 0
   433   00016F                     	ds	10
   434   000179                     _lat_registers:
   435                           	callstack 0
   436   000179                     	ds	10
   437   000183                     _tris_registers:
   438                           	callstack 0
   439   000183                     	ds	10
   440   00018D                     _operators:
   441                           	callstack 0
   442   00018D                     	ds	8
   443   000195                     _pad1:
   444                           	callstack 0
   445   000195                     	ds	10
   446   00019F                     _my_lcd:
   447                           	callstack 0
   448   00019F                     	ds	6
   449                           
   450                           	psect	bssBANK2
   451   000200                     __pbssBANK2:
   452                           	callstack 0
   453   000200                     _postfix:
   454                           	callstack 0
   455   000200                     	ds	100
   456   000264                     _infix:
   457                           	callstack 0
   458   000264                     	ds	100
   459                           
   460                           	psect	cstackBANK0
   461   000080                     __pcstackBANK0:
   462                           	callstack 0
   463   000080                     ?_vfprintf:
   464                           	callstack 0
   465   000080                     vfprintf@fp:
   466                           	callstack 0
   467   000080                     evaluatePostfix@operand2:
   468                           	callstack 0
   469                           
   470                           ; 4 bytes @ 0x0
   471   000080                     	ds	1
   472   000081                     vfprintf@fmt:
   473                           	callstack 0
   474                           
   475                           ; 1 bytes @ 0x1
   476   000081                     	ds	1
   477   000082                     vfprintf@ap:
   478                           	callstack 0
   479                           
   480                           ; 1 bytes @ 0x2
   481   000082                     	ds	1
   482   000083                     vfprintf@cfmt:
   483                           	callstack 0
   484                           
   485                           ; 1 bytes @ 0x3
   486   000083                     	ds	1
   487   000084                     ?_sprintf:
   488                           	callstack 0
   489   000084                     sprintf@s:
   490                           	callstack 0
   491   000084                     evaluatePostfix@operand1:
   492                           	callstack 0
   493                           
   494                           ; 4 bytes @ 0x4
   495   000084                     	ds	2
   496   000086                     sprintf@fmt:
   497                           	callstack 0
   498                           
   499                           ; 1 bytes @ 0x6
   500   000086                     	ds	2
   501   000088                     evaluatePostfix@isFractional:
   502                           	callstack 0
   503                           
   504                           ; 2 bytes @ 0x8
   505   000088                     	ds	2
   506   00008A                     evaluatePostfix@fractionalMultiplier:
   507                           	callstack 0
   508                           
   509                           ; 4 bytes @ 0xA
   510   00008A                     	ds	1
   511   00008B                     sprintf@ap:
   512                           	callstack 0
   513                           
   514                           ; 1 bytes @ 0xB
   515   00008B                     	ds	1
   516   00008C                     sprintf@f:
   517                           	callstack 0
   518                           
   519                           ; 12 bytes @ 0xC
   520   00008C                     	ds	2
   521   00008E                     evaluatePostfix@num:
   522                           	callstack 0
   523                           
   524                           ; 4 bytes @ 0xE
   525   00008E                     	ds	4
   526   000092                     evaluatePostfix@current:
   527                           	callstack 0
   528                           
   529                           ; 1 bytes @ 0x12
   530   000092                     	ds	1
   531   000093                     evaluatePostfix@operandStack:
   532                           	callstack 0
   533                           
   534                           ; 82 bytes @ 0x13
   535   000093                     	ds	82
   536   0000E5                     evaluatePostfix@i:
   537                           	callstack 0
   538                           
   539                           ; 2 bytes @ 0x65
   540   0000E5                     	ds	2
   541   0000E7                     ??_main:
   542                           
   543                           ; 1 bytes @ 0x67
   544   0000E7                     	ds	2
   545   0000E9                     main@i:
   546                           	callstack 0
   547                           
   548                           ; 2 bytes @ 0x69
   549   0000E9                     	ds	2
   550   0000EB                     main@i_853:
   551                           	callstack 0
   552                           
   553                           ; 1 bytes @ 0x6B
   554   0000EB                     	ds	1
   555                           
   556                           	psect	cstackCOMRAM
   557   000001                     __pcstackCOMRAM:
   558                           	callstack 0
   559   000001                     ?_strlen:
   560                           	callstack 0
   561   000001                     ?___fpclassifyf:
   562                           	callstack 0
   563   000001                     ?_check_digit:
   564                           	callstack 0
   565   000001                     ?_precedence:
   566                           	callstack 0
   567   000001                     ?___wmul:
   568                           	callstack 0
   569   000001                     ?___awdiv:
   570                           	callstack 0
   571   000001                     ?___awmod:
   572                           	callstack 0
   573   000001                     ?___fldiv:
   574                           	callstack 0
   575   000001                     ?_labs:
   576                           	callstack 0
   577   000001                     ?_pop_t:
   578                           	callstack 0
   579   000001                     ?___flneg:
   580                           	callstack 0
   581   000001                     ?___fltol:
   582                           	callstack 0
   583   000001                     ?___xxtofl:
   584                           	callstack 0
   585   000001                     initialize_t@stack:
   586                           	callstack 0
   587   000001                     pop_t@stack:
   588                           	callstack 0
   589   000001                     initialize@stack:
   590                           	callstack 0
   591   000001                     push@stack:
   592                           	callstack 0
   593   000001                     pop@stack:
   594                           	callstack 0
   595   000001                     gpio_pin_write_logic@_pin_config:
   596                           	callstack 0
   597   000001                     gpio_pin_read_logic@_pin_config:
   598                           	callstack 0
   599   000001                     ___wmul@multiplier:
   600                           	callstack 0
   601   000001                     ___awdiv@dividend:
   602                           	callstack 0
   603   000001                     ___awmod@dividend:
   604                           	callstack 0
   605   000001                     memset@dest:
   606                           	callstack 0
   607   000001                     memcpy@d1:
   608                           	callstack 0
   609   000001                     fputc@c:
   610                           	callstack 0
   611   000001                     strcpy@dest:
   612                           	callstack 0
   613   000001                     strlen@s:
   614                           	callstack 0
   615   000001                     ___fleq@ff1:
   616                           	callstack 0
   617   000001                     ___flneg@f1:
   618                           	callstack 0
   619   000001                     ___fltol@f1:
   620                           	callstack 0
   621   000001                     ___fldiv@b:
   622                           	callstack 0
   623   000001                     ___xxtofl@val:
   624                           	callstack 0
   625   000001                     ___fpclassifyf@x:
   626                           	callstack 0
   627   000001                     labs@a:
   628                           	callstack 0
   629                           
   630                           ; 4 bytes @ 0x0
   631   000001                     	ds	1
   632   000002                     ??_pop:
   633   000002                     push@c:
   634                           	callstack 0
   635                           
   636                           ; 1 bytes @ 0x1
   637   000002                     	ds	1
   638   000003                     ??_push:
   639   000003                     gpio_pin_write_logic@logic:
   640                           	callstack 0
   641   000003                     gpio_pin_read_logic@logic:
   642                           	callstack 0
   643   000003                     check_digit@c:
   644                           	callstack 0
   645   000003                     precedence@op:
   646                           	callstack 0
   647   000003                     fputc@fp:
   648                           	callstack 0
   649   000003                     strcpy@src:
   650                           	callstack 0
   651   000003                     ___wmul@multiplicand:
   652                           	callstack 0
   653   000003                     ___awdiv@divisor:
   654                           	callstack 0
   655   000003                     ___awmod@divisor:
   656                           	callstack 0
   657   000003                     memset@c:
   658                           	callstack 0
   659   000003                     memcpy@s1:
   660                           	callstack 0
   661   000003                     strlen@a:
   662                           	callstack 0
   663                           
   664                           ; 2 bytes @ 0x2
   665   000003                     	ds	1
   666   000004                     ??_gpio_pin_write_logic:
   667   000004                     ??_gpio_pin_read_logic:
   668   000004                     ??_fputc:
   669   000004                     ??_strcpy:
   670                           
   671                           ; 1 bytes @ 0x3
   672   000004                     	ds	1
   673   000005                     ??___fpclassifyf:
   674   000005                     ??_labs:
   675   000005                     ??_pop_t:
   676   000005                     ??___fltol:
   677   000005                     ??___xxtofl:
   678   000005                     ___awdiv@counter:
   679                           	callstack 0
   680   000005                     ___awmod@counter:
   681                           	callstack 0
   682   000005                     infixToPostfix@infix:
   683                           	callstack 0
   684   000005                     ___wmul@product:
   685                           	callstack 0
   686   000005                     memset@n:
   687                           	callstack 0
   688   000005                     memcpy@n:
   689                           	callstack 0
   690   000005                     strcpy@d:
   691                           	callstack 0
   692   000005                     ___fleq@ff2:
   693                           	callstack 0
   694   000005                     ___fldiv@a:
   695                           	callstack 0
   696                           
   697                           ; 4 bytes @ 0x4
   698   000005                     	ds	1
   699   000006                     ___awdiv@sign:
   700                           	callstack 0
   701   000006                     ___awmod@sign:
   702                           	callstack 0
   703                           
   704                           ; 1 bytes @ 0x5
   705   000006                     	ds	1
   706   000007                     ?_abs:
   707                           	callstack 0
   708   000007                     ?_read_prec_or_width:
   709                           	callstack 0
   710   000007                     read_prec_or_width@fmt:
   711                           	callstack 0
   712   000007                     memcpy@tmp:
   713                           	callstack 0
   714   000007                     infixToPostfix@postfix:
   715                           	callstack 0
   716   000007                     ___awdiv@quotient:
   717                           	callstack 0
   718   000007                     memset@p:
   719                           	callstack 0
   720   000007                     abs@a:
   721                           	callstack 0
   722                           
   723                           ; 2 bytes @ 0x6
   724   000007                     	ds	1
   725   000008                     read_prec_or_width@ap:
   726                           	callstack 0
   727   000008                     memcpy@d:
   728                           	callstack 0
   729                           
   730                           ; 2 bytes @ 0x7
   731   000008                     	ds	1
   732   000009                     ??_infixToPostfix:
   733   000009                     ??___fldiv:
   734   000009                     ??_abs:
   735   000009                     ??___fleq:
   736   000009                     gpio_pin_read_logic@ret:
   737                           	callstack 0
   738   000009                     ___fltol@sign1:
   739                           	callstack 0
   740   000009                     ___xxtofl@sign:
   741                           	callstack 0
   742   000009                     read_prec_or_width@c:
   743                           	callstack 0
   744   000009                     ___fpclassifyf@e:
   745                           	callstack 0
   746   000009                     fputs@s:
   747                           	callstack 0
   748                           
   749                           ; 2 bytes @ 0x8
   750   000009                     	ds	1
   751   00000A                     gpio_pin_write_logic@ret:
   752                           	callstack 0
   753   00000A                     ___fltol@exp1:
   754                           	callstack 0
   755   00000A                     ___xxtofl@exp:
   756                           	callstack 0
   757   00000A                     read_prec_or_width@n:
   758                           	callstack 0
   759   00000A                     memcpy@s:
   760                           	callstack 0
   761                           
   762                           ; 2 bytes @ 0x9
   763   00000A                     	ds	1
   764   00000B                     fputs@fp:
   765                           	callstack 0
   766   00000B                     lcd_send_4bits@lcd:
   767                           	callstack 0
   768   00000B                     lcd_4bit_send_enable_signal@lcd:
   769                           	callstack 0
   770   00000B                     keypad_get_value@_keypad_obj:
   771                           	callstack 0
   772   00000B                     ___xxtofl@arg:
   773                           	callstack 0
   774   00000B                     ___fpclassifyf@u:
   775                           	callstack 0
   776                           
   777                           ; 4 bytes @ 0xA
   778   00000B                     	ds	1
   779   00000C                     infixToPostfix@current:
   780                           	callstack 0
   781   00000C                     fputs@c:
   782                           	callstack 0
   783                           
   784                           ; 1 bytes @ 0xB
   785   00000C                     	ds	1
   786   00000D                     lcd_send_4bits@_data_command:
   787                           	callstack 0
   788   00000D                     lcd_4bit_send_enable_signal@ret:
   789                           	callstack 0
   790   00000D                     keypad_get_value@value:
   791                           	callstack 0
   792   00000D                     infixToPostfix@i:
   793                           	callstack 0
   794   00000D                     fputs@i:
   795                           	callstack 0
   796   00000D                     ___fldiv@rem:
   797                           	callstack 0
   798                           
   799                           ; 4 bytes @ 0xC
   800   00000D                     	ds	1
   801   00000E                     ??_keypad_get_value:
   802   00000E                     lcd_send_4bits@ret:
   803                           	callstack 0
   804                           
   805                           ; 1 bytes @ 0xD
   806   00000E                     	ds	1
   807   00000F                     ?___flmul:
   808                           	callstack 0
   809   00000F                     pad@fp:
   810                           	callstack 0
   811   00000F                     lcd_4bit_send_command@lcd:
   812                           	callstack 0
   813   00000F                     lcd_4bit_send_char_data@lcd:
   814                           	callstack 0
   815   00000F                     infixToPostfix@j:
   816                           	callstack 0
   817   00000F                     ___flmul@b:
   818                           	callstack 0
   819                           
   820                           ; 4 bytes @ 0xE
   821   00000F                     	ds	1
   822   000010                     keypad_get_value@ret:
   823                           	callstack 0
   824   000010                     pad@buf:
   825                           	callstack 0
   826                           
   827                           ; 2 bytes @ 0xF
   828   000010                     	ds	1
   829   000011                     lcd_4bit_send_command@command:
   830                           	callstack 0
   831   000011                     lcd_4bit_send_char_data@data:
   832                           	callstack 0
   833   000011                     keypad_get_value@column_logic:
   834                           	callstack 0
   835   000011                     ___fldiv@sign:
   836                           	callstack 0
   837   000011                     infixToPostfix@operatorStack:
   838                           	callstack 0
   839                           
   840                           ; 102 bytes @ 0x10
   841   000011                     	ds	1
   842   000012                     lcd_4bit_send_command@ret:
   843                           	callstack 0
   844   000012                     lcd_4bit_send_char_data@ret:
   845                           	callstack 0
   846   000012                     keypad_get_value@l_counter:
   847                           	callstack 0
   848   000012                     ___fldiv@new_exp:
   849                           	callstack 0
   850   000012                     pad@p:
   851                           	callstack 0
   852                           
   853                           ; 2 bytes @ 0x11
   854   000012                     	ds	1
   855   000013                     keypad_get_value@l_rows_counter:
   856                           	callstack 0
   857   000013                     lcd_4bit_set_cursor@lcd:
   858                           	callstack 0
   859   000013                     ___flmul@a:
   860                           	callstack 0
   861                           
   862                           ; 4 bytes @ 0x12
   863   000013                     	ds	1
   864   000014                     ??_pad:
   865   000014                     keypad_get_value@l_columns_counter:
   866                           	callstack 0
   867   000014                     ___fldiv@grs:
   868                           	callstack 0
   869                           
   870                           ; 4 bytes @ 0x13
   871   000014                     	ds	1
   872   000015                     lcd_4bit_set_cursor@row:
   873                           	callstack 0
   874   000015                     pad@i:
   875                           	callstack 0
   876                           
   877                           ; 2 bytes @ 0x14
   878   000015                     	ds	1
   879   000016                     lcd_4bit_set_cursor@coulmn:
   880                           	callstack 0
   881                           
   882                           ; 1 bytes @ 0x15
   883   000016                     	ds	1
   884   000017                     ??_lcd_4bit_set_cursor:
   885   000017                     ??___flmul:
   886   000017                     dtoa@fp:
   887                           	callstack 0
   888                           
   889                           ; 1 bytes @ 0x16
   890   000017                     	ds	1
   891   000018                     ___fldiv@bexp:
   892                           	callstack 0
   893   000018                     dtoa@d:
   894                           	callstack 0
   895                           
   896                           ; 2 bytes @ 0x17
   897   000018                     	ds	1
   898   000019                     lcd_4bit_set_cursor@ret:
   899                           	callstack 0
   900   000019                     ___fldiv@aexp:
   901                           	callstack 0
   902                           
   903                           ; 1 bytes @ 0x18
   904   000019                     	ds	1
   905   00001A                     ?_floorf:
   906                           	callstack 0
   907   00001A                     lcd_4bit_send_char_data_pos@lcd:
   908                           	callstack 0
   909   00001A                     lcd_4bit_send_string_pos@lcd:
   910                           	callstack 0
   911   00001A                     _dtoa$1486:
   912                           	callstack 0
   913   00001A                     floorf@x:
   914                           	callstack 0
   915                           
   916                           ; 4 bytes @ 0x19
   917   00001A                     	ds	1
   918   00001B                     ___flmul@sign:
   919                           	callstack 0
   920                           
   921                           ; 1 bytes @ 0x1A
   922   00001B                     	ds	1
   923   00001C                     lcd_4bit_send_char_data_pos@row:
   924                           	callstack 0
   925   00001C                     lcd_4bit_send_string_pos@row:
   926                           	callstack 0
   927   00001C                     ___flmul@aexp:
   928                           	callstack 0
   929   00001C                     dtoa@w:
   930                           	callstack 0
   931                           
   932                           ; 2 bytes @ 0x1B
   933   00001C                     	ds	1
   934   00001D                     lcd_4bit_send_char_data_pos@column:
   935                           	callstack 0
   936   00001D                     lcd_4bit_send_string_pos@column:
   937                           	callstack 0
   938   00001D                     ___flmul@grs:
   939                           	callstack 0
   940                           
   941                           ; 4 bytes @ 0x1C
   942   00001D                     	ds	1
   943   00001E                     ??_floorf:
   944   00001E                     lcd_4bit_send_char_data_pos@data:
   945                           	callstack 0
   946   00001E                     lcd_4bit_send_string_pos@str:
   947                           	callstack 0
   948   00001E                     dtoa@p:
   949                           	callstack 0
   950                           
   951                           ; 2 bytes @ 0x1D
   952   00001E                     	ds	1
   953   00001F                     lcd_4bit_send_char_data_pos@ret:
   954                           	callstack 0
   955                           
   956                           ; 1 bytes @ 0x1E
   957   00001F                     	ds	1
   958   000020                     lcd_4bit_send_string_pos@ret:
   959                           	callstack 0
   960   000020                     dtoa@s:
   961                           	callstack 0
   962                           
   963                           ; 1 bytes @ 0x1F
   964   000020                     	ds	1
   965   000021                     calculation_start@value:
   966                           	callstack 0
   967   000021                     ___flmul@bexp:
   968                           	callstack 0
   969   000021                     dtoa@i:
   970                           	callstack 0
   971                           
   972                           ; 2 bytes @ 0x20
   973   000021                     	ds	1
   974   000022                     ??_calculation_start:
   975   000022                     ___flmul@prod:
   976                           	callstack 0
   977                           
   978                           ; 4 bytes @ 0x21
   979   000022                     	ds	1
   980   000023                     calculation_start@ret:
   981                           	callstack 0
   982                           
   983                           ; 1 bytes @ 0x22
   984   000023                     	ds	1
   985   000024                     calculation_start@i:
   986                           	callstack 0
   987   000024                     floorf@m:
   988                           	callstack 0
   989                           
   990                           ; 4 bytes @ 0x23
   991   000024                     	ds	2
   992   000026                     ___flmul@temp:
   993                           	callstack 0
   994                           
   995                           ; 2 bytes @ 0x25
   996   000026                     	ds	2
   997   000028                     ?___fladd:
   998                           	callstack 0
   999   000028                     floorf@e:
  1000                           	callstack 0
  1001   000028                     ___flge@ff1:
  1002                           	callstack 0
  1003   000028                     ___fladd@b:
  1004                           	callstack 0
  1005                           
  1006                           ; 4 bytes @ 0x27
  1007   000028                     	ds	2
  1008   00002A                     floorf@u:
  1009                           	callstack 0
  1010                           
  1011                           ; 4 bytes @ 0x29
  1012   00002A                     	ds	2
  1013   00002C                     ___flge@ff2:
  1014                           	callstack 0
  1015   00002C                     ___fladd@a:
  1016                           	callstack 0
  1017                           
  1018                           ; 4 bytes @ 0x2B
  1019   00002C                     	ds	4
  1020   000030                     ??___fladd:
  1021   000030                     ??___flge:
  1022                           
  1023                           ; 1 bytes @ 0x2F
  1024   000030                     	ds	4
  1025   000034                     ___fladd@signs:
  1026                           	callstack 0
  1027                           
  1028                           ; 1 bytes @ 0x33
  1029   000034                     	ds	1
  1030   000035                     ___fladd@aexp:
  1031                           	callstack 0
  1032                           
  1033                           ; 1 bytes @ 0x34
  1034   000035                     	ds	1
  1035   000036                     ___fladd@bexp:
  1036                           	callstack 0
  1037                           
  1038                           ; 1 bytes @ 0x35
  1039   000036                     	ds	1
  1040   000037                     ___fladd@grs:
  1041                           	callstack 0
  1042                           
  1043                           ; 1 bytes @ 0x36
  1044   000037                     	ds	1
  1045   000038                     ?___flsub:
  1046                           	callstack 0
  1047   000038                     ___flsub@b:
  1048                           	callstack 0
  1049                           
  1050                           ; 4 bytes @ 0x37
  1051   000038                     	ds	4
  1052   00003C                     ___flsub@a:
  1053                           	callstack 0
  1054                           
  1055                           ; 4 bytes @ 0x3B
  1056   00003C                     	ds	4
  1057   000040                     ?_doMath:
  1058                           	callstack 0
  1059   000040                     efgtoa@fp:
  1060                           	callstack 0
  1061   000040                     doMath@op1:
  1062                           	callstack 0
  1063                           
  1064                           ; 4 bytes @ 0x3F
  1065   000040                     	ds	1
  1066   000041                     efgtoa@f:
  1067                           	callstack 0
  1068                           
  1069                           ; 4 bytes @ 0x40
  1070   000041                     	ds	3
  1071   000044                     doMath@op2:
  1072                           	callstack 0
  1073                           
  1074                           ; 4 bytes @ 0x43
  1075   000044                     	ds	1
  1076   000045                     efgtoa@c:
  1077                           	callstack 0
  1078                           
  1079                           ; 1 bytes @ 0x44
  1080   000045                     	ds	1
  1081   000046                     ??_efgtoa:
  1082                           
  1083                           ; 1 bytes @ 0x45
  1084   000046                     	ds	2
  1085   000048                     doMath@op:
  1086                           	callstack 0
  1087   000048                     efgtoa@ne:
  1088                           	callstack 0
  1089                           
  1090                           ; 2 bytes @ 0x47
  1091   000048                     	ds	1
  1092   000049                     push_t@stack:
  1093                           	callstack 0
  1094                           
  1095                           ; 1 bytes @ 0x48
  1096   000049                     	ds	1
  1097   00004A                     efgtoa@p:
  1098                           	callstack 0
  1099   00004A                     push_t@c:
  1100                           	callstack 0
  1101                           
  1102                           ; 4 bytes @ 0x49
  1103   00004A                     	ds	2
  1104   00004C                     efgtoa@t:
  1105                           	callstack 0
  1106                           
  1107                           ; 2 bytes @ 0x4B
  1108   00004C                     	ds	2
  1109   00004E                     ??_push_t:
  1110   00004E                     _efgtoa$1517:
  1111                           	callstack 0
  1112                           
  1113                           ; 2 bytes @ 0x4D
  1114   00004E                     	ds	2
  1115   000050                     efgtoa@pp:
  1116                           	callstack 0
  1117   000050                     evaluatePostfix@postfix:
  1118                           	callstack 0
  1119                           
  1120                           ; 2 bytes @ 0x4F
  1121   000050                     	ds	1
  1122   000051                     efgtoa@mode:
  1123                           	callstack 0
  1124                           
  1125                           ; 1 bytes @ 0x50
  1126   000051                     	ds	1
  1127   000052                     efgtoa@nmode:
  1128                           	callstack 0
  1129   000052                     evaluatePostfix@result:
  1130                           	callstack 0
  1131                           
  1132                           ; 2 bytes @ 0x51
  1133   000052                     	ds	1
  1134   000053                     efgtoa@d:
  1135                           	callstack 0
  1136                           
  1137                           ; 2 bytes @ 0x52
  1138   000053                     	ds	1
  1139   000054                     ??_evaluatePostfix:
  1140                           
  1141                           ; 1 bytes @ 0x53
  1142   000054                     	ds	1
  1143   000055                     efgtoa@m:
  1144                           	callstack 0
  1145                           
  1146                           ; 2 bytes @ 0x54
  1147   000055                     	ds	2
  1148   000057                     efgtoa@e:
  1149                           	callstack 0
  1150                           
  1151                           ; 2 bytes @ 0x56
  1152   000057                     	ds	2
  1153   000059                     efgtoa@w:
  1154                           	callstack 0
  1155                           
  1156                           ; 2 bytes @ 0x58
  1157   000059                     	ds	2
  1158   00005B                     efgtoa@ou:
  1159                           	callstack 0
  1160                           
  1161                           ; 4 bytes @ 0x5A
  1162   00005B                     	ds	4
  1163   00005F                     efgtoa@i:
  1164                           	callstack 0
  1165                           
  1166                           ; 2 bytes @ 0x5E
  1167   00005F                     	ds	2
  1168   000061                     efgtoa@h:
  1169                           	callstack 0
  1170                           
  1171                           ; 4 bytes @ 0x60
  1172   000061                     	ds	4
  1173   000065                     efgtoa@l:
  1174                           	callstack 0
  1175                           
  1176                           ; 4 bytes @ 0x64
  1177   000065                     	ds	4
  1178   000069                     efgtoa@sign:
  1179                           	callstack 0
  1180                           
  1181                           ; 1 bytes @ 0x68
  1182   000069                     	ds	1
  1183   00006A                     efgtoa@g:
  1184                           	callstack 0
  1185                           
  1186                           ; 4 bytes @ 0x69
  1187   00006A                     	ds	4
  1188   00006E                     efgtoa@n:
  1189                           	callstack 0
  1190                           
  1191                           ; 2 bytes @ 0x6D
  1192   00006E                     	ds	2
  1193   000070                     efgtoa@u:
  1194                           	callstack 0
  1195                           
  1196                           ; 4 bytes @ 0x6F
  1197   000070                     	ds	4
  1198   000074                     vfpfcnvrt@fp:
  1199                           	callstack 0
  1200                           
  1201                           ; 1 bytes @ 0x73
  1202   000074                     	ds	1
  1203   000075                     vfpfcnvrt@fmt:
  1204                           	callstack 0
  1205                           
  1206                           ; 1 bytes @ 0x74
  1207   000075                     	ds	1
  1208   000076                     vfpfcnvrt@ap:
  1209                           	callstack 0
  1210                           
  1211                           ; 1 bytes @ 0x75
  1212   000076                     	ds	1
  1213   000077                     ??_vfpfcnvrt:
  1214                           
  1215                           ; 1 bytes @ 0x76
  1216   000077                     	ds	2
  1217   000079                     vfpfcnvrt@convarg:
  1218                           	callstack 0
  1219                           
  1220                           ; 4 bytes @ 0x78
  1221   000079                     	ds	4
  1222   00007D                     vfpfcnvrt@c:
  1223                           	callstack 0
  1224                           
  1225                           ; 1 bytes @ 0x7C
  1226   00007D                     	ds	1
  1227   00007E                     vfpfcnvrt@cp:
  1228                           	callstack 0
  1229                           
  1230                           ; 1 bytes @ 0x7D
  1231   00007E                     	ds	1
  1232   00007F                     
  1233                           ; 1 bytes @ 0x7E
  1234 ;;
  1235 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1236 ;;
  1237 ;; *************** function _main *****************
  1238 ;; Defined at:
  1239 ;;		line 30 in file "application.c"
  1240 ;; Parameters:    Size  Location     Type
  1241 ;;		None
  1242 ;; Auto vars:     Size  Location     Type
  1243 ;;  i               1  107[BANK0 ] unsigned char 
  1244 ;;  i               2  105[BANK0 ] int 
  1245 ;;  ret             1    0        unsigned char 
  1246 ;; Return value:  Size  Location     Type
  1247 ;;                  2  505[None  ] int 
  1248 ;; Registers used:
  1249 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, bsr, status,2, status,0, pcl, pclath, pclatu, btemp, b
      +temp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, 
      +btemp+14, btemp+15, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, 
      +btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, cs
      +tack
  1250 ;; Tracked objects:
  1251 ;;		On entry : 0/0
  1252 ;;		On exit  : 0/0
  1253 ;;		Unchanged: 0/0
  1254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1256 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1257 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1258 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1259 ;;Total ram usage:        5 bytes
  1260 ;; Hardware stack levels required when called: 8
  1261 ;; This function calls:
  1262 ;;		_application_initialize
  1263 ;;		_calculation_start
  1264 ;;		_evaluatePostfix
  1265 ;;		_infixToPostfix
  1266 ;;		_keypad_get_value
  1267 ;;		_lcd_4bit_send_char_data
  1268 ;;		_lcd_4bit_send_char_data_pos
  1269 ;;		_lcd_4bit_send_command
  1270 ;;		_lcd_4bit_send_string_pos
  1271 ;;		_memset
  1272 ;;		_sprintf
  1273 ;;		_strlen
  1274 ;; This function is called by:
  1275 ;;		Startup code after reset
  1276 ;; This function uses a non-reentrant model
  1277 ;;
  1278                           
  1279                           	psect	text0
  1280   001EB0                     __ptext0:
  1281                           	callstack 0
  1282   001EB0                     _main:
  1283                           	callstack 23
  1284   001EB0                     
  1285                           ;application.c: 32:     application_initialize();
  1286   001EB0  ECC1  F025         	call	_application_initialize	;wreg free
  1287   001EB4                     l8795:
  1288   001EB4  0E95               	movlw	low _pad1
  1289   001EB6  6E0B               	movwf	keypad_get_value@_keypad_obj^0,c
  1290   001EB8  0E01               	movlw	high _pad1
  1291   001EBA  6E0C               	movwf	(keypad_get_value@_keypad_obj+1)^0,c
  1292   001EBC  0EFE               	movlw	low _val
  1293   001EBE  6E0D               	movwf	keypad_get_value@value^0,c
  1294   001EC0  EC15  F01D         	call	_keypad_get_value	;wreg free
  1295   001EC4                     
  1296                           ;application.c: 36:         if (val == 'A' && start_flag == 0) {
  1297   001EC4  0E41               	movlw	65
  1298   001EC6  0100               	movlb	0	; () banked
  1299   001EC8  19FE               	xorwf	_val& (0+255),w,b
  1300   001ECA  A4D8               	btfss	status,2,c
  1301   001ECC  EF6A  F00F         	goto	u9741
  1302   001ED0  EF6C  F00F         	goto	u9740
  1303   001ED4                     u9741:
  1304   001ED4  EF7A  F00F         	goto	l8803
  1305   001ED8                     u9740:
  1306   001ED8                     
  1307                           ; BSR set to: 0
  1308   001ED8  51F7               	movf	_start_flag& (0+255),w,b
  1309   001EDA  A4D8               	btfss	status,2,c
  1310   001EDC  EF72  F00F         	goto	u9751
  1311   001EE0  EF74  F00F         	goto	u9750
  1312   001EE4                     u9751:
  1313   001EE4  EF7A  F00F         	goto	l8803
  1314   001EE8                     u9750:
  1315   001EE8                     
  1316                           ; BSR set to: 0
  1317   001EE8  0EFE               	movlw	low _val
  1318   001EEA  6E21               	movwf	calculation_start@value^0,c
  1319   001EEC  ECDA  F021         	call	_calculation_start	;wreg free
  1320                           
  1321                           ;application.c: 38:         } else if (val == 'A' && start_flag == 1) {
  1322   001EF0  EFC3  F00F         	goto	l8825
  1323   001EF4                     l8803:
  1324                           
  1325                           ; BSR set to: 0
  1326   001EF4  0E41               	movlw	65
  1327   001EF6  19FE               	xorwf	_val& (0+255),w,b
  1328   001EF8  A4D8               	btfss	status,2,c
  1329   001EFA  EF81  F00F         	goto	u9761
  1330   001EFE  EF83  F00F         	goto	u9760
  1331   001F02                     u9761:
  1332   001F02  EFC3  F00F         	goto	l8825
  1333   001F06                     u9760:
  1334   001F06                     
  1335                           ; BSR set to: 0
  1336   001F06  05F7               	decf	_start_flag& (0+255),w,b
  1337   001F08  A4D8               	btfss	status,2,c
  1338   001F0A  EF89  F00F         	goto	u9771
  1339   001F0E  EF8B  F00F         	goto	u9770
  1340   001F12                     u9771:
  1341   001F12  EFC3  F00F         	goto	l8825
  1342   001F16                     u9770:
  1343   001F16                     
  1344                           ; BSR set to: 0
  1345                           ;application.c: 39:             val = '#';
  1346   001F16  0E23               	movlw	35
  1347   001F18  6FFE               	movwf	_val& (0+255),b
  1348   001F1A                     
  1349                           ; BSR set to: 0
  1350   001F1A  0E9F               	movlw	low _my_lcd
  1351   001F1C  6E0F               	movwf	lcd_4bit_send_command@lcd^0,c
  1352   001F1E  0E01               	movlw	high _my_lcd
  1353   001F20  6E10               	movwf	(lcd_4bit_send_command@lcd+1)^0,c
  1354   001F22  0E01               	movlw	1
  1355   001F24  6E11               	movwf	lcd_4bit_send_command@command^0,c
  1356   001F26  EC29  F022         	call	_lcd_4bit_send_command	;wreg free
  1357   001F2A                     
  1358                           ;application.c: 41:             memset(infix, '\0', 100);
  1359   001F2A  0E64               	movlw	low _infix
  1360   001F2C  6E01               	movwf	memset@dest^0,c
  1361   001F2E  0E02               	movlw	high _infix
  1362   001F30  6E02               	movwf	(memset@dest+1)^0,c
  1363   001F32  0E00               	movlw	0
  1364   001F34  6E04               	movwf	(memset@c+1)^0,c
  1365   001F36  0E00               	movlw	0
  1366   001F38  6E03               	movwf	memset@c^0,c
  1367   001F3A  0E00               	movlw	0
  1368   001F3C  6E06               	movwf	(memset@n+1)^0,c
  1369   001F3E  0E64               	movlw	100
  1370   001F40  6E05               	movwf	memset@n^0,c
  1371   001F42  EC9B  F024         	call	_memset	;wreg free
  1372   001F46                     
  1373                           ;application.c: 42:             memset(postfix, '\0', 100);
  1374   001F46  0E00               	movlw	low _postfix
  1375   001F48  6E01               	movwf	memset@dest^0,c
  1376   001F4A  0E02               	movlw	high _postfix
  1377   001F4C  6E02               	movwf	(memset@dest+1)^0,c
  1378   001F4E  0E00               	movlw	0
  1379   001F50  6E04               	movwf	(memset@c+1)^0,c
  1380   001F52  0E00               	movlw	0
  1381   001F54  6E03               	movwf	memset@c^0,c
  1382   001F56  0E00               	movlw	0
  1383   001F58  6E06               	movwf	(memset@n+1)^0,c
  1384   001F5A  0E64               	movlw	100
  1385   001F5C  6E05               	movwf	memset@n^0,c
  1386   001F5E  EC9B  F024         	call	_memset	;wreg free
  1387   001F62                     
  1388                           ;application.c: 43:             res_counter = 0;
  1389   001F62  0E00               	movlw	0
  1390   001F64  0100               	movlb	0	; () banked
  1391   001F66  6FF5               	movwf	_res_counter& (0+255),b
  1392   001F68                     
  1393                           ; BSR set to: 0
  1394                           ;application.c: 44:             pos = 1;
  1395   001F68  0E01               	movlw	1
  1396   001F6A  6FFF               	movwf	_pos& (0+255),b
  1397   001F6C                     
  1398                           ; BSR set to: 0
  1399                           ;application.c: 45:             equal_flag = 0;
  1400   001F6C  0E00               	movlw	0
  1401   001F6E  6FF4               	movwf	_equal_flag& (0+255),b
  1402   001F70                     
  1403                           ; BSR set to: 0
  1404                           ;application.c: 46:             calcState = STATE_INITIAL;
  1405   001F70  0E00               	movlw	0
  1406   001F72  6FF3               	movwf	_calcState& (0+255),b
  1407   001F74                     
  1408                           ; BSR set to: 0
  1409                           ;application.c: 47:             previousResult = 0;
  1410   001F74  0E00               	movlw	0
  1411   001F76  0101               	movlb	1	; () banked
  1412   001F78  6F08               	movwf	_previousResult& (0+255),b
  1413   001F7A  0E00               	movlw	0
  1414   001F7C  6F09               	movwf	(_previousResult+1)& (0+255),b
  1415   001F7E  0E00               	movlw	0
  1416   001F80  6F0A               	movwf	(_previousResult+2)& (0+255),b
  1417   001F82  0E00               	movlw	0
  1418   001F84  6F0B               	movwf	(_previousResult+3)& (0+255),b
  1419   001F86                     l8825:
  1420                           
  1421                           ;application.c: 52:         for (int i = 0; i < 8; i++) {
  1422   001F86  0E00               	movlw	0
  1423   001F88  0100               	movlb	0	; () banked
  1424   001F8A  6FEA               	movwf	(main@i+1)& (0+255),b
  1425   001F8C  0E00               	movlw	0
  1426   001F8E  6FE9               	movwf	main@i& (0+255),b
  1427   001F90                     l8831:
  1428                           
  1429                           ; BSR set to: 0
  1430                           ;application.c: 53:             if (val == operators[i]) {
  1431   001F90  0E8D               	movlw	low _operators
  1432   001F92  25E9               	addwf	main@i& (0+255),w,b
  1433   001F94  6ED9               	movwf	fsr2l,c
  1434   001F96  0E01               	movlw	high _operators
  1435   001F98  21EA               	addwfc	(main@i+1)& (0+255),w,b
  1436   001F9A  6EDA               	movwf	fsr2h,c
  1437   001F9C  51FE               	movf	_val& (0+255),w,b
  1438   001F9E  18DE               	xorwf	postinc2,w,c
  1439   001FA0  A4D8               	btfss	status,2,c
  1440   001FA2  EFD5  F00F         	goto	u9781
  1441   001FA6  EFD7  F00F         	goto	u9780
  1442   001FAA                     u9781:
  1443   001FAA  EFD9  F00F         	goto	l8835
  1444   001FAE                     u9780:
  1445   001FAE                     
  1446                           ; BSR set to: 0
  1447                           ;application.c: 54:                 flag = 1;
  1448   001FAE  0E01               	movlw	1
  1449   001FB0  6FF6               	movwf	_flag& (0+255),b
  1450   001FB2                     l8835:
  1451                           
  1452                           ; BSR set to: 0
  1453                           ;application.c: 58:         }
  1454   001FB2  4BE9               	infsnz	main@i& (0+255),f,b
  1455   001FB4  2BEA               	incf	(main@i+1)& (0+255),f,b
  1456   001FB6                     
  1457                           ; BSR set to: 0
  1458   001FB6  BFEA               	btfsc	(main@i+1)& (0+255),7,b
  1459   001FB8  EFE7  F00F         	goto	u9791
  1460   001FBC  51EA               	movf	(main@i+1)& (0+255),w,b
  1461   001FBE  E109               	bnz	u9790
  1462   001FC0  0E08               	movlw	8
  1463   001FC2  5DE9               	subwf	main@i& (0+255),w,b
  1464   001FC4  A0D8               	btfss	status,0,c
  1465   001FC6  EFE7  F00F         	goto	u9791
  1466   001FCA  EFE9  F00F         	goto	u9790
  1467   001FCE                     u9791:
  1468   001FCE  EFC8  F00F         	goto	l8831
  1469   001FD2                     u9790:
  1470   001FD2                     
  1471                           ; BSR set to: 0
  1472                           ;application.c: 60:         if (flag == 1 && calcState == STATE_END) {
  1473   001FD2  05F6               	decf	_flag& (0+255),w,b
  1474   001FD4  A4D8               	btfss	status,2,c
  1475   001FD6  EFEF  F00F         	goto	u9801
  1476   001FDA  EFF1  F00F         	goto	u9800
  1477   001FDE                     u9801:
  1478   001FDE  EF75  F010         	goto	l8869
  1479   001FE2                     u9800:
  1480   001FE2                     
  1481                           ; BSR set to: 0
  1482   001FE2  0E03               	movlw	3
  1483   001FE4  19F3               	xorwf	_calcState& (0+255),w,b
  1484   001FE6  A4D8               	btfss	status,2,c
  1485   001FE8  EFF8  F00F         	goto	u9811
  1486   001FEC  EFFA  F00F         	goto	u9810
  1487   001FF0                     u9811:
  1488   001FF0  EF75  F010         	goto	l8869
  1489   001FF4                     u9810:
  1490   001FF4                     
  1491                           ; BSR set to: 0
  1492                           ;application.c: 61:             calcState = STATE_WAITING_FOR_OPERAND;
  1493   001FF4  0E01               	movlw	1
  1494   001FF6  6FF3               	movwf	_calcState& (0+255),b
  1495   001FF8                     
  1496                           ; BSR set to: 0
  1497                           ;application.c: 62:             lcd_4bit_send_command(&my_lcd, 0X01);
  1498   001FF8  0E9F               	movlw	low _my_lcd
  1499   001FFA  6E0F               	movwf	lcd_4bit_send_command@lcd^0,c
  1500   001FFC  0E01               	movlw	high _my_lcd
  1501   001FFE  6E10               	movwf	(lcd_4bit_send_command@lcd+1)^0,c
  1502   002000  0E01               	movlw	1
  1503   002002  6E11               	movwf	lcd_4bit_send_command@command^0,c
  1504   002004  EC29  F022         	call	_lcd_4bit_send_command	;wreg free
  1505   002008                     
  1506                           ;application.c: 63:             memset(infix, '\0', 100);
  1507   002008  0E64               	movlw	low _infix
  1508   00200A  6E01               	movwf	memset@dest^0,c
  1509   00200C  0E02               	movlw	high _infix
  1510   00200E  6E02               	movwf	(memset@dest+1)^0,c
  1511   002010  0E00               	movlw	0
  1512   002012  6E04               	movwf	(memset@c+1)^0,c
  1513   002014  0E00               	movlw	0
  1514   002016  6E03               	movwf	memset@c^0,c
  1515   002018  0E00               	movlw	0
  1516   00201A  6E06               	movwf	(memset@n+1)^0,c
  1517   00201C  0E64               	movlw	100
  1518   00201E  6E05               	movwf	memset@n^0,c
  1519   002020  EC9B  F024         	call	_memset	;wreg free
  1520   002024                     
  1521                           ;application.c: 64:             memset(postfix, '\0', 100);
  1522   002024  0E00               	movlw	low _postfix
  1523   002026  6E01               	movwf	memset@dest^0,c
  1524   002028  0E02               	movlw	high _postfix
  1525   00202A  6E02               	movwf	(memset@dest+1)^0,c
  1526   00202C  0E00               	movlw	0
  1527   00202E  6E04               	movwf	(memset@c+1)^0,c
  1528   002030  0E00               	movlw	0
  1529   002032  6E03               	movwf	memset@c^0,c
  1530   002034  0E00               	movlw	0
  1531   002036  6E06               	movwf	(memset@n+1)^0,c
  1532   002038  0E64               	movlw	100
  1533   00203A  6E05               	movwf	memset@n^0,c
  1534   00203C  EC9B  F024         	call	_memset	;wreg free
  1535   002040                     
  1536                           ;application.c: 65:             res_counter = 0;
  1537   002040  0E00               	movlw	0
  1538   002042  0100               	movlb	0	; () banked
  1539   002044  6FF5               	movwf	_res_counter& (0+255),b
  1540   002046                     
  1541                           ; BSR set to: 0
  1542                           ;application.c: 66:             for (uint8_t i = 0; i < strlen(arr); i++) {
  1543   002046  0E00               	movlw	0
  1544   002048  6FEB               	movwf	main@i_853& (0+255),b
  1545   00204A  EF46  F010         	goto	l8863
  1546   00204E                     l8855:
  1547                           
  1548                           ; BSR set to: 0
  1549                           ;application.c: 67:                 infix[i] = arr[i];
  1550   00204E  0E60               	movlw	low _arr
  1551   002050  25EB               	addwf	main@i_853& (0+255),w,b
  1552   002052  6ED9               	movwf	fsr2l,c
  1553   002054  6ADA               	clrf	fsr2h,c
  1554   002056  0E01               	movlw	high _arr
  1555   002058  22DA               	addwfc	fsr2h,f,c
  1556   00205A  0E64               	movlw	low _infix
  1557   00205C  25EB               	addwf	main@i_853& (0+255),w,b
  1558   00205E  6EE1               	movwf	fsr1l,c
  1559   002060  6AE2               	clrf	fsr1h,c
  1560   002062  0E02               	movlw	high _infix
  1561   002064  22E2               	addwfc	fsr1h,f,c
  1562   002066  CFDF FFE7          	movff	indf2,indf1
  1563   00206A                     
  1564                           ; BSR set to: 0
  1565                           ;application.c: 68:                 lcd_4bit_send_char_data(&my_lcd, infix[i]);
  1566   00206A  0E9F               	movlw	low _my_lcd
  1567   00206C  6E0F               	movwf	lcd_4bit_send_char_data@lcd^0,c
  1568   00206E  0E01               	movlw	high _my_lcd
  1569   002070  6E10               	movwf	(lcd_4bit_send_char_data@lcd+1)^0,c
  1570   002072  0E64               	movlw	low _infix
  1571   002074  25EB               	addwf	main@i_853& (0+255),w,b
  1572   002076  6ED9               	movwf	fsr2l,c
  1573   002078  6ADA               	clrf	fsr2h,c
  1574   00207A  0E02               	movlw	high _infix
  1575   00207C  22DA               	addwfc	fsr2h,f,c
  1576   00207E  50DF               	movf	indf2,w,c
  1577   002080  6E11               	movwf	lcd_4bit_send_char_data@data^0,c
  1578   002082  EC62  F022         	call	_lcd_4bit_send_char_data	;wreg free
  1579   002086                     
  1580                           ;application.c: 69:                 res_counter++;
  1581   002086  0100               	movlb	0	; () banked
  1582   002088  2BF5               	incf	_res_counter& (0+255),f,b
  1583   00208A                     
  1584                           ; BSR set to: 0
  1585                           ;application.c: 70:             }
  1586   00208A  2BEB               	incf	main@i_853& (0+255),f,b
  1587   00208C                     l8863:
  1588                           
  1589                           ; BSR set to: 0
  1590   00208C  0E60               	movlw	low _arr
  1591   00208E  6E01               	movwf	strlen@s^0,c
  1592   002090  0E01               	movlw	high _arr
  1593   002092  6E02               	movwf	(strlen@s+1)^0,c
  1594   002094  EC0A  F025         	call	_strlen	;wreg free
  1595   002098  0100               	movlb	0	; () banked
  1596   00209A  51EB               	movf	main@i_853& (0+255),w,b
  1597   00209C  6FE7               	movwf	??_main& (0+255),b
  1598   00209E  6BE8               	clrf	(??_main+1)& (0+255),b
  1599   0020A0  5001               	movf	?_strlen^0,w,c
  1600   0020A2  5DE7               	subwf	??_main& (0+255),w,b
  1601   0020A4  5002               	movf	(?_strlen+1)^0,w,c
  1602   0020A6  59E8               	subwfb	(??_main+1)& (0+255),w,b
  1603   0020A8  A0D8               	btfss	status,0,c
  1604   0020AA  EF59  F010         	goto	u9821
  1605   0020AE  EF5B  F010         	goto	u9820
  1606   0020B2                     u9821:
  1607   0020B2  EF27  F010         	goto	l8855
  1608   0020B6                     u9820:
  1609   0020B6                     
  1610                           ; BSR set to: 0
  1611                           ;application.c: 71:             pos = strlen(arr) + 1;
  1612   0020B6  0E60               	movlw	low _arr
  1613   0020B8  6E01               	movwf	strlen@s^0,c
  1614   0020BA  0E01               	movlw	high _arr
  1615   0020BC  6E02               	movwf	(strlen@s+1)^0,c
  1616   0020BE  EC0A  F025         	call	_strlen	;wreg free
  1617   0020C2  2801               	incf	?_strlen^0,w,c
  1618   0020C4  0100               	movlb	0	; () banked
  1619   0020C6  6FFF               	movwf	_pos& (0+255),b
  1620                           
  1621                           ;application.c: 72:             memset(arr, '\0', 11);
  1622   0020C8  0E60               	movlw	low _arr
  1623   0020CA  6E01               	movwf	memset@dest^0,c
  1624   0020CC  0E01               	movlw	high _arr
  1625   0020CE  6E02               	movwf	(memset@dest+1)^0,c
  1626   0020D0  0E00               	movlw	0
  1627   0020D2  6E04               	movwf	(memset@c+1)^0,c
  1628   0020D4  0E00               	movlw	0
  1629   0020D6  6E03               	movwf	memset@c^0,c
  1630   0020D8  0E00               	movlw	0
  1631   0020DA  6E06               	movwf	(memset@n+1)^0,c
  1632   0020DC  0E0B               	movlw	11
  1633   0020DE  6E05               	movwf	memset@n^0,c
  1634   0020E0  EC9B  F024         	call	_memset	;wreg free
  1635   0020E4                     
  1636                           ;application.c: 73:             equal_flag = 0;
  1637   0020E4  0E00               	movlw	0
  1638   0020E6  0100               	movlb	0	; () banked
  1639   0020E8  6FF4               	movwf	_equal_flag& (0+255),b
  1640   0020EA                     l8869:
  1641                           
  1642                           ; BSR set to: 0
  1643                           ;application.c: 76:         if (flag != 1 && start_flag == 1 && val != '#') {
  1644   0020EA  05F6               	decf	_flag& (0+255),w,b
  1645   0020EC  B4D8               	btfsc	status,2,c
  1646   0020EE  EF7B  F010         	goto	u9831
  1647   0020F2  EF7D  F010         	goto	u9830
  1648   0020F6                     u9831:
  1649   0020F6  EFE4  F010         	goto	l8901
  1650   0020FA                     u9830:
  1651   0020FA                     
  1652                           ; BSR set to: 0
  1653   0020FA  05F7               	decf	_start_flag& (0+255),w,b
  1654   0020FC  A4D8               	btfss	status,2,c
  1655   0020FE  EF83  F010         	goto	u9841
  1656   002102  EF85  F010         	goto	u9840
  1657   002106                     u9841:
  1658   002106  EFE4  F010         	goto	l8901
  1659   00210A                     u9840:
  1660   00210A                     
  1661                           ; BSR set to: 0
  1662   00210A  0E23               	movlw	35
  1663   00210C  19FE               	xorwf	_val& (0+255),w,b
  1664   00210E  B4D8               	btfsc	status,2,c
  1665   002110  EF8C  F010         	goto	u9851
  1666   002114  EF8E  F010         	goto	u9850
  1667   002118                     u9851:
  1668   002118  EFE4  F010         	goto	l8901
  1669   00211C                     u9850:
  1670   00211C                     
  1671                           ; BSR set to: 0
  1672                           ;application.c: 77:             if (equal_flag == 1 || calcState == STATE_INITIAL) {
  1673   00211C  05F4               	decf	_equal_flag& (0+255),w,b
  1674   00211E  B4D8               	btfsc	status,2,c
  1675   002120  EF94  F010         	goto	u9861
  1676   002124  EF96  F010         	goto	u9860
  1677   002128                     u9861:
  1678   002128  EF9E  F010         	goto	l8879
  1679   00212C                     u9860:
  1680   00212C                     
  1681                           ; BSR set to: 0
  1682   00212C  51F3               	movf	_calcState& (0+255),w,b
  1683   00212E  A4D8               	btfss	status,2,c
  1684   002130  EF9C  F010         	goto	u9871
  1685   002134  EF9E  F010         	goto	u9870
  1686   002138                     u9871:
  1687   002138  EFCB  F010         	goto	l8893
  1688   00213C                     u9870:
  1689   00213C                     l8879:
  1690                           
  1691                           ; BSR set to: 0
  1692   00213C  0E9F               	movlw	low _my_lcd
  1693   00213E  6E0F               	movwf	lcd_4bit_send_command@lcd^0,c
  1694   002140  0E01               	movlw	high _my_lcd
  1695   002142  6E10               	movwf	(lcd_4bit_send_command@lcd+1)^0,c
  1696   002144  0E01               	movlw	1
  1697   002146  6E11               	movwf	lcd_4bit_send_command@command^0,c
  1698   002148  EC29  F022         	call	_lcd_4bit_send_command	;wreg free
  1699   00214C                     
  1700                           ;application.c: 79:                 memset(infix, '\0', 100);
  1701   00214C  0E64               	movlw	low _infix
  1702   00214E  6E01               	movwf	memset@dest^0,c
  1703   002150  0E02               	movlw	high _infix
  1704   002152  6E02               	movwf	(memset@dest+1)^0,c
  1705   002154  0E00               	movlw	0
  1706   002156  6E04               	movwf	(memset@c+1)^0,c
  1707   002158  0E00               	movlw	0
  1708   00215A  6E03               	movwf	memset@c^0,c
  1709   00215C  0E00               	movlw	0
  1710   00215E  6E06               	movwf	(memset@n+1)^0,c
  1711   002160  0E64               	movlw	100
  1712   002162  6E05               	movwf	memset@n^0,c
  1713   002164  EC9B  F024         	call	_memset	;wreg free
  1714   002168                     
  1715                           ;application.c: 80:                 memset(postfix, '\0', 100);
  1716   002168  0E00               	movlw	low _postfix
  1717   00216A  6E01               	movwf	memset@dest^0,c
  1718   00216C  0E02               	movlw	high _postfix
  1719   00216E  6E02               	movwf	(memset@dest+1)^0,c
  1720   002170  0E00               	movlw	0
  1721   002172  6E04               	movwf	(memset@c+1)^0,c
  1722   002174  0E00               	movlw	0
  1723   002176  6E03               	movwf	memset@c^0,c
  1724   002178  0E00               	movlw	0
  1725   00217A  6E06               	movwf	(memset@n+1)^0,c
  1726   00217C  0E64               	movlw	100
  1727   00217E  6E05               	movwf	memset@n^0,c
  1728   002180  EC9B  F024         	call	_memset	;wreg free
  1729   002184                     
  1730                           ;application.c: 81:                 res_counter = 0;
  1731   002184  0E00               	movlw	0
  1732   002186  0100               	movlb	0	; () banked
  1733   002188  6FF5               	movwf	_res_counter& (0+255),b
  1734   00218A                     
  1735                           ; BSR set to: 0
  1736                           ;application.c: 82:                 pos = 1;
  1737   00218A  0E01               	movlw	1
  1738   00218C  6FFF               	movwf	_pos& (0+255),b
  1739   00218E                     
  1740                           ; BSR set to: 0
  1741                           ;application.c: 83:                 equal_flag = 0;
  1742   00218E  0E00               	movlw	0
  1743   002190  6FF4               	movwf	_equal_flag& (0+255),b
  1744   002192                     
  1745                           ; BSR set to: 0
  1746                           ;application.c: 84:                 calcState = STATE_WAITING_FOR_OPERATOR;
  1747   002192  0E02               	movlw	2
  1748   002194  6FF3               	movwf	_calcState& (0+255),b
  1749   002196                     l8893:
  1750                           
  1751                           ; BSR set to: 0
  1752                           ;application.c: 87:             infix[res_counter] = val;
  1753   002196  0E64               	movlw	low _infix
  1754   002198  25F5               	addwf	_res_counter& (0+255),w,b
  1755   00219A  6ED9               	movwf	fsr2l,c
  1756   00219C  6ADA               	clrf	fsr2h,c
  1757   00219E  0E02               	movlw	high _infix
  1758   0021A0  22DA               	addwfc	fsr2h,f,c
  1759   0021A2  C0FE  FFDF         	movff	_val,indf2
  1760   0021A6                     
  1761                           ; BSR set to: 0
  1762   0021A6  0E9F               	movlw	low _my_lcd
  1763   0021A8  6E1A               	movwf	lcd_4bit_send_char_data_pos@lcd^0,c
  1764   0021AA  0E01               	movlw	high _my_lcd
  1765   0021AC  6E1B               	movwf	(lcd_4bit_send_char_data_pos@lcd+1)^0,c
  1766   0021AE  0E01               	movlw	1
  1767   0021B0  6E1C               	movwf	lcd_4bit_send_char_data_pos@row^0,c
  1768   0021B2  C0FF  F01D         	movff	_pos,lcd_4bit_send_char_data_pos@column
  1769   0021B6  C0FE  F01E         	movff	_val,lcd_4bit_send_char_data_pos@data
  1770   0021BA  ECBC  F023         	call	_lcd_4bit_send_char_data_pos	;wreg free
  1771   0021BE                     
  1772                           ;application.c: 89:             res_counter++;
  1773   0021BE  0100               	movlb	0	; () banked
  1774   0021C0  2BF5               	incf	_res_counter& (0+255),f,b
  1775   0021C2                     
  1776                           ; BSR set to: 0
  1777                           ;application.c: 90:             pos++;
  1778   0021C2  2BFF               	incf	_pos& (0+255),f,b
  1779                           
  1780                           ;application.c: 91:         } else if (flag == 1 && start_flag == 1) {
  1781   0021C4  EF8D  F011         	goto	l8937
  1782   0021C8                     l8901:
  1783                           
  1784                           ; BSR set to: 0
  1785   0021C8  05F6               	decf	_flag& (0+255),w,b
  1786   0021CA  A4D8               	btfss	status,2,c
  1787   0021CC  EFEA  F010         	goto	u9881
  1788   0021D0  EFEC  F010         	goto	u9880
  1789   0021D4                     u9881:
  1790   0021D4  EF8D  F011         	goto	l8937
  1791   0021D8                     u9880:
  1792   0021D8                     
  1793                           ; BSR set to: 0
  1794   0021D8  05F7               	decf	_start_flag& (0+255),w,b
  1795   0021DA  A4D8               	btfss	status,2,c
  1796   0021DC  EFF2  F010         	goto	u9891
  1797   0021E0  EFF4  F010         	goto	u9890
  1798   0021E4                     u9891:
  1799   0021E4  EF8D  F011         	goto	l8937
  1800   0021E8                     u9890:
  1801   0021E8  EF12  F011         	goto	l8919
  1802   0021EC                     l529:
  1803                           
  1804                           ; BSR set to: 0
  1805                           ;application.c: 97:                     op[0] = val;
  1806   0021EC  C0FE  F0F0         	movff	_val,_op
  1807   0021F0                     
  1808                           ; BSR set to: 0
  1809                           ;application.c: 98:                     infix[res_counter] = val;
  1810   0021F0  0E64               	movlw	low _infix
  1811   0021F2  25F5               	addwf	_res_counter& (0+255),w,b
  1812   0021F4  6ED9               	movwf	fsr2l,c
  1813   0021F6  6ADA               	clrf	fsr2h,c
  1814   0021F8  0E02               	movlw	high _infix
  1815   0021FA  22DA               	addwfc	fsr2h,f,c
  1816   0021FC  C0FE  FFDF         	movff	_val,indf2
  1817   002200                     
  1818                           ; BSR set to: 0
  1819                           ;application.c: 99:                     res_counter++;
  1820   002200  2BF5               	incf	_res_counter& (0+255),f,b
  1821                           
  1822                           ;application.c: 100:                     break;
  1823   002202  EF33  F011         	goto	l8921
  1824   002206                     l8911:
  1825                           
  1826                           ; BSR set to: 0
  1827                           ;application.c: 102:                     op[0] = '=';
  1828   002206  0E3D               	movlw	61
  1829   002208  6FF0               	movwf	_op& (0+255),b
  1830                           
  1831                           ;application.c: 103:                     equal_flag = 1;
  1832   00220A  0E01               	movlw	1
  1833   00220C  6FF4               	movwf	_equal_flag& (0+255),b
  1834   00220E                     
  1835                           ; BSR set to: 0
  1836                           ;application.c: 104:                     infix[res_counter] = '\0';
  1837   00220E  0E64               	movlw	low _infix
  1838   002210  25F5               	addwf	_res_counter& (0+255),w,b
  1839   002212  6ED9               	movwf	fsr2l,c
  1840   002214  6ADA               	clrf	fsr2h,c
  1841   002216  0E02               	movlw	high _infix
  1842   002218  22DA               	addwfc	fsr2h,f,c
  1843   00221A  6ADF               	clrf	indf2,c
  1844   00221C                     
  1845                           ; BSR set to: 0
  1846                           ;application.c: 105:                     calcState = STATE_END;
  1847   00221C  0E03               	movlw	3
  1848   00221E  6FF3               	movwf	_calcState& (0+255),b
  1849                           
  1850                           ;application.c: 106:                     break;
  1851   002220  EF33  F011         	goto	l8921
  1852   002224                     l8919:
  1853                           
  1854                           ; BSR set to: 0
  1855   002224  51FE               	movf	_val& (0+255),w,b
  1856   002226  6FE7               	movwf	??_main& (0+255),b
  1857   002228  6BE8               	clrf	(??_main+1)& (0+255),b
  1858                           
  1859                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1860                           ; Switch size 1, requested type "simple"
  1861                           ; Number of cases is 1, Range of values is 0 to 0
  1862                           ; switch strategies available:
  1863                           ; Name         Instructions Cycles
  1864                           ; simple_byte            4     3 (average)
  1865                           ;	Chosen strategy is simple_byte
  1866   00222A  51E8               	movf	(??_main+1)& (0+255),w,b
  1867   00222C  0A00               	xorlw	0	; case 0
  1868   00222E  B4D8               	btfsc	status,2,c
  1869   002230  EF1C  F011         	goto	l9077
  1870   002234  EF33  F011         	goto	l8921
  1871   002238                     l9077:
  1872                           
  1873                           ; BSR set to: 0
  1874                           ; Switch size 1, requested type "simple"
  1875                           ; Number of cases is 5, Range of values is 42 to 61
  1876                           ; switch strategies available:
  1877                           ; Name         Instructions Cycles
  1878                           ; simple_byte           16     9 (average)
  1879                           ;	Chosen strategy is simple_byte
  1880   002238  51E7               	movf	??_main& (0+255),w,b
  1881   00223A  0A2A               	xorlw	42	; case 42
  1882   00223C  B4D8               	btfsc	status,2,c
  1883   00223E  EFF6  F010         	goto	l529
  1884   002242  0A01               	xorlw	1	; case 43
  1885   002244  B4D8               	btfsc	status,2,c
  1886   002246  EFF6  F010         	goto	l529
  1887   00224A  0A06               	xorlw	6	; case 45
  1888   00224C  B4D8               	btfsc	status,2,c
  1889   00224E  EFF6  F010         	goto	l529
  1890   002252  0A02               	xorlw	2	; case 47
  1891   002254  B4D8               	btfsc	status,2,c
  1892   002256  EFF6  F010         	goto	l529
  1893   00225A  0A12               	xorlw	18	; case 61
  1894   00225C  B4D8               	btfsc	status,2,c
  1895   00225E  EF03  F011         	goto	l8911
  1896   002262  EF33  F011         	goto	l8921
  1897   002266                     l8921:
  1898                           
  1899                           ; BSR set to: 0
  1900   002266  0E9F               	movlw	low _my_lcd
  1901   002268  6E1A               	movwf	lcd_4bit_send_char_data_pos@lcd^0,c
  1902   00226A  0E01               	movlw	high _my_lcd
  1903   00226C  6E1B               	movwf	(lcd_4bit_send_char_data_pos@lcd+1)^0,c
  1904   00226E  0E01               	movlw	1
  1905   002270  6E1C               	movwf	lcd_4bit_send_char_data_pos@row^0,c
  1906   002272  C0FF  F01D         	movff	_pos,lcd_4bit_send_char_data_pos@column
  1907   002276  C0F0  F01E         	movff	_op,lcd_4bit_send_char_data_pos@data
  1908   00227A  ECBC  F023         	call	_lcd_4bit_send_char_data_pos	;wreg free
  1909   00227E  0100               	movlb	0	; () banked
  1910   002280  2BFF               	incf	_pos& (0+255),f,b
  1911   002282                     
  1912                           ; BSR set to: 0
  1913                           ;application.c: 114:             if (op[0] == '=' && calcState == STATE_END) {
  1914   002282  0E3D               	movlw	61
  1915   002284  19F0               	xorwf	_op& (0+255),w,b
  1916   002286  A4D8               	btfss	status,2,c
  1917   002288  EF48  F011         	goto	u9901
  1918   00228C  EF4A  F011         	goto	u9900
  1919   002290                     u9901:
  1920   002290  EF8D  F011         	goto	l8937
  1921   002294                     u9900:
  1922   002294                     
  1923                           ; BSR set to: 0
  1924   002294  0E03               	movlw	3
  1925   002296  19F3               	xorwf	_calcState& (0+255),w,b
  1926   002298  A4D8               	btfss	status,2,c
  1927   00229A  EF51  F011         	goto	u9911
  1928   00229E  EF53  F011         	goto	u9910
  1929   0022A2                     u9911:
  1930   0022A2  EF8D  F011         	goto	l8937
  1931   0022A6                     u9910:
  1932   0022A6                     
  1933                           ; BSR set to: 0
  1934                           ;application.c: 116:                 infixToPostfix(infix, postfix);
  1935   0022A6  0E64               	movlw	low _infix
  1936   0022A8  6E05               	movwf	infixToPostfix@infix^0,c
  1937   0022AA  0E02               	movlw	high _infix
  1938   0022AC  6E06               	movwf	(infixToPostfix@infix+1)^0,c
  1939   0022AE  0E00               	movlw	low _postfix
  1940   0022B0  6E07               	movwf	infixToPostfix@postfix^0,c
  1941   0022B2  0E02               	movlw	high _postfix
  1942   0022B4  6E08               	movwf	(infixToPostfix@postfix+1)^0,c
  1943   0022B6  EC62  F019         	call	_infixToPostfix	;wreg free
  1944   0022BA                     
  1945                           ;application.c: 117:                 evaluatePostfix(postfix, &result);
  1946   0022BA  0E00               	movlw	low _postfix
  1947   0022BC  6E50               	movwf	evaluatePostfix@postfix^0,c
  1948   0022BE  0E02               	movlw	high _postfix
  1949   0022C0  6E51               	movwf	(evaluatePostfix@postfix+1)^0,c
  1950   0022C2  0E6B               	movlw	low _result
  1951   0022C4  6E52               	movwf	evaluatePostfix@result^0,c
  1952   0022C6  0E01               	movlw	high _result
  1953   0022C8  6E53               	movwf	(evaluatePostfix@result+1)^0,c
  1954   0022CA  EC78  F015         	call	_evaluatePostfix	;wreg free
  1955   0022CE                     
  1956                           ;application.c: 120:                 sprintf(arr, "%.5f", result);
  1957   0022CE  0E60               	movlw	low _arr
  1958   0022D0  0100               	movlb	0	; () banked
  1959   0022D2  6F84               	movwf	sprintf@s& (0+255),b
  1960   0022D4  0E01               	movlw	high _arr
  1961   0022D6  6F85               	movwf	(sprintf@s+1)& (0+255),b
  1962   0022D8  0E1F               	movlw	low STR_4
  1963   0022DA  6F86               	movwf	sprintf@fmt& (0+255),b
  1964   0022DC  C16B  F087         	movff	_result,?_sprintf+3
  1965   0022E0  C16C  F088         	movff	_result+1,?_sprintf+4
  1966   0022E4  C16D  F089         	movff	_result+2,?_sprintf+5
  1967   0022E8  C16E  F08A         	movff	_result+3,?_sprintf+6
  1968   0022EC  EC02  F024         	call	_sprintf	;wreg free
  1969   0022F0  0E9F               	movlw	low _my_lcd
  1970   0022F2  6E1A               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  1971   0022F4  0E01               	movlw	high _my_lcd
  1972   0022F6  6E1B               	movwf	(lcd_4bit_send_string_pos@lcd+1)^0,c
  1973   0022F8  0E04               	movlw	4
  1974   0022FA  6E1C               	movwf	lcd_4bit_send_string_pos@row^0,c
  1975   0022FC  0E60               	movlw	low _arr
  1976   0022FE  6E01               	movwf	strlen@s^0,c
  1977   002300  0E01               	movlw	high _arr
  1978   002302  6E02               	movwf	(strlen@s+1)^0,c
  1979   002304  EC0A  F025         	call	_strlen	;wreg free
  1980   002308  5001               	movf	?_strlen^0,w,c
  1981   00230A  0814               	sublw	20
  1982   00230C  6E1D               	movwf	lcd_4bit_send_string_pos@column^0,c
  1983   00230E  0E60               	movlw	low _arr
  1984   002310  6E1E               	movwf	lcd_4bit_send_string_pos@str^0,c
  1985   002312  0E01               	movlw	high _arr
  1986   002314  6E1F               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  1987   002316  EC8A  F021         	call	_lcd_4bit_send_string_pos	;wreg free
  1988   00231A                     l8937:
  1989                           
  1990                           ;application.c: 125:         flag = 0;
  1991   00231A  0E00               	movlw	0
  1992   00231C  0100               	movlb	0	; () banked
  1993   00231E  6FF6               	movwf	_flag& (0+255),b
  1994   002320                     
  1995                           ; BSR set to: 0
  1996                           ;application.c: 126:         val = '#';
  1997   002320  0E23               	movlw	35
  1998   002322  6FFE               	movwf	_val& (0+255),b
  1999   002324  EF5A  F00F         	goto	l8795
  2000   002328  EF00  F000         	goto	start
  2001   00232C                     __end_of_main:
  2002                           	callstack 0
  2003                           
  2004 ;; *************** function _strlen *****************
  2005 ;; Defined at:
  2006 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\strlen.c"
  2007 ;; Parameters:    Size  Location     Type
  2008 ;;  s               2    0[COMRAM] PTR const unsigned char 
  2009 ;;		 -> arr(11), 
  2010 ;; Auto vars:     Size  Location     Type
  2011 ;;  a               2    2[COMRAM] PTR const unsigned char 
  2012 ;;		 -> arr(11), 
  2013 ;; Return value:  Size  Location     Type
  2014 ;;                  2    0[COMRAM] unsigned int 
  2015 ;; Registers used:
  2016 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2017 ;; Tracked objects:
  2018 ;;		On entry : 0/0
  2019 ;;		On exit  : 0/0
  2020 ;;		Unchanged: 0/0
  2021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2022 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2023 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2025 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2026 ;;Total ram usage:        4 bytes
  2027 ;; Hardware stack levels used: 1
  2028 ;; This function calls:
  2029 ;;		Nothing
  2030 ;; This function is called by:
  2031 ;;		_main
  2032 ;; This function uses a non-reentrant model
  2033 ;;
  2034                           
  2035                           	psect	text1
  2036   004A14                     __ptext1:
  2037                           	callstack 0
  2038   004A14                     _strlen:
  2039                           	callstack 30
  2040   004A14  C001  F003         	movff	strlen@s,strlen@a
  2041   004A18  C002  F004         	movff	strlen@s+1,strlen@a+1
  2042   004A1C  EF12  F025         	goto	l8295
  2043   004A20                     l8293:
  2044   004A20  4A01               	infsnz	strlen@s^0,f,c
  2045   004A22  2A02               	incf	(strlen@s+1)^0,f,c
  2046   004A24                     l8295:
  2047   004A24  C001  FFD9         	movff	strlen@s,fsr2l
  2048   004A28  C002  FFDA         	movff	strlen@s+1,fsr2h
  2049   004A2C  50DF               	movf	indf2,w,c
  2050   004A2E  A4D8               	btfss	status,2,c
  2051   004A30  EF1C  F025         	goto	u9161
  2052   004A34  EF1E  F025         	goto	u9160
  2053   004A38                     u9161:
  2054   004A38  EF10  F025         	goto	l8293
  2055   004A3C                     u9160:
  2056   004A3C  5003               	movf	strlen@a^0,w,c
  2057   004A3E  5C01               	subwf	strlen@s^0,w,c
  2058   004A40  6E01               	movwf	?_strlen^0,c
  2059   004A42  5004               	movf	(strlen@a+1)^0,w,c
  2060   004A44  5802               	subwfb	(strlen@s+1)^0,w,c
  2061   004A46  6E02               	movwf	(?_strlen+1)^0,c
  2062   004A48  0012               	return		;funcret
  2063   004A4A                     __end_of_strlen:
  2064                           	callstack 0
  2065                           
  2066 ;; *************** function _sprintf *****************
  2067 ;; Defined at:
  2068 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  2069 ;; Parameters:    Size  Location     Type
  2070 ;;  s               2    4[BANK0 ] PTR unsigned char 
  2071 ;;		 -> arr(11), 
  2072 ;;  fmt             1    6[BANK0 ] PTR const unsigned char 
  2073 ;;		 -> STR_4(5), STR_3(3), STR_2(3), STR_1(3), 
  2074 ;; Auto vars:     Size  Location     Type
  2075 ;;  f              12   12[BANK0 ] struct _IO_FILE
  2076 ;;  ret             2    0        int 
  2077 ;;  ap              1   11[BANK0 ] PTR void [1]
  2078 ;;		 -> ?_sprintf(2), 
  2079 ;; Return value:  Size  Location     Type
  2080 ;;                  2    4[BANK0 ] int 
  2081 ;; Registers used:
  2082 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2083 ;; Tracked objects:
  2084 ;;		On entry : 0/0
  2085 ;;		On exit  : 0/0
  2086 ;;		Unchanged: 0/0
  2087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2088 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2089 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2091 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2092 ;;Total ram usage:       20 bytes
  2093 ;; Hardware stack levels used: 1
  2094 ;; Hardware stack levels required when called: 7
  2095 ;; This function calls:
  2096 ;;		_vfprintf
  2097 ;; This function is called by:
  2098 ;;		_main
  2099 ;;		_convert_uint8_to_string
  2100 ;;		_convert_uint16_to_string
  2101 ;;		_convert_uint32_to_string
  2102 ;; This function uses a non-reentrant model
  2103 ;;
  2104                           
  2105                           	psect	text2
  2106   004804                     __ptext2:
  2107                           	callstack 0
  2108   004804                     _sprintf:
  2109                           	callstack 23
  2110   004804  0E87               	movlw	low (?_sprintf+3)
  2111   004806  0100               	movlb	0	; () banked
  2112   004808  6F8B               	movwf	sprintf@ap& (0+255),b
  2113   00480A  C084  F08C         	movff	sprintf@s,sprintf@f
  2114   00480E  C085  F08D         	movff	sprintf@s+1,sprintf@f+1
  2115   004812                     
  2116                           ; BSR set to: 0
  2117   004812  0E00               	movlw	0
  2118   004814  6F90               	movwf	(sprintf@f+4)& (0+255),b
  2119   004816  0E00               	movlw	0
  2120   004818  6F8F               	movwf	(sprintf@f+3)& (0+255),b
  2121   00481A                     
  2122                           ; BSR set to: 0
  2123   00481A  0E00               	movlw	0
  2124   00481C  6F97               	movwf	(sprintf@f+11)& (0+255),b
  2125   00481E  0E00               	movlw	0
  2126   004820  6F96               	movwf	(sprintf@f+10)& (0+255),b
  2127   004822                     
  2128                           ; BSR set to: 0
  2129   004822  0E8C               	movlw	low sprintf@f
  2130   004824  6F80               	movwf	vfprintf@fp& (0+255),b
  2131   004826  C086  F081         	movff	sprintf@fmt,vfprintf@fmt
  2132   00482A  0E8B               	movlw	low sprintf@ap
  2133   00482C  6F82               	movwf	vfprintf@ap& (0+255),b
  2134   00482E  EC22  F024         	call	_vfprintf	;wreg free
  2135   004832  0100               	movlb	0	; () banked
  2136   004834  518F               	movf	(sprintf@f+3)& (0+255),w,b
  2137   004836  2584               	addwf	sprintf@s& (0+255),w,b
  2138   004838  6ED9               	movwf	fsr2l,c
  2139   00483A  5190               	movf	(sprintf@f+4)& (0+255),w,b
  2140   00483C  2185               	addwfc	(sprintf@s+1)& (0+255),w,b
  2141   00483E  6EDA               	movwf	fsr2h,c
  2142   004840  6ADF               	clrf	indf2,c
  2143   004842                     
  2144                           ; BSR set to: 0
  2145   004842  0012               	return		;funcret
  2146   004844                     __end_of_sprintf:
  2147                           	callstack 0
  2148                           
  2149 ;; *************** function _vfprintf *****************
  2150 ;; Defined at:
  2151 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2152 ;; Parameters:    Size  Location     Type
  2153 ;;  fp              1    0[BANK0 ] PTR struct _IO_FILE
  2154 ;;		 -> sprintf@f(12), 
  2155 ;;  fmt             1    1[BANK0 ] PTR const unsigned char 
  2156 ;;		 -> STR_4(5), STR_3(3), STR_2(3), STR_1(3), 
  2157 ;;  ap              1    2[BANK0 ] PTR PTR void 
  2158 ;;		 -> sprintf@ap(1), 
  2159 ;; Auto vars:     Size  Location     Type
  2160 ;;  cfmt            1    3[BANK0 ] PTR unsigned char 
  2161 ;;		 -> STR_4(5), STR_3(3), STR_2(3), STR_1(3), 
  2162 ;; Return value:  Size  Location     Type
  2163 ;;                  2    0[BANK0 ] int 
  2164 ;; Registers used:
  2165 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2166 ;; Tracked objects:
  2167 ;;		On entry : 0/0
  2168 ;;		On exit  : 0/0
  2169 ;;		Unchanged: 0/0
  2170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2171 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2172 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2174 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2175 ;;Total ram usage:        4 bytes
  2176 ;; Hardware stack levels used: 1
  2177 ;; Hardware stack levels required when called: 6
  2178 ;; This function calls:
  2179 ;;		_vfpfcnvrt
  2180 ;; This function is called by:
  2181 ;;		_sprintf
  2182 ;; This function uses a non-reentrant model
  2183 ;;
  2184                           
  2185                           	psect	text3
  2186   004844                     __ptext3:
  2187                           	callstack 0
  2188   004844                     _vfprintf:
  2189                           	callstack 23
  2190   004844                     
  2191                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  2192   004844  C081  F083         	movff	vfprintf@fmt,vfprintf@cfmt
  2193                           
  2194                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2195   004848  EF2E  F024         	goto	l8009
  2196   00484C                     l8007:
  2197                           
  2198                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2199   00484C  C080  F074         	movff	vfprintf@fp,vfpfcnvrt@fp
  2200   004850  0E83               	movlw	low vfprintf@cfmt
  2201   004852  6E75               	movwf	vfpfcnvrt@fmt^0,c
  2202   004854  C082  F076         	movff	vfprintf@ap,vfpfcnvrt@ap
  2203   004858  EC17  F017         	call	_vfpfcnvrt	;wreg free
  2204   00485C                     l8009:
  2205                           
  2206                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2207   00485C  C083  FFF6         	movff	vfprintf@cfmt,tblptrl
  2208   004860                     	if	1	;There is more than 1 active tblptr byte
  2209   004860  0E10               	movlw	high __smallconst
  2210   004862  6EF7               	movwf	tblptrh,c
  2211   004864                     	endif
  2212   004864                     	if	0	;tblptru may be non-zero
  2213   004864                     	endif
  2214   004864                     	if	0	;tblptru may be non-zero
  2215   004864                     	endif
  2216   004864  0008               	tblrd		*
  2217   004866  50F5               	movf	tablat,w,c
  2218   004868  0900               	iorlw	0
  2219   00486A  A4D8               	btfss	status,2,c
  2220   00486C  EF3A  F024         	goto	u8891
  2221   004870  EF3C  F024         	goto	u8890
  2222   004874                     u8891:
  2223   004874  EF26  F024         	goto	l8007
  2224   004878                     u8890:
  2225   004878                     
  2226                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  2227   004878  0E00               	movlw	0
  2228   00487A  0100               	movlb	0	; () banked
  2229   00487C  6F81               	movwf	(?_vfprintf+1)& (0+255),b
  2230   00487E  0E00               	movlw	0
  2231   004880  6F80               	movwf	?_vfprintf& (0+255),b
  2232   004882                     
  2233                           ; BSR set to: 0
  2234   004882  0012               	return		;funcret
  2235   004884                     __end_of_vfprintf:
  2236                           	callstack 0
  2237                           
  2238 ;; *************** function _vfpfcnvrt *****************
  2239 ;; Defined at:
  2240 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2241 ;; Parameters:    Size  Location     Type
  2242 ;;  fp              1  115[COMRAM] PTR struct _IO_FILE
  2243 ;;		 -> sprintf@f(12), 
  2244 ;;  fmt             1  116[COMRAM] PTR PTR unsigned char 
  2245 ;;		 -> vfprintf@cfmt(1), 
  2246 ;;  ap              1  117[COMRAM] PTR PTR void 
  2247 ;;		 -> sprintf@ap(1), 
  2248 ;; Auto vars:     Size  Location     Type
  2249 ;;  convarg         4  120[COMRAM] struct .
  2250 ;;  cp              1  125[COMRAM] PTR unsigned char 
  2251 ;;		 -> STR_4(5), STR_3(3), STR_2(3), STR_1(3), 
  2252 ;;  c               1  124[COMRAM] unsigned char 
  2253 ;;  done            1    0        _Bool 
  2254 ;; Return value:  Size  Location     Type
  2255 ;;                  1    wreg      void 
  2256 ;; Registers used:
  2257 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2258 ;; Tracked objects:
  2259 ;;		On entry : 0/0
  2260 ;;		On exit  : 0/0
  2261 ;;		Unchanged: 0/0
  2262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2263 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2264 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2265 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2266 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2267 ;;Total ram usage:       11 bytes
  2268 ;; Hardware stack levels used: 1
  2269 ;; Hardware stack levels required when called: 5
  2270 ;; This function calls:
  2271 ;;		_dtoa
  2272 ;;		_efgtoa
  2273 ;;		_fputc
  2274 ;;		_read_prec_or_width
  2275 ;; This function is called by:
  2276 ;;		_vfprintf
  2277 ;; This function uses a non-reentrant model
  2278 ;;
  2279                           
  2280                           	psect	text4
  2281   002E2E                     __ptext4:
  2282                           	callstack 0
  2283   002E2E                     _vfpfcnvrt:
  2284                           	callstack 23
  2285   002E2E                     
  2286                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  2287   002E2E  5075               	movf	vfpfcnvrt@fmt^0,w,c
  2288   002E30  6ED9               	movwf	fsr2l,c
  2289   002E32  6ADA               	clrf	fsr2h,c
  2290   002E34  CFDF FFF6          	movff	indf2,tblptrl
  2291   002E38                     	if	1	;There is more than 1 active tblptr byte
  2292   002E38  0E10               	movlw	high __smallconst
  2293   002E3A  6EF7               	movwf	tblptrh,c
  2294   002E3C                     	endif
  2295   002E3C                     	if	0	;tblptru may be non-zero
  2296   002E3C                     	endif
  2297   002E3C                     	if	0	;tblptru may be non-zero
  2298   002E3C                     	endif
  2299   002E3C  0008               	tblrd		*
  2300   002E3E  50F5               	movf	tablat,w,c
  2301   002E40  0A25               	xorlw	37
  2302   002E42  A4D8               	btfss	status,2,c
  2303   002E44  EF26  F017         	goto	u8691
  2304   002E48  EF28  F017         	goto	u8690
  2305   002E4C                     u8691:
  2306   002E4C  EF47  F018         	goto	l7883
  2307   002E50                     u8690:
  2308   002E50                     
  2309                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  2310   002E50  5075               	movf	vfpfcnvrt@fmt^0,w,c
  2311   002E52  6ED9               	movwf	fsr2l,c
  2312   002E54  6ADA               	clrf	fsr2h,c
  2313   002E56  2ADF               	incf	indf2,f,c
  2314   002E58                     
  2315                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  2316   002E58  0E00               	movlw	0
  2317   002E5A  0100               	movlb	0	; () banked
  2318   002E5C  6FED               	movwf	(_width+1)& (0+255),b
  2319   002E5E  0E00               	movlw	0
  2320   002E60  6FEC               	movwf	_width& (0+255),b
  2321   002E62  C0EC  F0F2         	movff	_width,_flags
  2322   002E66                     
  2323                           ; BSR set to: 0
  2324                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  2325   002E66  69EE               	setf	_prec& (0+255),b
  2326   002E68  69EF               	setf	(_prec+1)& (0+255),b
  2327   002E6A                     
  2328                           ; BSR set to: 0
  2329                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1265:         if 
      +                          ((*fmt)[0] == '.') {
  2330   002E6A  5075               	movf	vfpfcnvrt@fmt^0,w,c
  2331   002E6C  6ED9               	movwf	fsr2l,c
  2332   002E6E  6ADA               	clrf	fsr2h,c
  2333   002E70  CFDF FFF6          	movff	indf2,tblptrl
  2334   002E74                     	if	1	;There is more than 1 active tblptr byte
  2335   002E74  0E10               	movlw	high __smallconst
  2336   002E76  6EF7               	movwf	tblptrh,c
  2337   002E78                     	endif
  2338   002E78                     	if	0	;tblptru may be non-zero
  2339   002E78                     	endif
  2340   002E78                     	if	0	;tblptru may be non-zero
  2341   002E78                     	endif
  2342   002E78  0008               	tblrd		*
  2343   002E7A  50F5               	movf	tablat,w,c
  2344   002E7C  0A2E               	xorlw	46
  2345   002E7E  A4D8               	btfss	status,2,c
  2346   002E80  EF44  F017         	goto	u8701
  2347   002E84  EF46  F017         	goto	u8700
  2348   002E88                     u8701:
  2349   002E88  EF54  F017         	goto	l7831
  2350   002E8C                     u8700:
  2351   002E8C                     
  2352                           ; BSR set to: 0
  2353                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1266:            
      +                           ++*fmt;
  2354   002E8C  5075               	movf	vfpfcnvrt@fmt^0,w,c
  2355   002E8E  6ED9               	movwf	fsr2l,c
  2356   002E90  6ADA               	clrf	fsr2h,c
  2357   002E92  2ADF               	incf	indf2,f,c
  2358   002E94                     
  2359                           ; BSR set to: 0
  2360                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1267:    prec = r
      +                          ead_prec_or_width(fmt, ap);
  2361   002E94  C075  F007         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  2362   002E98  C076  F008         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  2363   002E9C  EC37  F021         	call	_read_prec_or_width	;wreg free
  2364   002EA0  C007  F0EE         	movff	?_read_prec_or_width,_prec
  2365   002EA4  C008  F0EF         	movff	?_read_prec_or_width+1,_prec+1
  2366   002EA8                     l7831:
  2367                           
  2368                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  2369   002EA8  5075               	movf	vfpfcnvrt@fmt^0,w,c
  2370   002EAA  6ED9               	movwf	fsr2l,c
  2371   002EAC  6ADA               	clrf	fsr2h,c
  2372   002EAE  50DF               	movf	indf2,w,c
  2373   002EB0  6E7E               	movwf	vfpfcnvrt@cp^0,c
  2374   002EB2                     
  2375                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2376   002EB2  C07E  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2377   002EB6                     	if	1	;There is more than 1 active tblptr byte
  2378   002EB6  0E10               	movlw	high __smallconst
  2379   002EB8  6EF7               	movwf	tblptrh,c
  2380   002EBA                     	endif
  2381   002EBA                     	if	0	;tblptru may be non-zero
  2382   002EBA                     	endif
  2383   002EBA                     	if	0	;tblptru may be non-zero
  2384   002EBA                     	endif
  2385   002EBA  0008               	tblrd		*
  2386   002EBC  50F5               	movf	tablat,w,c
  2387   002EBE  0A64               	xorlw	100
  2388   002EC0  B4D8               	btfsc	status,2,c
  2389   002EC2  EF65  F017         	goto	u8711
  2390   002EC6  EF67  F017         	goto	u8710
  2391   002ECA                     u8711:
  2392   002ECA  EF75  F017         	goto	l7837
  2393   002ECE                     u8710:
  2394   002ECE  C07E  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2395   002ED2                     	if	1	;There is more than 1 active tblptr byte
  2396   002ED2  0E10               	movlw	high __smallconst
  2397   002ED4  6EF7               	movwf	tblptrh,c
  2398   002ED6                     	endif
  2399   002ED6                     	if	0	;tblptru may be non-zero
  2400   002ED6                     	endif
  2401   002ED6                     	if	0	;tblptru may be non-zero
  2402   002ED6                     	endif
  2403   002ED6  0008               	tblrd		*
  2404   002ED8  50F5               	movf	tablat,w,c
  2405   002EDA  0A69               	xorlw	105
  2406   002EDC  A4D8               	btfss	status,2,c
  2407   002EDE  EF73  F017         	goto	u8721
  2408   002EE2  EF75  F017         	goto	u8720
  2409   002EE6                     u8721:
  2410   002EE6  EF90  F017         	goto	l7845
  2411   002EEA                     u8720:
  2412   002EEA                     l7837:
  2413                           
  2414                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2415   002EEA  5076               	movf	vfpfcnvrt@ap^0,w,c
  2416   002EEC  6ED9               	movwf	fsr2l,c
  2417   002EEE  6ADA               	clrf	fsr2h,c
  2418   002EF0  0E02               	movlw	2
  2419   002EF2  26DF               	addwf	indf2,f,c
  2420   002EF4  5CDF               	subwf	indf2,w,c
  2421   002EF6  6ED9               	movwf	fsr2l,c
  2422   002EF8  6ADA               	clrf	fsr2h,c
  2423   002EFA  CFDE F079          	movff	postinc2,vfpfcnvrt@convarg
  2424   002EFE  CFDE F07A          	movff	postinc2,vfpfcnvrt@convarg+1
  2425   002F02                     
  2426                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  2427   002F02  5075               	movf	vfpfcnvrt@fmt^0,w,c
  2428   002F04  6ED9               	movwf	fsr2l,c
  2429   002F06  6ADA               	clrf	fsr2h,c
  2430   002F08  287E               	incf	vfpfcnvrt@cp^0,w,c
  2431   002F0A  6EDF               	movwf	indf2,c
  2432   002F0C                     
  2433                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  2434   002F0C  C074  F017         	movff	vfpfcnvrt@fp,dtoa@fp
  2435   002F10  C079  F018         	movff	vfpfcnvrt@convarg,dtoa@d
  2436   002F14  C07A  F019         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2437   002F18  EC24  F01B         	call	_dtoa	;wreg free
  2438   002F1C  EF58  F018         	goto	l1432
  2439   002F20                     l7845:
  2440                           
  2441                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt
      +                          ;
  2442   002F20  5075               	movf	vfpfcnvrt@fmt^0,w,c
  2443   002F22  6ED9               	movwf	fsr2l,c
  2444   002F24  6ADA               	clrf	fsr2h,c
  2445   002F26  50DF               	movf	indf2,w,c
  2446   002F28  6E7E               	movwf	vfpfcnvrt@cp^0,c
  2447   002F2A                     
  2448                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
  2449   002F2A  C07E  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2450   002F2E                     	if	1	;There is more than 1 active tblptr byte
  2451   002F2E  0E10               	movlw	high __smallconst
  2452   002F30  6EF7               	movwf	tblptrh,c
  2453   002F32                     	endif
  2454   002F32                     	if	0	;tblptru may be non-zero
  2455   002F32                     	endif
  2456   002F32                     	if	0	;tblptru may be non-zero
  2457   002F32                     	endif
  2458   002F32  0008               	tblrd		*
  2459   002F34  CFF5 F07D          	movff	tablat,vfpfcnvrt@c
  2460                           
  2461                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1691:   switch(c)
      +                           {
  2462   002F38  EFA9  F017         	goto	l7857
  2463   002F3C                     l7849:
  2464                           
  2465                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1695:     cp++;
  2466   002F3C  2A7E               	incf	vfpfcnvrt@cp^0,f,c
  2467                           
  2468                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1696:     break;
  2469   002F3E  EFC2  F017         	goto	l7859
  2470   002F42                     l7851:
  2471                           
  2472                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1721:     c = 'l'
      +                          ;
  2473   002F42  0E6C               	movlw	108
  2474   002F44  6E7D               	movwf	vfpfcnvrt@c^0,c
  2475                           
  2476                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1722:     break;
  2477   002F46  EFC2  F017         	goto	l7859
  2478   002F4A                     l7853:
  2479                           
  2480                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
  2481   002F4A  0E00               	movlw	0
  2482   002F4C  6E7D               	movwf	vfpfcnvrt@c^0,c
  2483                           
  2484                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1725:     break;
  2485   002F4E  EFC2  F017         	goto	l7859
  2486   002F52                     l7857:
  2487   002F52  507D               	movf	vfpfcnvrt@c^0,w,c
  2488   002F54  6E77               	movwf	??_vfpfcnvrt^0,c
  2489   002F56  6A78               	clrf	(??_vfpfcnvrt+1)^0,c
  2490                           
  2491                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2492                           ; Switch size 1, requested type "simple"
  2493                           ; Number of cases is 1, Range of values is 0 to 0
  2494                           ; switch strategies available:
  2495                           ; Name         Instructions Cycles
  2496                           ; simple_byte            4     3 (average)
  2497                           ;	Chosen strategy is simple_byte
  2498   002F58  5078               	movf	(??_vfpfcnvrt+1)^0,w,c
  2499   002F5A  0A00               	xorlw	0	; case 0
  2500   002F5C  B4D8               	btfsc	status,2,c
  2501   002F5E  EFB3  F017         	goto	l9079
  2502   002F62  EFA5  F017         	goto	l7853
  2503   002F66                     l9079:
  2504                           
  2505                           ; Switch size 1, requested type "simple"
  2506                           ; Number of cases is 3, Range of values is 76 to 108
  2507                           ; switch strategies available:
  2508                           ; Name         Instructions Cycles
  2509                           ; simple_byte           10     6 (average)
  2510                           ;	Chosen strategy is simple_byte
  2511   002F66  5077               	movf	??_vfpfcnvrt^0,w,c
  2512   002F68  0A4C               	xorlw	76	; case 76
  2513   002F6A  B4D8               	btfsc	status,2,c
  2514   002F6C  EF9E  F017         	goto	l7849
  2515   002F70  0A2A               	xorlw	42	; case 102
  2516   002F72  B4D8               	btfsc	status,2,c
  2517   002F74  EFA1  F017         	goto	l7851
  2518   002F78  0A0A               	xorlw	10	; case 108
  2519   002F7A  B4D8               	btfsc	status,2,c
  2520   002F7C  EF9E  F017         	goto	l7849
  2521   002F80  EFA5  F017         	goto	l7853
  2522   002F84                     l7859:
  2523   002F84  C07E  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2524   002F88                     	if	1	;There is more than 1 active tblptr byte
  2525   002F88  0E10               	movlw	high __smallconst
  2526   002F8A  6EF7               	movwf	tblptrh,c
  2527   002F8C                     	endif
  2528   002F8C                     	if	0	;tblptru may be non-zero
  2529   002F8C                     	endif
  2530   002F8C                     	if	0	;tblptru may be non-zero
  2531   002F8C                     	endif
  2532   002F8C  0008               	tblrd		*
  2533   002F8E  50F5               	movf	tablat,w,c
  2534   002F90  0A66               	xorlw	102
  2535   002F92  A4D8               	btfss	status,2,c
  2536   002F94  EFCE  F017         	goto	u8731
  2537   002F98  EFD0  F017         	goto	u8730
  2538   002F9C                     u8731:
  2539   002F9C  EF41  F018         	goto	l7879
  2540   002FA0                     u8730:
  2541   002FA0  EFFA  F017         	goto	l7867
  2542   002FA4                     l7861:
  2543                           
  2544                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1756:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2545   002FA4  5076               	movf	vfpfcnvrt@ap^0,w,c
  2546   002FA6  6ED9               	movwf	fsr2l,c
  2547   002FA8  6ADA               	clrf	fsr2h,c
  2548   002FAA  CFDF F077          	movff	indf2,??_vfpfcnvrt
  2549   002FAE  0E04               	movlw	4
  2550   002FB0  26DF               	addwf	indf2,f,c
  2551   002FB2  5077               	movf	??_vfpfcnvrt^0,w,c
  2552   002FB4  6ED9               	movwf	fsr2l,c
  2553   002FB6  6ADA               	clrf	fsr2h,c
  2554   002FB8  CFDE F079          	movff	postinc2,vfpfcnvrt@convarg
  2555   002FBC  CFDE F07A          	movff	postinc2,vfpfcnvrt@convarg+1
  2556   002FC0  CFDE F07B          	movff	postinc2,vfpfcnvrt@convarg+2
  2557   002FC4  CFDE F07C          	movff	postinc2,vfpfcnvrt@convarg+3
  2558                           
  2559                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1757:      break;
  2560   002FC8  EF0F  F018         	goto	l7869
  2561   002FCC                     l7863:
  2562                           
  2563                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1759:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2564   002FCC  5076               	movf	vfpfcnvrt@ap^0,w,c
  2565   002FCE  6ED9               	movwf	fsr2l,c
  2566   002FD0  6ADA               	clrf	fsr2h,c
  2567   002FD2  CFDF F077          	movff	indf2,??_vfpfcnvrt
  2568   002FD6  0E04               	movlw	4
  2569   002FD8  26DF               	addwf	indf2,f,c
  2570   002FDA  5077               	movf	??_vfpfcnvrt^0,w,c
  2571   002FDC  6ED9               	movwf	fsr2l,c
  2572   002FDE  6ADA               	clrf	fsr2h,c
  2573   002FE0  CFDE F079          	movff	postinc2,vfpfcnvrt@convarg
  2574   002FE4  CFDE F07A          	movff	postinc2,vfpfcnvrt@convarg+1
  2575   002FE8  CFDE F07B          	movff	postinc2,vfpfcnvrt@convarg+2
  2576   002FEC  CFDE F07C          	movff	postinc2,vfpfcnvrt@convarg+3
  2577                           
  2578                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1760:      break;
  2579   002FF0  EF0F  F018         	goto	l7869
  2580   002FF4                     l7867:
  2581   002FF4  507D               	movf	vfpfcnvrt@c^0,w,c
  2582   002FF6  6E77               	movwf	??_vfpfcnvrt^0,c
  2583   002FF8  6A78               	clrf	(??_vfpfcnvrt+1)^0,c
  2584                           
  2585                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2586                           ; Switch size 1, requested type "simple"
  2587                           ; Number of cases is 1, Range of values is 0 to 0
  2588                           ; switch strategies available:
  2589                           ; Name         Instructions Cycles
  2590                           ; simple_byte            4     3 (average)
  2591                           ;	Chosen strategy is simple_byte
  2592   002FFA  5078               	movf	(??_vfpfcnvrt+1)^0,w,c
  2593   002FFC  0A00               	xorlw	0	; case 0
  2594   002FFE  B4D8               	btfsc	status,2,c
  2595   003000  EF04  F018         	goto	l9081
  2596   003004  EF0F  F018         	goto	l7869
  2597   003008                     l9081:
  2598                           
  2599                           ; Switch size 1, requested type "simple"
  2600                           ; Number of cases is 2, Range of values is 76 to 108
  2601                           ; switch strategies available:
  2602                           ; Name         Instructions Cycles
  2603                           ; simple_byte            7     4 (average)
  2604                           ;	Chosen strategy is simple_byte
  2605   003008  5077               	movf	??_vfpfcnvrt^0,w,c
  2606   00300A  0A4C               	xorlw	76	; case 76
  2607   00300C  B4D8               	btfsc	status,2,c
  2608   00300E  EFE6  F017         	goto	l7863
  2609   003012  0A20               	xorlw	32	; case 108
  2610   003014  B4D8               	btfsc	status,2,c
  2611   003016  EFD2  F017         	goto	l7861
  2612   00301A  EF0F  F018         	goto	l7869
  2613   00301E                     l7869:
  2614                           
  2615                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1762:    *fmt = c
      +                          p+1;
  2616   00301E  5075               	movf	vfpfcnvrt@fmt^0,w,c
  2617   003020  6ED9               	movwf	fsr2l,c
  2618   003022  6ADA               	clrf	fsr2h,c
  2619   003024  287E               	incf	vfpfcnvrt@cp^0,w,c
  2620   003026  6EDF               	movwf	indf2,c
  2621                           
  2622                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1763:    switch (
      +                          *cp) {
  2623   003028  EF2B  F018         	goto	l7877
  2624   00302C                     l7871:
  2625                           
  2626                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1790:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  2627   00302C  C074  F040         	movff	vfpfcnvrt@fp,efgtoa@fp
  2628   003030  C079  F041         	movff	vfpfcnvrt@convarg,efgtoa@f
  2629   003034  C07A  F042         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  2630   003038  C07B  F043         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  2631   00303C  C07C  F044         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  2632   003040  C07E  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2633   003044                     	if	1	;There is more than 1 active tblptr byte
  2634   003044  0E10               	movlw	high __smallconst
  2635   003046  6EF7               	movwf	tblptrh,c
  2636   003048                     	endif
  2637   003048                     	if	0	;tblptru may be non-zero
  2638   003048                     	endif
  2639   003048                     	if	0	;tblptru may be non-zero
  2640   003048                     	endif
  2641   003048  0008               	tblrd		*
  2642   00304A  CFF5 F045          	movff	tablat,efgtoa@c
  2643   00304E  EC18  F008         	call	_efgtoa	;wreg free
  2644   003052  EF58  F018         	goto	l1432
  2645   003056                     l7877:
  2646   003056  C07E  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2647   00305A                     	if	1	;There is more than 1 active tblptr byte
  2648   00305A  0E10               	movlw	high __smallconst
  2649   00305C  6EF7               	movwf	tblptrh,c
  2650   00305E                     	endif
  2651   00305E                     	if	0	;tblptru may be non-zero
  2652   00305E                     	endif
  2653   00305E                     	if	0	;tblptru may be non-zero
  2654   00305E                     	endif
  2655   00305E  0008               	tblrd		*
  2656   003060  50F5               	movf	tablat,w,c
  2657   003062  6E77               	movwf	??_vfpfcnvrt^0,c
  2658   003064  6A78               	clrf	(??_vfpfcnvrt+1)^0,c
  2659                           
  2660                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2661                           ; Switch size 1, requested type "simple"
  2662                           ; Number of cases is 1, Range of values is 0 to 0
  2663                           ; switch strategies available:
  2664                           ; Name         Instructions Cycles
  2665                           ; simple_byte            4     3 (average)
  2666                           ;	Chosen strategy is simple_byte
  2667   003066  5078               	movf	(??_vfpfcnvrt+1)^0,w,c
  2668   003068  0A00               	xorlw	0	; case 0
  2669   00306A  B4D8               	btfsc	status,2,c
  2670   00306C  EF3A  F018         	goto	l9083
  2671   003070  EF41  F018         	goto	l7879
  2672   003074                     l9083:
  2673                           
  2674                           ; Switch size 1, requested type "simple"
  2675                           ; Number of cases is 1, Range of values is 102 to 102
  2676                           ; switch strategies available:
  2677                           ; Name         Instructions Cycles
  2678                           ; simple_byte            4     3 (average)
  2679                           ;	Chosen strategy is simple_byte
  2680   003074  5077               	movf	??_vfpfcnvrt^0,w,c
  2681   003076  0A66               	xorlw	102	; case 102
  2682   003078  B4D8               	btfsc	status,2,c
  2683   00307A  EF16  F018         	goto	l7871
  2684   00307E  EF41  F018         	goto	l7879
  2685   003082                     l7879:
  2686                           
  2687                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  2688   003082  5075               	movf	vfpfcnvrt@fmt^0,w,c
  2689   003084  6ED9               	movwf	fsr2l,c
  2690   003086  6ADA               	clrf	fsr2h,c
  2691   003088  2ADF               	incf	indf2,f,c
  2692   00308A  EF58  F018         	goto	l1432
  2693   00308E                     l7883:
  2694                           
  2695                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  2696   00308E  5075               	movf	vfpfcnvrt@fmt^0,w,c
  2697   003090  6ED9               	movwf	fsr2l,c
  2698   003092  6ADA               	clrf	fsr2h,c
  2699   003094  CFDF FFF6          	movff	indf2,tblptrl
  2700   003098                     	if	1	;There is more than 1 active tblptr byte
  2701   003098  0E10               	movlw	high __smallconst
  2702   00309A  6EF7               	movwf	tblptrh,c
  2703   00309C                     	endif
  2704   00309C                     	if	0	;tblptru may be non-zero
  2705   00309C                     	endif
  2706   00309C                     	if	0	;tblptru may be non-zero
  2707   00309C                     	endif
  2708   00309C  0008               	tblrd		*
  2709   00309E  50F5               	movf	tablat,w,c
  2710   0030A0  6E01               	movwf	fputc@c^0,c
  2711   0030A2  6A02               	clrf	(fputc@c+1)^0,c
  2712   0030A4  C074  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2713   0030A8  EC7F  F01F         	call	_fputc	;wreg free
  2714   0030AC  EF41  F018         	goto	l7879
  2715   0030B0                     l1432:
  2716   0030B0  0012               	return		;funcret
  2717   0030B2                     __end_of_vfpfcnvrt:
  2718                           	callstack 0
  2719                           
  2720 ;; *************** function _read_prec_or_width *****************
  2721 ;; Defined at:
  2722 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2723 ;; Parameters:    Size  Location     Type
  2724 ;;  fmt             1    6[COMRAM] PTR PTR const unsigned c
  2725 ;;		 -> vfprintf@cfmt(1), 
  2726 ;;  ap              1    7[COMRAM] PTR PTR void [1]
  2727 ;;		 -> sprintf@ap(1), 
  2728 ;; Auto vars:     Size  Location     Type
  2729 ;;  c               1    8[COMRAM] unsigned char 
  2730 ;;  n               2    9[COMRAM] int 
  2731 ;; Return value:  Size  Location     Type
  2732 ;;                  2    6[COMRAM] int 
  2733 ;; Registers used:
  2734 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2735 ;; Tracked objects:
  2736 ;;		On entry : 0/0
  2737 ;;		On exit  : 0/0
  2738 ;;		Unchanged: 0/0
  2739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2740 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2741 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2743 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2744 ;;Total ram usage:        5 bytes
  2745 ;; Hardware stack levels used: 1
  2746 ;; Hardware stack levels required when called: 1
  2747 ;; This function calls:
  2748 ;;		___wmul
  2749 ;; This function is called by:
  2750 ;;		_vfpfcnvrt
  2751 ;; This function uses a non-reentrant model
  2752 ;;
  2753                           
  2754                           	psect	text5
  2755   00426E                     __ptext5:
  2756                           	callstack 0
  2757   00426E                     _read_prec_or_width:
  2758                           	callstack 26
  2759   00426E                     
  2760                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  2761   00426E  0E00               	movlw	0
  2762   004270  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  2763   004272  0E00               	movlw	0
  2764   004274  6E0A               	movwf	read_prec_or_width@n^0,c
  2765   004276                     
  2766                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  2767   004276  5007               	movf	read_prec_or_width@fmt^0,w,c
  2768   004278  6ED9               	movwf	fsr2l,c
  2769   00427A  6ADA               	clrf	fsr2h,c
  2770   00427C  CFDF FFF6          	movff	indf2,tblptrl
  2771   004280                     	if	1	;There is more than 1 active tblptr byte
  2772   004280  0E10               	movlw	high __smallconst
  2773   004282  6EF7               	movwf	tblptrh,c
  2774   004284                     	endif
  2775   004284                     	if	0	;tblptru may be non-zero
  2776   004284                     	endif
  2777   004284                     	if	0	;tblptru may be non-zero
  2778   004284                     	endif
  2779   004284  0008               	tblrd		*
  2780   004286  50F5               	movf	tablat,w,c
  2781   004288  0A2A               	xorlw	42
  2782   00428A  A4D8               	btfss	status,2,c
  2783   00428C  EF4A  F021         	goto	u8661
  2784   004290  EF4C  F021         	goto	u8660
  2785   004294                     u8661:
  2786   004294  EF72  F021         	goto	l7781
  2787   004298                     u8660:
  2788   004298                     
  2789                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  2790   004298  5007               	movf	read_prec_or_width@fmt^0,w,c
  2791   00429A  6ED9               	movwf	fsr2l,c
  2792   00429C  6ADA               	clrf	fsr2h,c
  2793   00429E  2ADF               	incf	indf2,f,c
  2794   0042A0                     
  2795                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  2796   0042A0  5008               	movf	read_prec_or_width@ap^0,w,c
  2797   0042A2  6ED9               	movwf	fsr2l,c
  2798   0042A4  6ADA               	clrf	fsr2h,c
  2799   0042A6  0E02               	movlw	2
  2800   0042A8  26DF               	addwf	indf2,f,c
  2801   0042AA  5CDF               	subwf	indf2,w,c
  2802   0042AC  6ED9               	movwf	fsr2l,c
  2803   0042AE  6ADA               	clrf	fsr2h,c
  2804   0042B0  CFDE F00A          	movff	postinc2,read_prec_or_width@n
  2805   0042B4  CFDE F00B          	movff	postinc2,read_prec_or_width@n+1
  2806                           
  2807                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  2808   0042B8  EF85  F021         	goto	l1420
  2809   0042BC                     l7777:
  2810                           
  2811                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  2812   0042BC  C00A  F001         	movff	read_prec_or_width@n,___wmul@multiplier
  2813   0042C0  C00B  F002         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  2814   0042C4  0E00               	movlw	0
  2815   0042C6  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2816   0042C8  0E0A               	movlw	10
  2817   0042CA  6E03               	movwf	___wmul@multiplicand^0,c
  2818   0042CC  EC74  F025         	call	___wmul	;wreg free
  2819   0042D0  5009               	movf	read_prec_or_width@c^0,w,c
  2820   0042D2  2401               	addwf	?___wmul^0,w,c
  2821   0042D4  6E0A               	movwf	read_prec_or_width@n^0,c
  2822   0042D6  0E00               	movlw	0
  2823   0042D8  2002               	addwfc	(?___wmul+1)^0,w,c
  2824   0042DA  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  2825   0042DC                     
  2826                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  2827   0042DC  5007               	movf	read_prec_or_width@fmt^0,w,c
  2828   0042DE  6ED9               	movwf	fsr2l,c
  2829   0042E0  6ADA               	clrf	fsr2h,c
  2830   0042E2  2ADF               	incf	indf2,f,c
  2831   0042E4                     l7781:
  2832                           
  2833                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  2834   0042E4  5007               	movf	read_prec_or_width@fmt^0,w,c
  2835   0042E6  6ED9               	movwf	fsr2l,c
  2836   0042E8  6ADA               	clrf	fsr2h,c
  2837   0042EA  CFDF FFF6          	movff	indf2,tblptrl
  2838   0042EE                     	if	1	;There is more than 1 active tblptr byte
  2839   0042EE  0E10               	movlw	high __smallconst
  2840   0042F0  6EF7               	movwf	tblptrh,c
  2841   0042F2                     	endif
  2842   0042F2                     	if	0	;tblptru may be non-zero
  2843   0042F2                     	endif
  2844   0042F2                     	if	0	;tblptru may be non-zero
  2845   0042F2                     	endif
  2846   0042F2  0008               	tblrd		*
  2847   0042F4  50F5               	movf	tablat,w,c
  2848   0042F6  0FD0               	addlw	208
  2849   0042F8  6E09               	movwf	read_prec_or_width@c^0,c
  2850   0042FA  0E09               	movlw	9
  2851   0042FC  6409               	cpfsgt	read_prec_or_width@c^0,c
  2852   0042FE  EF83  F021         	goto	u8671
  2853   004302  EF85  F021         	goto	u8670
  2854   004306                     u8671:
  2855   004306  EF5E  F021         	goto	l7777
  2856   00430A                     u8670:
  2857   00430A                     l1420:
  2858                           
  2859                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  2860   00430A  C00A  F007         	movff	read_prec_or_width@n,?_read_prec_or_width
  2861   00430E  C00B  F008         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  2862   004312  0012               	return		;funcret
  2863   004314                     __end_of_read_prec_or_width:
  2864                           	callstack 0
  2865                           
  2866 ;; *************** function ___wmul *****************
  2867 ;; Defined at:
  2868 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  2869 ;; Parameters:    Size  Location     Type
  2870 ;;  multiplier      2    0[COMRAM] unsigned int 
  2871 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2872 ;; Auto vars:     Size  Location     Type
  2873 ;;  product         2    4[COMRAM] unsigned int 
  2874 ;; Return value:  Size  Location     Type
  2875 ;;                  2    0[COMRAM] unsigned int 
  2876 ;; Registers used:
  2877 ;;		wreg, status,2, status,0, prodl, prodh
  2878 ;; Tracked objects:
  2879 ;;		On entry : 0/0
  2880 ;;		On exit  : 0/0
  2881 ;;		Unchanged: 0/0
  2882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2883 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2884 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2886 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2887 ;;Total ram usage:        6 bytes
  2888 ;; Hardware stack levels used: 1
  2889 ;; This function calls:
  2890 ;;		Nothing
  2891 ;; This function is called by:
  2892 ;;		_read_prec_or_width
  2893 ;; This function uses a non-reentrant model
  2894 ;;
  2895                           
  2896                           	psect	text6
  2897   004AE8                     __ptext6:
  2898                           	callstack 0
  2899   004AE8                     ___wmul:
  2900                           	callstack 26
  2901   004AE8  5001               	movf	___wmul@multiplier^0,w,c
  2902   004AEA  0203               	mulwf	___wmul@multiplicand^0,c
  2903   004AEC  CFF3 F005          	movff	prodl,___wmul@product
  2904   004AF0  CFF4 F006          	movff	prodh,___wmul@product+1
  2905   004AF4  5001               	movf	___wmul@multiplier^0,w,c
  2906   004AF6  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  2907   004AF8  50F3               	movf	243,w,c
  2908   004AFA  2606               	addwf	(___wmul@product+1)^0,f,c
  2909   004AFC  5002               	movf	(___wmul@multiplier+1)^0,w,c
  2910   004AFE  0203               	mulwf	___wmul@multiplicand^0,c
  2911   004B00  50F3               	movf	243,w,c
  2912   004B02  2606               	addwf	(___wmul@product+1)^0,f,c
  2913   004B04  C005  F001         	movff	___wmul@product,?___wmul
  2914   004B08  C006  F002         	movff	___wmul@product+1,?___wmul+1
  2915   004B0C  0012               	return		;funcret
  2916   004B0E                     __end_of___wmul:
  2917                           	callstack 0
  2918                           
  2919 ;; *************** function _efgtoa *****************
  2920 ;; Defined at:
  2921 ;;		line 587 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2922 ;; Parameters:    Size  Location     Type
  2923 ;;  fp              1   63[COMRAM] PTR struct _IO_FILE
  2924 ;;		 -> sprintf@f(12), 
  2925 ;;  f               4   64[COMRAM] PTR struct _IO_FILE
  2926 ;;  c               1   68[COMRAM] unsigned char 
  2927 ;; Auto vars:     Size  Location     Type
  2928 ;;  u               4  111[COMRAM] struct flui
  2929 ;;  g               4  105[COMRAM] struct flui
  2930 ;;  l               4  100[COMRAM] struct flui
  2931 ;;  h               4   96[COMRAM] struct flui
  2932 ;;  ou              4   90[COMRAM] struct flui
  2933 ;;  n               2  109[COMRAM] int 
  2934 ;;  i               2   94[COMRAM] int 
  2935 ;;  w               2   88[COMRAM] int 
  2936 ;;  e               2   86[COMRAM] int 
  2937 ;;  m               2   84[COMRAM] int 
  2938 ;;  d               2   82[COMRAM] int 
  2939 ;;  t               2   75[COMRAM] int 
  2940 ;;  p               2   73[COMRAM] int 
  2941 ;;  ne              2   71[COMRAM] int 
  2942 ;;  sign            1  104[COMRAM] unsigned char 
  2943 ;;  nmode           1   81[COMRAM] unsigned char 
  2944 ;;  mode            1   80[COMRAM] unsigned char 
  2945 ;;  pp              1   79[COMRAM] unsigned char 
  2946 ;;  esign           1    0        unsigned char 
  2947 ;; Return value:  Size  Location     Type
  2948 ;;                  1    wreg      void 
  2949 ;; Registers used:
  2950 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2951 ;; Tracked objects:
  2952 ;;		On entry : 0/0
  2953 ;;		On exit  : 0/0
  2954 ;;		Unchanged: 0/0
  2955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2956 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2957 ;;      Locals:        44       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2958 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2959 ;;      Totals:        52       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2960 ;;Total ram usage:       52 bytes
  2961 ;; Hardware stack levels used: 1
  2962 ;; Hardware stack levels required when called: 4
  2963 ;; This function calls:
  2964 ;;		___fladd
  2965 ;;		___fldiv
  2966 ;;		___fleq
  2967 ;;		___flge
  2968 ;;		___flmul
  2969 ;;		___flneg
  2970 ;;		___flsub
  2971 ;;		___fltol
  2972 ;;		___fpclassifyf
  2973 ;;		_floorf
  2974 ;;		_labs
  2975 ;;		_memcpy
  2976 ;;		_pad
  2977 ;;		_strcpy
  2978 ;; This function is called by:
  2979 ;;		_vfpfcnvrt
  2980 ;; This function uses a non-reentrant model
  2981 ;;
  2982                           
  2983                           	psect	text7
  2984   001030                     __ptext7:
  2985                           	callstack 0
  2986   001030                     _efgtoa:
  2987                           	callstack 23
  2988   001030                     
  2989                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 587: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.45\pic\sources
      +                          \c99\common\doprnt.c: 588: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 589:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .45\pic\sources\c99\common\doprnt.c: 590:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 591:     long double h, l;
  2990   001030  0E00               	movlw	0
  2991   001032  6E69               	movwf	efgtoa@sign^0,c
  2992   001034                     
  2993                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
  2994   001034  C041  F06A         	movff	efgtoa@f,efgtoa@g
  2995   001038  C042  F06B         	movff	efgtoa@f+1,efgtoa@g+1
  2996   00103C  C043  F06C         	movff	efgtoa@f+2,efgtoa@g+2
  2997   001040  C044  F06D         	movff	efgtoa@f+3,efgtoa@g+3
  2998   001044                     
  2999                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 597:     if (g.f 
      +                          < 0.0) {
  3000   001044  BE6D               	btfsc	(efgtoa@g+3)^0,7,c
  3001   001046  EF29  F008         	goto	u8340
  3002   00104A  EF27  F008         	goto	u8341
  3003   00104E                     u8341:
  3004   00104E  EF3D  F008         	goto	l7557
  3005   001052                     u8340:
  3006   001052                     
  3007                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 598:         sign
      +                           = 1;
  3008   001052  0E01               	movlw	1
  3009   001054  6E69               	movwf	efgtoa@sign^0,c
  3010   001056                     
  3011                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 599:         g.f 
      +                          = -g.f;
  3012   001056  C06A  F001         	movff	efgtoa@g,___flneg@f1
  3013   00105A  C06B  F002         	movff	efgtoa@g+1,___flneg@f1+1
  3014   00105E  C06C  F003         	movff	efgtoa@g+2,___flneg@f1+2
  3015   001062  C06D  F004         	movff	efgtoa@g+3,___flneg@f1+3
  3016   001066  EC7F  F024         	call	___flneg	;wreg free
  3017   00106A  C001  F06A         	movff	?___flneg,efgtoa@g
  3018   00106E  C002  F06B         	movff	?___flneg+1,efgtoa@g+1
  3019   001072  C003  F06C         	movff	?___flneg+2,efgtoa@g+2
  3020   001076  C004  F06D         	movff	?___flneg+3,efgtoa@g+3
  3021   00107A                     l7557:
  3022                           
  3023                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 603:     n = 0;
  3024   00107A  0E00               	movlw	0
  3025   00107C  6E6F               	movwf	(efgtoa@n+1)^0,c
  3026   00107E  0E00               	movlw	0
  3027   001080  6E6E               	movwf	efgtoa@n^0,c
  3028   001082                     
  3029                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 604:     w = widt
      +                          h;
  3030   001082  C0EC  F059         	movff	_width,efgtoa@w
  3031   001086  C0ED  F05A         	movff	_width+1,efgtoa@w+1
  3032   00108A                     
  3033                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 605:     if (sign
  3034   00108A  5069               	movf	efgtoa@sign^0,w,c
  3035   00108C  B4D8               	btfsc	status,2,c
  3036   00108E  EF4B  F008         	goto	u8351
  3037   001092  EF4D  F008         	goto	u8350
  3038   001096                     u8351:
  3039   001096  EF61  F008         	goto	l7571
  3040   00109A                     u8350:
  3041   00109A                     
  3042                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 609:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 610:   sign = sign ? '-
      +                          ' : '+';
  3043   00109A  5069               	movf	efgtoa@sign^0,w,c
  3044   00109C  A4D8               	btfss	status,2,c
  3045   00109E  EF53  F008         	goto	u8361
  3046   0010A2  EF55  F008         	goto	u8360
  3047   0010A6                     u8361:
  3048   0010A6  EF5B  F008         	goto	l7567
  3049   0010AA                     u8360:
  3050   0010AA  0E00               	movlw	0
  3051   0010AC  6E4F               	movwf	(_efgtoa$1517+1)^0,c
  3052   0010AE  0E2B               	movlw	43
  3053   0010B0  6E4E               	movwf	_efgtoa$1517^0,c
  3054   0010B2  EF5F  F008         	goto	l7569
  3055   0010B6                     l7567:
  3056   0010B6  0E00               	movlw	0
  3057   0010B8  6E4F               	movwf	(_efgtoa$1517+1)^0,c
  3058   0010BA  0E2D               	movlw	45
  3059   0010BC  6E4E               	movwf	_efgtoa$1517^0,c
  3060   0010BE                     l7569:
  3061   0010BE  C04E  F069         	movff	_efgtoa$1517,efgtoa@sign
  3062   0010C2                     l7571:
  3063                           
  3064                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 619:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  3065   0010C2  C06A  F001         	movff	efgtoa@g,___fpclassifyf@x
  3066   0010C6  C06B  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3067   0010CA  C06C  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3068   0010CE  C06D  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3069   0010D2  EC9E  F01E         	call	___fpclassifyf	;wreg free
  3070   0010D6  0401               	decf	?___fpclassifyf^0,w,c
  3071   0010D8  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3072   0010DA  A4D8               	btfss	status,2,c
  3073   0010DC  EF72  F008         	goto	u8371
  3074   0010E0  EF74  F008         	goto	u8370
  3075   0010E4                     u8371:
  3076   0010E4  EFA1  F008         	goto	l7589
  3077   0010E8                     u8370:
  3078   0010E8                     
  3079                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 620:   if (sign) 
      +                          {
  3080   0010E8  5069               	movf	efgtoa@sign^0,w,c
  3081   0010EA  B4D8               	btfsc	status,2,c
  3082   0010EC  EF7A  F008         	goto	u8381
  3083   0010F0  EF7C  F008         	goto	u8380
  3084   0010F4                     u8381:
  3085   0010F4  EF85  F008         	goto	l7581
  3086   0010F8                     u8380:
  3087   0010F8                     
  3088                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] =
      +                           sign;
  3089   0010F8  C069  F110         	movff	efgtoa@sign,_dbuf
  3090   0010FC                     
  3091                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 622:    w--;
  3092   0010FC  0659               	decf	efgtoa@w^0,f,c
  3093   0010FE  A0D8               	btfss	status,0,c
  3094   001100  065A               	decf	(efgtoa@w+1)^0,f,c
  3095   001102                     
  3096                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 623:    n = 1;
  3097   001102  0E00               	movlw	0
  3098   001104  6E6F               	movwf	(efgtoa@n+1)^0,c
  3099   001106  0E01               	movlw	1
  3100   001108  6E6E               	movwf	efgtoa@n^0,c
  3101   00110A                     l7581:
  3102                           
  3103                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 631:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 632:             strcpy(&d
      +                          buf[n], "inf");
  3104   00110A  0E10               	movlw	low _dbuf
  3105   00110C  246E               	addwf	efgtoa@n^0,w,c
  3106   00110E  6E01               	movwf	strcpy@dest^0,c
  3107   001110  0E01               	movlw	high _dbuf
  3108   001112  206F               	addwfc	(efgtoa@n+1)^0,w,c
  3109   001114  6E02               	movwf	(strcpy@dest+1)^0,c
  3110   001116  0E24               	movlw	low STR_6
  3111   001118  6E03               	movwf	strcpy@src^0,c
  3112   00111A  EC62  F024         	call	_strcpy	;wreg free
  3113   00111E                     l7583:
  3114                           
  3115                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 633:         };C:
      +                          \Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 634:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  3116   00111E  0EFD               	movlw	253
  3117   001120  2659               	addwf	efgtoa@w^0,f,c
  3118   001122  0EFF               	movlw	255
  3119   001124  225A               	addwfc	(efgtoa@w+1)^0,f,c
  3120   001126                     
  3121                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 635:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  3122   001126  C040  F00F         	movff	efgtoa@fp,pad@fp
  3123   00112A  0E10               	movlw	low _dbuf
  3124   00112C  6E10               	movwf	pad@buf^0,c
  3125   00112E  0E01               	movlw	high _dbuf
  3126   001130  6E11               	movwf	(pad@buf+1)^0,c
  3127   001132  C059  F012         	movff	efgtoa@w,pad@p
  3128   001136  C05A  F013         	movff	efgtoa@w+1,pad@p+1
  3129   00113A  EC05  F023         	call	_pad	;wreg free
  3130   00113E  EFF7  F00C         	goto	l1375
  3131   001142                     l7589:
  3132                           
  3133                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 637:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  3134   001142  C06A  F001         	movff	efgtoa@g,___fpclassifyf@x
  3135   001146  C06B  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3136   00114A  C06C  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3137   00114E  C06D  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3138   001152  EC9E  F01E         	call	___fpclassifyf	;wreg free
  3139   001156  5001               	movf	?___fpclassifyf^0,w,c
  3140   001158  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3141   00115A  A4D8               	btfss	status,2,c
  3142   00115C  EFB2  F008         	goto	u8391
  3143   001160  EFB4  F008         	goto	u8390
  3144   001164                     u8391:
  3145   001164  EFD1  F008         	goto	l7607
  3146   001168                     u8390:
  3147   001168                     
  3148                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 638:   if (sign) 
      +                          {
  3149   001168  5069               	movf	efgtoa@sign^0,w,c
  3150   00116A  B4D8               	btfsc	status,2,c
  3151   00116C  EFBA  F008         	goto	u8401
  3152   001170  EFBC  F008         	goto	u8400
  3153   001174                     u8401:
  3154   001174  EFC5  F008         	goto	l7599
  3155   001178                     u8400:
  3156   001178                     
  3157                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] =
      +                           sign;
  3158   001178  C069  F110         	movff	efgtoa@sign,_dbuf
  3159   00117C                     
  3160                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 640:    w--;
  3161   00117C  0659               	decf	efgtoa@w^0,f,c
  3162   00117E  A0D8               	btfss	status,0,c
  3163   001180  065A               	decf	(efgtoa@w+1)^0,f,c
  3164   001182                     
  3165                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 641:    n = 1;
  3166   001182  0E00               	movlw	0
  3167   001184  6E6F               	movwf	(efgtoa@n+1)^0,c
  3168   001186  0E01               	movlw	1
  3169   001188  6E6E               	movwf	efgtoa@n^0,c
  3170   00118A                     l7599:
  3171                           
  3172                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 649:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 650:             strcpy(&d
      +                          buf[n], "nan");
  3173   00118A  0E10               	movlw	low _dbuf
  3174   00118C  246E               	addwf	efgtoa@n^0,w,c
  3175   00118E  6E01               	movwf	strcpy@dest^0,c
  3176   001190  0E01               	movlw	high _dbuf
  3177   001192  206F               	addwfc	(efgtoa@n+1)^0,w,c
  3178   001194  6E02               	movwf	(strcpy@dest+1)^0,c
  3179   001196  0E28               	movlw	low STR_9
  3180   001198  6E03               	movwf	strcpy@src^0,c
  3181   00119A  EC62  F024         	call	_strcpy	;wreg free
  3182   00119E  EF8F  F008         	goto	l7583
  3183   0011A2                     l7607:
  3184                           
  3185                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.
      +                          0;
  3186   0011A2  0E00               	movlw	0
  3187   0011A4  6E70               	movwf	efgtoa@u^0,c
  3188   0011A6  0E00               	movlw	0
  3189   0011A8  6E71               	movwf	(efgtoa@u+1)^0,c
  3190   0011AA  0E80               	movlw	128
  3191   0011AC  6E72               	movwf	(efgtoa@u+2)^0,c
  3192   0011AE  0E3F               	movlw	63
  3193   0011B0  6E73               	movwf	(efgtoa@u+3)^0,c
  3194                           
  3195                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 658:     e = 0;
  3196   0011B2  0E00               	movlw	0
  3197   0011B4  6E58               	movwf	(efgtoa@e+1)^0,c
  3198   0011B6  0E00               	movlw	0
  3199   0011B8  6E57               	movwf	efgtoa@e^0,c
  3200   0011BA                     
  3201                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f =
      +                          = 0.0)) {
  3202   0011BA  C06A  F001         	movff	efgtoa@g,___fleq@ff1
  3203   0011BE  C06B  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  3204   0011C2  C06C  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  3205   0011C6  C06D  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  3206   0011CA  0E00               	movlw	0
  3207   0011CC  6E05               	movwf	___fleq@ff2^0,c
  3208   0011CE  0E00               	movlw	0
  3209   0011D0  6E06               	movwf	(___fleq@ff2+1)^0,c
  3210   0011D2  0E00               	movlw	0
  3211   0011D4  6E07               	movwf	(___fleq@ff2+2)^0,c
  3212   0011D6  0E00               	movlw	0
  3213   0011D8  6E08               	movwf	(___fleq@ff2+3)^0,c
  3214   0011DA  EC8E  F020         	call	___fleq	;wreg free
  3215   0011DE  B0D8               	btfsc	status,0,c
  3216   0011E0  EFF4  F008         	goto	u8411
  3217   0011E4  EFF6  F008         	goto	u8410
  3218   0011E8                     u8411:
  3219   0011E8  EFD1  F009         	goto	l1378
  3220   0011EC                     u8410:
  3221   0011EC  EF02  F009         	goto	l7615
  3222   0011F0                     l1380:
  3223                           
  3224                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 661:    u = ou;
  3225   0011F0  C05B  F070         	movff	efgtoa@ou,efgtoa@u
  3226   0011F4  C05C  F071         	movff	efgtoa@ou+1,efgtoa@u+1
  3227   0011F8  C05D  F072         	movff	efgtoa@ou+2,efgtoa@u+2
  3228   0011FC  C05E  F073         	movff	efgtoa@ou+3,efgtoa@u+3
  3229   001200                     
  3230                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 662:    ++e;
  3231   001200  4A57               	infsnz	efgtoa@e^0,f,c
  3232   001202  2A58               	incf	(efgtoa@e+1)^0,f,c
  3233   001204                     l7615:
  3234                           
  3235                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 660:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  3236   001204  C070  F00F         	movff	efgtoa@u,___flmul@b
  3237   001208  C071  F010         	movff	efgtoa@u+1,___flmul@b+1
  3238   00120C  C072  F011         	movff	efgtoa@u+2,___flmul@b+2
  3239   001210  C073  F012         	movff	efgtoa@u+3,___flmul@b+3
  3240   001214  0E00               	movlw	0
  3241   001216  6E13               	movwf	___flmul@a^0,c
  3242   001218  0E00               	movlw	0
  3243   00121A  6E14               	movwf	(___flmul@a+1)^0,c
  3244   00121C  0E20               	movlw	32
  3245   00121E  6E15               	movwf	(___flmul@a+2)^0,c
  3246   001220  0E41               	movlw	65
  3247   001222  6E16               	movwf	(___flmul@a+3)^0,c
  3248   001224  EC96  F011         	call	___flmul	;wreg free
  3249   001228  C00F  F05B         	movff	?___flmul,efgtoa@ou
  3250   00122C  C010  F05C         	movff	?___flmul+1,efgtoa@ou+1
  3251   001230  C011  F05D         	movff	?___flmul+2,efgtoa@ou+2
  3252   001234  C012  F05E         	movff	?___flmul+3,efgtoa@ou+3
  3253   001238  505B               	movf	efgtoa@ou^0,w,c
  3254   00123A  5C6A               	subwf	efgtoa@g^0,w,c
  3255   00123C  6E01               	movwf	labs@a^0,c
  3256   00123E  505C               	movf	(efgtoa@ou+1)^0,w,c
  3257   001240  586B               	subwfb	(efgtoa@g+1)^0,w,c
  3258   001242  6E02               	movwf	(labs@a+1)^0,c
  3259   001244  505D               	movf	(efgtoa@ou+2)^0,w,c
  3260   001246  586C               	subwfb	(efgtoa@g+2)^0,w,c
  3261   001248  6E03               	movwf	(labs@a+2)^0,c
  3262   00124A  505E               	movf	(efgtoa@ou+3)^0,w,c
  3263   00124C  586D               	subwfb	(efgtoa@g+3)^0,w,c
  3264   00124E  6E04               	movwf	(labs@a+3)^0,c
  3265   001250  EC69  F023         	call	_labs	;wreg free
  3266   001254  BE04               	btfsc	(?_labs+3)^0,7,c
  3267   001256  EF38  F009         	goto	u8421
  3268   00125A  5004               	movf	(?_labs+3)^0,w,c
  3269   00125C  1003               	iorwf	(?_labs+2)^0,w,c
  3270   00125E  1002               	iorwf	(?_labs+1)^0,w,c
  3271   001260  E109               	bnz	u8420
  3272   001262  0E02               	movlw	2
  3273   001264  5C01               	subwf	?_labs^0,w,c
  3274   001266  A0D8               	btfss	status,0,c
  3275   001268  EF38  F009         	goto	u8421
  3276   00126C  EF3A  F009         	goto	u8420
  3277   001270                     u8421:
  3278   001270  EFF8  F008         	goto	l1380
  3279   001274                     u8420:
  3280   001274  C05B  F028         	movff	efgtoa@ou,___flge@ff1
  3281   001278  C05C  F029         	movff	efgtoa@ou+1,___flge@ff1+1
  3282   00127C  C05D  F02A         	movff	efgtoa@ou+2,___flge@ff1+2
  3283   001280  C05E  F02B         	movff	efgtoa@ou+3,___flge@ff1+3
  3284   001284  C06A  F02C         	movff	efgtoa@g,___flge@ff2
  3285   001288  C06B  F02D         	movff	efgtoa@g+1,___flge@ff2+1
  3286   00128C  C06C  F02E         	movff	efgtoa@g+2,___flge@ff2+2
  3287   001290  C06D  F02F         	movff	efgtoa@g+3,___flge@ff2+3
  3288   001294  EC1C  F01E         	call	___flge	;wreg free
  3289   001298  A0D8               	btfss	status,0,c
  3290   00129A  EF51  F009         	goto	u8431
  3291   00129E  EF53  F009         	goto	u8430
  3292   0012A2                     u8431:
  3293   0012A2  EFF8  F008         	goto	l1380
  3294   0012A6                     u8430:
  3295   0012A6                     
  3296                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 664:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  3297   0012A6  5070               	movf	efgtoa@u^0,w,c
  3298   0012A8  5C6A               	subwf	efgtoa@g^0,w,c
  3299   0012AA  6E01               	movwf	labs@a^0,c
  3300   0012AC  5071               	movf	(efgtoa@u+1)^0,w,c
  3301   0012AE  586B               	subwfb	(efgtoa@g+1)^0,w,c
  3302   0012B0  6E02               	movwf	(labs@a+1)^0,c
  3303   0012B2  5072               	movf	(efgtoa@u+2)^0,w,c
  3304   0012B4  586C               	subwfb	(efgtoa@g+2)^0,w,c
  3305   0012B6  6E03               	movwf	(labs@a+2)^0,c
  3306   0012B8  5073               	movf	(efgtoa@u+3)^0,w,c
  3307   0012BA  586D               	subwfb	(efgtoa@g+3)^0,w,c
  3308   0012BC  6E04               	movwf	(labs@a+3)^0,c
  3309   0012BE  EC69  F023         	call	_labs	;wreg free
  3310   0012C2  BE04               	btfsc	(?_labs+3)^0,7,c
  3311   0012C4  EF71  F009         	goto	u8440
  3312   0012C8  5004               	movf	(?_labs+3)^0,w,c
  3313   0012CA  1003               	iorwf	(?_labs+2)^0,w,c
  3314   0012CC  1002               	iorwf	(?_labs+1)^0,w,c
  3315   0012CE  E107               	bnz	u8441
  3316   0012D0  0E02               	movlw	2
  3317   0012D2  5C01               	subwf	?_labs^0,w,c
  3318   0012D4  B0D8               	btfsc	status,0,c
  3319   0012D6  EF6F  F009         	goto	u8441
  3320   0012DA  EF71  F009         	goto	u8440
  3321   0012DE                     u8441:
  3322   0012DE  EFB8  F009         	goto	l7633
  3323   0012E2                     u8440:
  3324   0012E2                     l7623:
  3325                           
  3326                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 665:    g = u;
  3327   0012E2  C070  F06A         	movff	efgtoa@u,efgtoa@g
  3328   0012E6  C071  F06B         	movff	efgtoa@u+1,efgtoa@g+1
  3329   0012EA  C072  F06C         	movff	efgtoa@u+2,efgtoa@g+2
  3330   0012EE  C073  F06D         	movff	efgtoa@u+3,efgtoa@g+3
  3331                           
  3332                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 666:   }
  3333   0012F2  EFD1  F009         	goto	l1378
  3334   0012F6                     l7625:
  3335                           
  3336                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 669:     u.f = u.
      +                          f/10.0;
  3337   0012F6  C070  F001         	movff	efgtoa@u,___fldiv@b
  3338   0012FA  C071  F002         	movff	efgtoa@u+1,___fldiv@b+1
  3339   0012FE  C072  F003         	movff	efgtoa@u+2,___fldiv@b+2
  3340   001302  C073  F004         	movff	efgtoa@u+3,___fldiv@b+3
  3341   001306  0E00               	movlw	0
  3342   001308  6E05               	movwf	___fldiv@a^0,c
  3343   00130A  0E00               	movlw	0
  3344   00130C  6E06               	movwf	(___fldiv@a+1)^0,c
  3345   00130E  0E20               	movlw	32
  3346   001310  6E07               	movwf	(___fldiv@a+2)^0,c
  3347   001312  0E41               	movlw	65
  3348   001314  6E08               	movwf	(___fldiv@a+3)^0,c
  3349   001316  ECAB  F013         	call	___fldiv	;wreg free
  3350   00131A  C001  F070         	movff	?___fldiv,efgtoa@u
  3351   00131E  C002  F071         	movff	?___fldiv+1,efgtoa@u+1
  3352   001322  C003  F072         	movff	?___fldiv+2,efgtoa@u+2
  3353   001326  C004  F073         	movff	?___fldiv+3,efgtoa@u+3
  3354   00132A                     
  3355                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 670:     --e;
  3356   00132A  0657               	decf	efgtoa@e^0,f,c
  3357   00132C  A0D8               	btfss	status,0,c
  3358   00132E  0658               	decf	(efgtoa@e+1)^0,f,c
  3359   001330                     
  3360                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 671:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  3361   001330  5070               	movf	efgtoa@u^0,w,c
  3362   001332  5C6A               	subwf	efgtoa@g^0,w,c
  3363   001334  6E01               	movwf	labs@a^0,c
  3364   001336  5071               	movf	(efgtoa@u+1)^0,w,c
  3365   001338  586B               	subwfb	(efgtoa@g+1)^0,w,c
  3366   00133A  6E02               	movwf	(labs@a+1)^0,c
  3367   00133C  5072               	movf	(efgtoa@u+2)^0,w,c
  3368   00133E  586C               	subwfb	(efgtoa@g+2)^0,w,c
  3369   001340  6E03               	movwf	(labs@a+2)^0,c
  3370   001342  5073               	movf	(efgtoa@u+3)^0,w,c
  3371   001344  586D               	subwfb	(efgtoa@g+3)^0,w,c
  3372   001346  6E04               	movwf	(labs@a+3)^0,c
  3373   001348  EC69  F023         	call	_labs	;wreg free
  3374   00134C  BE04               	btfsc	(?_labs+3)^0,7,c
  3375   00134E  EFB6  F009         	goto	u8450
  3376   001352  5004               	movf	(?_labs+3)^0,w,c
  3377   001354  1003               	iorwf	(?_labs+2)^0,w,c
  3378   001356  1002               	iorwf	(?_labs+1)^0,w,c
  3379   001358  E107               	bnz	u8451
  3380   00135A  0E02               	movlw	2
  3381   00135C  5C01               	subwf	?_labs^0,w,c
  3382   00135E  B0D8               	btfsc	status,0,c
  3383   001360  EFB4  F009         	goto	u8451
  3384   001364  EFB6  F009         	goto	u8450
  3385   001368                     u8451:
  3386   001368  EFB8  F009         	goto	l7633
  3387   00136C                     u8450:
  3388   00136C  EF71  F009         	goto	l7623
  3389   001370                     l7633:
  3390                           
  3391                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 668:    while (g.
      +                          f < u.f) {
  3392   001370  C06A  F028         	movff	efgtoa@g,___flge@ff1
  3393   001374  C06B  F029         	movff	efgtoa@g+1,___flge@ff1+1
  3394   001378  C06C  F02A         	movff	efgtoa@g+2,___flge@ff1+2
  3395   00137C  C06D  F02B         	movff	efgtoa@g+3,___flge@ff1+3
  3396   001380  C070  F02C         	movff	efgtoa@u,___flge@ff2
  3397   001384  C071  F02D         	movff	efgtoa@u+1,___flge@ff2+1
  3398   001388  C072  F02E         	movff	efgtoa@u+2,___flge@ff2+2
  3399   00138C  C073  F02F         	movff	efgtoa@u+3,___flge@ff2+3
  3400   001390  EC1C  F01E         	call	___flge	;wreg free
  3401   001394  A0D8               	btfss	status,0,c
  3402   001396  EFCF  F009         	goto	u8461
  3403   00139A  EFD1  F009         	goto	u8460
  3404   00139E                     u8461:
  3405   00139E  EF7B  F009         	goto	l7625
  3406   0013A2                     u8460:
  3407   0013A2                     l1378:
  3408                           
  3409                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 683:  mode = c;
  3410   0013A2  C045  F051         	movff	efgtoa@c,efgtoa@mode
  3411                           
  3412                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 685:     nmode = 
      +                          mode;
  3413   0013A6  C051  F052         	movff	efgtoa@mode,efgtoa@nmode
  3414   0013AA                     
  3415                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 695:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 696:         p = (prec < 0)
      +                           ? 6 : prec;
  3416   0013AA  0100               	movlb	0	; () banked
  3417   0013AC  BFEF               	btfsc	(_prec+1)& (0+255),7,b
  3418   0013AE  EFDB  F009         	goto	u8471
  3419   0013B2  EFDD  F009         	goto	u8470
  3420   0013B6                     u8471:
  3421   0013B6  EFE3  F009         	goto	l7639
  3422   0013BA                     u8470:
  3423   0013BA                     
  3424                           ; BSR set to: 0
  3425   0013BA  C0EE  F04A         	movff	_prec,efgtoa@p
  3426   0013BE  C0EF  F04B         	movff	_prec+1,efgtoa@p+1
  3427   0013C2  EFE7  F009         	goto	l7641
  3428   0013C6                     l7639:
  3429                           
  3430                           ; BSR set to: 0
  3431   0013C6  0E00               	movlw	0
  3432   0013C8  6E4B               	movwf	(efgtoa@p+1)^0,c
  3433   0013CA  0E06               	movlw	6
  3434   0013CC  6E4A               	movwf	efgtoa@p^0,c
  3435   0013CE                     l7641:
  3436                           
  3437                           ; BSR set to: 0
  3438                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 697:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 711:     m = p;
  3439   0013CE  C04A  F055         	movff	efgtoa@p,efgtoa@m
  3440   0013D2  C04B  F056         	movff	efgtoa@p+1,efgtoa@m+1
  3441   0013D6                     
  3442                           ; BSR set to: 0
  3443                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 715:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 716:         ++m;
  3444   0013D6  4A55               	infsnz	efgtoa@m^0,f,c
  3445   0013D8  2A56               	incf	(efgtoa@m+1)^0,f,c
  3446   0013DA                     
  3447                           ; BSR set to: 0
  3448                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 717:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 721:     if (nmode == 'f
      +                          ') {
  3449   0013DA  0E66               	movlw	102
  3450   0013DC  1852               	xorwf	efgtoa@nmode^0,w,c
  3451   0013DE  A4D8               	btfss	status,2,c
  3452   0013E0  EFF4  F009         	goto	u8481
  3453   0013E4  EFF6  F009         	goto	u8480
  3454   0013E8                     u8481:
  3455   0013E8  EF16  F00A         	goto	l7655
  3456   0013EC                     u8480:
  3457   0013EC                     
  3458                           ; BSR set to: 0
  3459                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 722:         if (
      +                          e < 0) {
  3460   0013EC  BE58               	btfsc	(efgtoa@e+1)^0,7,c
  3461   0013EE  EFFD  F009         	goto	u8490
  3462   0013F2  EFFB  F009         	goto	u8491
  3463   0013F6                     u8491:
  3464   0013F6  EF09  F00A         	goto	l7651
  3465   0013FA                     u8490:
  3466   0013FA                     
  3467                           ; BSR set to: 0
  3468                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 723:             
      +                          u.f = 1.0;
  3469   0013FA  0E00               	movlw	0
  3470   0013FC  6E70               	movwf	efgtoa@u^0,c
  3471   0013FE  0E00               	movlw	0
  3472   001400  6E71               	movwf	(efgtoa@u+1)^0,c
  3473   001402  0E80               	movlw	128
  3474   001404  6E72               	movwf	(efgtoa@u+2)^0,c
  3475   001406  0E3F               	movlw	63
  3476   001408  6E73               	movwf	(efgtoa@u+3)^0,c
  3477                           
  3478                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 724:             
      +                          e = 0;
  3479   00140A  0E00               	movlw	0
  3480   00140C  6E58               	movwf	(efgtoa@e+1)^0,c
  3481   00140E  0E00               	movlw	0
  3482   001410  6E57               	movwf	efgtoa@e^0,c
  3483   001412                     l7651:
  3484                           
  3485                           ; BSR set to: 0
  3486                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 726:         if (
      +                          !(mode == 'g')) {
  3487   001412  0E67               	movlw	103
  3488   001414  1851               	xorwf	efgtoa@mode^0,w,c
  3489   001416  B4D8               	btfsc	status,2,c
  3490   001418  EF10  F00A         	goto	u8501
  3491   00141C  EF12  F00A         	goto	u8500
  3492   001420                     u8501:
  3493   001420  EF16  F00A         	goto	l7655
  3494   001424                     u8500:
  3495   001424                     
  3496                           ; BSR set to: 0
  3497                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 727:             
      +                          m += e;
  3498   001424  5057               	movf	efgtoa@e^0,w,c
  3499   001426  2655               	addwf	efgtoa@m^0,f,c
  3500   001428  5058               	movf	(efgtoa@e+1)^0,w,c
  3501   00142A  2256               	addwfc	(efgtoa@m+1)^0,f,c
  3502   00142C                     l7655:
  3503                           
  3504                           ; BSR set to: 0
  3505                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 733:     i = 0;
  3506   00142C  0E00               	movlw	0
  3507   00142E  6E60               	movwf	(efgtoa@i+1)^0,c
  3508   001430  0E00               	movlw	0
  3509   001432  6E5F               	movwf	efgtoa@i^0,c
  3510   001434                     
  3511                           ; BSR set to: 0
  3512                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
  3513   001434  C06A  F061         	movff	efgtoa@g,efgtoa@h
  3514   001438  C06B  F062         	movff	efgtoa@g+1,efgtoa@h+1
  3515   00143C  C06C  F063         	movff	efgtoa@g+2,efgtoa@h+2
  3516   001440  C06D  F064         	movff	efgtoa@g+3,efgtoa@h+3
  3517   001444                     
  3518                           ; BSR set to: 0
  3519                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 735:     ou = u;
  3520   001444  C070  F05B         	movff	efgtoa@u,efgtoa@ou
  3521   001448  C071  F05C         	movff	efgtoa@u+1,efgtoa@ou+1
  3522   00144C  C072  F05D         	movff	efgtoa@u+2,efgtoa@ou+2
  3523   001450  C073  F05E         	movff	efgtoa@u+3,efgtoa@ou+3
  3524                           
  3525                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  3526   001454  EFA6  F00A         	goto	l7669
  3527   001458                     l7661:
  3528                           
  3529                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 737:         l = 
      +                          floorf(h/u.f);
  3530   001458  C061  F001         	movff	efgtoa@h,___fldiv@b
  3531   00145C  C062  F002         	movff	efgtoa@h+1,___fldiv@b+1
  3532   001460  C063  F003         	movff	efgtoa@h+2,___fldiv@b+2
  3533   001464  C064  F004         	movff	efgtoa@h+3,___fldiv@b+3
  3534   001468  C070  F005         	movff	efgtoa@u,___fldiv@a
  3535   00146C  C071  F006         	movff	efgtoa@u+1,___fldiv@a+1
  3536   001470  C072  F007         	movff	efgtoa@u+2,___fldiv@a+2
  3537   001474  C073  F008         	movff	efgtoa@u+3,___fldiv@a+3
  3538   001478  ECAB  F013         	call	___fldiv	;wreg free
  3539   00147C  C001  F01A         	movff	?___fldiv,floorf@x
  3540   001480  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  3541   001484  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  3542   001488  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  3543   00148C  EC59  F018         	call	_floorf	;wreg free
  3544   001490  C01A  F065         	movff	?_floorf,efgtoa@l
  3545   001494  C01B  F066         	movff	?_floorf+1,efgtoa@l+1
  3546   001498  C01C  F067         	movff	?_floorf+2,efgtoa@l+2
  3547   00149C  C01D  F068         	movff	?_floorf+3,efgtoa@l+3
  3548                           
  3549                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 738:         d = 
      +                          (int)l;
  3550   0014A0  C065  F001         	movff	efgtoa@l,___fltol@f1
  3551   0014A4  C066  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3552   0014A8  C067  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3553   0014AC  C068  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3554   0014B0  EC99  F01D         	call	___fltol	;wreg free
  3555   0014B4  C001  F053         	movff	?___fltol,efgtoa@d
  3556   0014B8  C002  F054         	movff	?___fltol+1,efgtoa@d+1
  3557   0014BC                     
  3558                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 739:         h -=
      +                           l*u.f;
  3559   0014BC  C061  F038         	movff	efgtoa@h,___flsub@b
  3560   0014C0  C062  F039         	movff	efgtoa@h+1,___flsub@b+1
  3561   0014C4  C063  F03A         	movff	efgtoa@h+2,___flsub@b+2
  3562   0014C8  C064  F03B         	movff	efgtoa@h+3,___flsub@b+3
  3563   0014CC  C065  F013         	movff	efgtoa@l,___flmul@a
  3564   0014D0  C066  F014         	movff	efgtoa@l+1,___flmul@a+1
  3565   0014D4  C067  F015         	movff	efgtoa@l+2,___flmul@a+2
  3566   0014D8  C068  F016         	movff	efgtoa@l+3,___flmul@a+3
  3567   0014DC  C070  F00F         	movff	efgtoa@u,___flmul@b
  3568   0014E0  C071  F010         	movff	efgtoa@u+1,___flmul@b+1
  3569   0014E4  C072  F011         	movff	efgtoa@u+2,___flmul@b+2
  3570   0014E8  C073  F012         	movff	efgtoa@u+3,___flmul@b+3
  3571   0014EC  EC96  F011         	call	___flmul	;wreg free
  3572   0014F0  C00F  F03C         	movff	?___flmul,___flsub@a
  3573   0014F4  C010  F03D         	movff	?___flmul+1,___flsub@a+1
  3574   0014F8  C011  F03E         	movff	?___flmul+2,___flsub@a+2
  3575   0014FC  C012  F03F         	movff	?___flmul+3,___flsub@a+3
  3576   001500  ECDF  F023         	call	___flsub	;wreg free
  3577   001504  C038  F061         	movff	?___flsub,efgtoa@h
  3578   001508  C039  F062         	movff	?___flsub+1,efgtoa@h+1
  3579   00150C  C03A  F063         	movff	?___flsub+2,efgtoa@h+2
  3580   001510  C03B  F064         	movff	?___flsub+3,efgtoa@h+3
  3581   001514                     
  3582                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 740:         u.f 
      +                          = u.f/10.0;
  3583   001514  C070  F001         	movff	efgtoa@u,___fldiv@b
  3584   001518  C071  F002         	movff	efgtoa@u+1,___fldiv@b+1
  3585   00151C  C072  F003         	movff	efgtoa@u+2,___fldiv@b+2
  3586   001520  C073  F004         	movff	efgtoa@u+3,___fldiv@b+3
  3587   001524  0E00               	movlw	0
  3588   001526  6E05               	movwf	___fldiv@a^0,c
  3589   001528  0E00               	movlw	0
  3590   00152A  6E06               	movwf	(___fldiv@a+1)^0,c
  3591   00152C  0E20               	movlw	32
  3592   00152E  6E07               	movwf	(___fldiv@a+2)^0,c
  3593   001530  0E41               	movlw	65
  3594   001532  6E08               	movwf	(___fldiv@a+3)^0,c
  3595   001534  ECAB  F013         	call	___fldiv	;wreg free
  3596   001538  C001  F070         	movff	?___fldiv,efgtoa@u
  3597   00153C  C002  F071         	movff	?___fldiv+1,efgtoa@u+1
  3598   001540  C003  F072         	movff	?___fldiv+2,efgtoa@u+2
  3599   001544  C004  F073         	movff	?___fldiv+3,efgtoa@u+3
  3600   001548                     
  3601                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 741:         ++i;
  3602   001548  4A5F               	infsnz	efgtoa@i^0,f,c
  3603   00154A  2A60               	incf	(efgtoa@i+1)^0,f,c
  3604   00154C                     l7669:
  3605                           
  3606                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  3607   00154C  5055               	movf	efgtoa@m^0,w,c
  3608   00154E  5C5F               	subwf	efgtoa@i^0,w,c
  3609   001550  5060               	movf	(efgtoa@i+1)^0,w,c
  3610   001552  0A80               	xorlw	128
  3611   001554  6E46               	movwf	??_efgtoa^0,c
  3612   001556  5056               	movf	(efgtoa@m+1)^0,w,c
  3613   001558  0A80               	xorlw	128
  3614   00155A  5846               	subwfb	??_efgtoa^0,w,c
  3615   00155C  A0D8               	btfss	status,0,c
  3616   00155E  EFB3  F00A         	goto	u8511
  3617   001562  EFB5  F00A         	goto	u8510
  3618   001566                     u8511:
  3619   001566  EF2C  F00A         	goto	l7661
  3620   00156A                     u8510:
  3621   00156A                     
  3622                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 745:     l = u.f*
      +                          5.0;
  3623   00156A  C070  F00F         	movff	efgtoa@u,___flmul@b
  3624   00156E  C071  F010         	movff	efgtoa@u+1,___flmul@b+1
  3625   001572  C072  F011         	movff	efgtoa@u+2,___flmul@b+2
  3626   001576  C073  F012         	movff	efgtoa@u+3,___flmul@b+3
  3627   00157A  0E00               	movlw	0
  3628   00157C  6E13               	movwf	___flmul@a^0,c
  3629   00157E  0E00               	movlw	0
  3630   001580  6E14               	movwf	(___flmul@a+1)^0,c
  3631   001582  0EA0               	movlw	160
  3632   001584  6E15               	movwf	(___flmul@a+2)^0,c
  3633   001586  0E40               	movlw	64
  3634   001588  6E16               	movwf	(___flmul@a+3)^0,c
  3635   00158A  EC96  F011         	call	___flmul	;wreg free
  3636   00158E  C00F  F065         	movff	?___flmul,efgtoa@l
  3637   001592  C010  F066         	movff	?___flmul+1,efgtoa@l+1
  3638   001596  C011  F067         	movff	?___flmul+2,efgtoa@l+2
  3639   00159A  C012  F068         	movff	?___flmul+3,efgtoa@l+3
  3640   00159E                     
  3641                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 746:     if (h < 
      +                          l) {
  3642   00159E  C061  F028         	movff	efgtoa@h,___flge@ff1
  3643   0015A2  C062  F029         	movff	efgtoa@h+1,___flge@ff1+1
  3644   0015A6  C063  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  3645   0015AA  C064  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  3646   0015AE  C065  F02C         	movff	efgtoa@l,___flge@ff2
  3647   0015B2  C066  F02D         	movff	efgtoa@l+1,___flge@ff2+1
  3648   0015B6  C067  F02E         	movff	efgtoa@l+2,___flge@ff2+2
  3649   0015BA  C068  F02F         	movff	efgtoa@l+3,___flge@ff2+3
  3650   0015BE  EC1C  F01E         	call	___flge	;wreg free
  3651   0015C2  B0D8               	btfsc	status,0,c
  3652   0015C4  EFE6  F00A         	goto	u8521
  3653   0015C8  EFE8  F00A         	goto	u8520
  3654   0015CC                     u8521:
  3655   0015CC  EFF2  F00A         	goto	l7677
  3656   0015D0                     u8520:
  3657   0015D0                     
  3658                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 747:         l = 
      +                          0.0;
  3659   0015D0  0E00               	movlw	0
  3660   0015D2  6E65               	movwf	efgtoa@l^0,c
  3661   0015D4  0E00               	movlw	0
  3662   0015D6  6E66               	movwf	(efgtoa@l+1)^0,c
  3663   0015D8  0E00               	movlw	0
  3664   0015DA  6E67               	movwf	(efgtoa@l+2)^0,c
  3665   0015DC  0E00               	movlw	0
  3666   0015DE  6E68               	movwf	(efgtoa@l+3)^0,c
  3667                           
  3668                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 748:     } else {
  3669   0015E0  EF1A  F00B         	goto	l7683
  3670   0015E4                     l7677:
  3671                           
  3672                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 750:         if (
      +                          (h == l) && !(d % 2)) {
  3673   0015E4  C061  F001         	movff	efgtoa@h,___fleq@ff1
  3674   0015E8  C062  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  3675   0015EC  C063  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  3676   0015F0  C064  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  3677   0015F4  C065  F005         	movff	efgtoa@l,___fleq@ff2
  3678   0015F8  C066  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  3679   0015FC  C067  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  3680   001600  C068  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  3681   001604  EC8E  F020         	call	___fleq	;wreg free
  3682   001608  A0D8               	btfss	status,0,c
  3683   00160A  EF09  F00B         	goto	u8531
  3684   00160E  EF0B  F00B         	goto	u8530
  3685   001612                     u8531:
  3686   001612  EF1A  F00B         	goto	l7683
  3687   001616                     u8530:
  3688   001616  B053               	btfsc	efgtoa@d^0,0,c
  3689   001618  EF10  F00B         	goto	u8541
  3690   00161C  EF12  F00B         	goto	u8540
  3691   001620                     u8541:
  3692   001620  EF1A  F00B         	goto	l7683
  3693   001624                     u8540:
  3694   001624                     
  3695                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 751:             
      +                          l = 0.0;
  3696   001624  0E00               	movlw	0
  3697   001626  6E65               	movwf	efgtoa@l^0,c
  3698   001628  0E00               	movlw	0
  3699   00162A  6E66               	movwf	(efgtoa@l+1)^0,c
  3700   00162C  0E00               	movlw	0
  3701   00162E  6E67               	movwf	(efgtoa@l+2)^0,c
  3702   001630  0E00               	movlw	0
  3703   001632  6E68               	movwf	(efgtoa@l+3)^0,c
  3704   001634                     l7683:
  3705                           
  3706                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 756:     h = g.f 
      +                          + l;
  3707   001634  C06A  F028         	movff	efgtoa@g,___fladd@b
  3708   001638  C06B  F029         	movff	efgtoa@g+1,___fladd@b+1
  3709   00163C  C06C  F02A         	movff	efgtoa@g+2,___fladd@b+2
  3710   001640  C06D  F02B         	movff	efgtoa@g+3,___fladd@b+3
  3711   001644  C065  F02C         	movff	efgtoa@l,___fladd@a
  3712   001648  C066  F02D         	movff	efgtoa@l+1,___fladd@a+1
  3713   00164C  C067  F02E         	movff	efgtoa@l+2,___fladd@a+2
  3714   001650  C068  F02F         	movff	efgtoa@l+3,___fladd@a+3
  3715   001654  ECF8  F00C         	call	___fladd	;wreg free
  3716   001658  C028  F061         	movff	?___fladd,efgtoa@h
  3717   00165C  C029  F062         	movff	?___fladd+1,efgtoa@h+1
  3718   001660  C02A  F063         	movff	?___fladd+2,efgtoa@h+2
  3719   001664  C02B  F064         	movff	?___fladd+3,efgtoa@h+3
  3720   001668                     
  3721                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 758:  if (h >= (o
      +                          u.f*10.0)) {
  3722   001668  C061  F028         	movff	efgtoa@h,___flge@ff1
  3723   00166C  C062  F029         	movff	efgtoa@h+1,___flge@ff1+1
  3724   001670  C063  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  3725   001674  C064  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  3726   001678  0E00               	movlw	0
  3727   00167A  6E13               	movwf	___flmul@a^0,c
  3728   00167C  0E00               	movlw	0
  3729   00167E  6E14               	movwf	(___flmul@a+1)^0,c
  3730   001680  0E20               	movlw	32
  3731   001682  6E15               	movwf	(___flmul@a+2)^0,c
  3732   001684  0E41               	movlw	65
  3733   001686  6E16               	movwf	(___flmul@a+3)^0,c
  3734   001688  C05B  F00F         	movff	efgtoa@ou,___flmul@b
  3735   00168C  C05C  F010         	movff	efgtoa@ou+1,___flmul@b+1
  3736   001690  C05D  F011         	movff	efgtoa@ou+2,___flmul@b+2
  3737   001694  C05E  F012         	movff	efgtoa@ou+3,___flmul@b+3
  3738   001698  EC96  F011         	call	___flmul	;wreg free
  3739   00169C  C00F  F02C         	movff	?___flmul,___flge@ff2
  3740   0016A0  C010  F02D         	movff	?___flmul+1,___flge@ff2+1
  3741   0016A4  C011  F02E         	movff	?___flmul+2,___flge@ff2+2
  3742   0016A8  C012  F02F         	movff	?___flmul+3,___flge@ff2+3
  3743   0016AC  EC1C  F01E         	call	___flge	;wreg free
  3744   0016B0  A0D8               	btfss	status,0,c
  3745   0016B2  EF5D  F00B         	goto	u8551
  3746   0016B6  EF5F  F00B         	goto	u8550
  3747   0016BA                     u8551:
  3748   0016BA  EF86  F00B         	goto	l7695
  3749   0016BE                     u8550:
  3750   0016BE                     
  3751                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 759:   e++;
  3752   0016BE  4A57               	infsnz	efgtoa@e^0,f,c
  3753   0016C0  2A58               	incf	(efgtoa@e+1)^0,f,c
  3754   0016C2                     
  3755                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10
      +                          .0;
  3756   0016C2  C05B  F00F         	movff	efgtoa@ou,___flmul@b
  3757   0016C6  C05C  F010         	movff	efgtoa@ou+1,___flmul@b+1
  3758   0016CA  C05D  F011         	movff	efgtoa@ou+2,___flmul@b+2
  3759   0016CE  C05E  F012         	movff	efgtoa@ou+3,___flmul@b+3
  3760   0016D2  0E00               	movlw	0
  3761   0016D4  6E13               	movwf	___flmul@a^0,c
  3762   0016D6  0E00               	movlw	0
  3763   0016D8  6E14               	movwf	(___flmul@a+1)^0,c
  3764   0016DA  0E20               	movlw	32
  3765   0016DC  6E15               	movwf	(___flmul@a+2)^0,c
  3766   0016DE  0E41               	movlw	65
  3767   0016E0  6E16               	movwf	(___flmul@a+3)^0,c
  3768   0016E2  EC96  F011         	call	___flmul	;wreg free
  3769   0016E6  C00F  F05B         	movff	?___flmul,efgtoa@ou
  3770   0016EA  C010  F05C         	movff	?___flmul+1,efgtoa@ou+1
  3771   0016EE  C011  F05D         	movff	?___flmul+2,efgtoa@ou+2
  3772   0016F2  C012  F05E         	movff	?___flmul+3,efgtoa@ou+3
  3773   0016F6                     
  3774                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 762:   if (nmode 
      +                          == 'f') {
  3775   0016F6  0E66               	movlw	102
  3776   0016F8  1852               	xorwf	efgtoa@nmode^0,w,c
  3777   0016FA  A4D8               	btfss	status,2,c
  3778   0016FC  EF82  F00B         	goto	u8561
  3779   001700  EF84  F00B         	goto	u8560
  3780   001704                     u8561:
  3781   001704  EF86  F00B         	goto	l7695
  3782   001708                     u8560:
  3783   001708                     
  3784                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 764:    m++;
  3785   001708  4A55               	infsnz	efgtoa@m^0,f,c
  3786   00170A  2A56               	incf	(efgtoa@m+1)^0,f,c
  3787   00170C                     l7695:
  3788                           
  3789                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 770:     u = ou;
  3790   00170C  C05B  F070         	movff	efgtoa@ou,efgtoa@u
  3791   001710  C05C  F071         	movff	efgtoa@ou+1,efgtoa@u+1
  3792   001714  C05D  F072         	movff	efgtoa@ou+2,efgtoa@u+2
  3793   001718  C05E  F073         	movff	efgtoa@ou+3,efgtoa@u+3
  3794   00171C                     
  3795                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 774:  ne = e;
  3796   00171C  C057  F048         	movff	efgtoa@e,efgtoa@ne
  3797   001720  C058  F049         	movff	efgtoa@e+1,efgtoa@ne+1
  3798   001724                     
  3799                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
  3800   001724  0E00               	movlw	0
  3801   001726  6E50               	movwf	efgtoa@pp^0,c
  3802   001728                     
  3803                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 777:     t = 0;
  3804   001728  0E00               	movlw	0
  3805   00172A  6E4D               	movwf	(efgtoa@t+1)^0,c
  3806   00172C  0E00               	movlw	0
  3807   00172E  6E4C               	movwf	efgtoa@t^0,c
  3808   001730                     
  3809                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 778:     i = 0;
  3810   001730  0E00               	movlw	0
  3811   001732  6E60               	movwf	(efgtoa@i+1)^0,c
  3812   001734  0E00               	movlw	0
  3813   001736  6E5F               	movwf	efgtoa@i^0,c
  3814                           
  3815                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3816   001738  EF80  F00C         	goto	l7745
  3817   00173C                     l7705:
  3818                           
  3819                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 780:         l = 
      +                          floorf(h/u.f);
  3820   00173C  C061  F001         	movff	efgtoa@h,___fldiv@b
  3821   001740  C062  F002         	movff	efgtoa@h+1,___fldiv@b+1
  3822   001744  C063  F003         	movff	efgtoa@h+2,___fldiv@b+2
  3823   001748  C064  F004         	movff	efgtoa@h+3,___fldiv@b+3
  3824   00174C  C070  F005         	movff	efgtoa@u,___fldiv@a
  3825   001750  C071  F006         	movff	efgtoa@u+1,___fldiv@a+1
  3826   001754  C072  F007         	movff	efgtoa@u+2,___fldiv@a+2
  3827   001758  C073  F008         	movff	efgtoa@u+3,___fldiv@a+3
  3828   00175C  ECAB  F013         	call	___fldiv	;wreg free
  3829   001760  C001  F01A         	movff	?___fldiv,floorf@x
  3830   001764  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  3831   001768  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  3832   00176C  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  3833   001770  EC59  F018         	call	_floorf	;wreg free
  3834   001774  C01A  F065         	movff	?_floorf,efgtoa@l
  3835   001778  C01B  F066         	movff	?_floorf+1,efgtoa@l+1
  3836   00177C  C01C  F067         	movff	?_floorf+2,efgtoa@l+2
  3837   001780  C01D  F068         	movff	?_floorf+3,efgtoa@l+3
  3838                           
  3839                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 781:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  3840   001784  C065  F001         	movff	efgtoa@l,___fltol@f1
  3841   001788  C066  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3842   00178C  C067  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3843   001790  C068  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3844   001794  EC99  F01D         	call	___fltol	;wreg free
  3845   001798  BE02               	btfsc	(?___fltol+1)^0,7,c
  3846   00179A  EFDA  F00B         	goto	u8570
  3847   00179E  5002               	movf	(?___fltol+1)^0,w,c
  3848   0017A0  E107               	bnz	u8571
  3849   0017A2  0E0A               	movlw	10
  3850   0017A4  5C01               	subwf	?___fltol^0,w,c
  3851   0017A6  B0D8               	btfsc	status,0,c
  3852   0017A8  EFD8  F00B         	goto	u8571
  3853   0017AC  EFDA  F00B         	goto	u8570
  3854   0017B0                     u8571:
  3855   0017B0  EFEA  F00B         	goto	l7709
  3856   0017B4                     u8570:
  3857   0017B4  C065  F001         	movff	efgtoa@l,___fltol@f1
  3858   0017B8  C066  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3859   0017BC  C067  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3860   0017C0  C068  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3861   0017C4  EC99  F01D         	call	___fltol	;wreg free
  3862   0017C8  C001  F053         	movff	?___fltol,efgtoa@d
  3863   0017CC  C002  F054         	movff	?___fltol+1,efgtoa@d+1
  3864   0017D0  EFEE  F00B         	goto	l1408
  3865   0017D4                     l7709:
  3866   0017D4  0E00               	movlw	0
  3867   0017D6  6E54               	movwf	(efgtoa@d+1)^0,c
  3868   0017D8  0E09               	movlw	9
  3869   0017DA  6E53               	movwf	efgtoa@d^0,c
  3870   0017DC                     l1408:
  3871                           
  3872                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 792:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 793:             if (!pp &
      +                          & (ne < 0)) {
  3873   0017DC  5050               	movf	efgtoa@pp^0,w,c
  3874   0017DE  A4D8               	btfss	status,2,c
  3875   0017E0  EFF4  F00B         	goto	u8581
  3876   0017E4  EFF6  F00B         	goto	u8580
  3877   0017E8                     u8581:
  3878   0017E8  EF1E  F00C         	goto	l7729
  3879   0017EC                     u8580:
  3880   0017EC  BE49               	btfsc	(efgtoa@ne+1)^0,7,c
  3881   0017EE  EFFD  F00B         	goto	u8590
  3882   0017F2  EFFB  F00B         	goto	u8591
  3883   0017F6                     u8591:
  3884   0017F6  EF1E  F00C         	goto	l7729
  3885   0017FA                     u8590:
  3886   0017FA                     
  3887                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 794:             
      +                              dbuf[n++] = '.';
  3888   0017FA  0E10               	movlw	low _dbuf
  3889   0017FC  246E               	addwf	efgtoa@n^0,w,c
  3890   0017FE  6ED9               	movwf	fsr2l,c
  3891   001800  0E01               	movlw	high _dbuf
  3892   001802  206F               	addwfc	(efgtoa@n+1)^0,w,c
  3893   001804  6EDA               	movwf	fsr2h,c
  3894   001806  0E2E               	movlw	46
  3895   001808  6EDF               	movwf	indf2,c
  3896   00180A  4A6E               	infsnz	efgtoa@n^0,f,c
  3897   00180C  2A6F               	incf	(efgtoa@n+1)^0,f,c
  3898   00180E                     
  3899                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 795:             
      +                              --w;
  3900   00180E  0659               	decf	efgtoa@w^0,f,c
  3901   001810  A0D8               	btfss	status,0,c
  3902   001812  065A               	decf	(efgtoa@w+1)^0,f,c
  3903   001814                     
  3904                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 796:             
      +                              pp = 1;
  3905   001814  0E01               	movlw	1
  3906   001816  6E50               	movwf	efgtoa@pp^0,c
  3907   001818  EF1E  F00C         	goto	l7729
  3908   00181C                     l7721:
  3909                           
  3910                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 799:             
      +                              dbuf[n++] = '0';
  3911   00181C  0E10               	movlw	low _dbuf
  3912   00181E  246E               	addwf	efgtoa@n^0,w,c
  3913   001820  6ED9               	movwf	fsr2l,c
  3914   001822  0E01               	movlw	high _dbuf
  3915   001824  206F               	addwfc	(efgtoa@n+1)^0,w,c
  3916   001826  6EDA               	movwf	fsr2h,c
  3917   001828  0E30               	movlw	48
  3918   00182A  6EDF               	movwf	indf2,c
  3919   00182C  4A6E               	infsnz	efgtoa@n^0,f,c
  3920   00182E  2A6F               	incf	(efgtoa@n+1)^0,f,c
  3921   001830                     
  3922                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 800:             
      +                              --w;
  3923   001830  0659               	decf	efgtoa@w^0,f,c
  3924   001832  A0D8               	btfss	status,0,c
  3925   001834  065A               	decf	(efgtoa@w+1)^0,f,c
  3926   001836                     
  3927                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 801:             
      +                              --t;
  3928   001836  064C               	decf	efgtoa@t^0,f,c
  3929   001838  A0D8               	btfss	status,0,c
  3930   00183A  064D               	decf	(efgtoa@t+1)^0,f,c
  3931   00183C                     l7729:
  3932                           
  3933                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 798:             
      +                          while (t) {
  3934   00183C  504C               	movf	efgtoa@t^0,w,c
  3935   00183E  104D               	iorwf	(efgtoa@t+1)^0,w,c
  3936   001840  A4D8               	btfss	status,2,c
  3937   001842  EF25  F00C         	goto	u8601
  3938   001846  EF27  F00C         	goto	u8600
  3939   00184A                     u8601:
  3940   00184A  EF0E  F00C         	goto	l7721
  3941   00184E                     u8600:
  3942   00184E                     
  3943                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 803:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  3944   00184E  0E10               	movlw	low _dbuf
  3945   001850  246E               	addwf	efgtoa@n^0,w,c
  3946   001852  6ED9               	movwf	fsr2l,c
  3947   001854  0E01               	movlw	high _dbuf
  3948   001856  206F               	addwfc	(efgtoa@n+1)^0,w,c
  3949   001858  6EDA               	movwf	fsr2h,c
  3950   00185A  5053               	movf	efgtoa@d^0,w,c
  3951   00185C  0F30               	addlw	48
  3952   00185E  6EDF               	movwf	indf2,c
  3953   001860  4A6E               	infsnz	efgtoa@n^0,f,c
  3954   001862  2A6F               	incf	(efgtoa@n+1)^0,f,c
  3955   001864                     
  3956                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 804:             
      +                          --w;
  3957   001864  0659               	decf	efgtoa@w^0,f,c
  3958   001866  A0D8               	btfss	status,0,c
  3959   001868  065A               	decf	(efgtoa@w+1)^0,f,c
  3960   00186A                     
  3961                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 805:         };C:
      +                          \Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 806:         h -= l*
      +                          u.f;
  3962   00186A  C061  F038         	movff	efgtoa@h,___flsub@b
  3963   00186E  C062  F039         	movff	efgtoa@h+1,___flsub@b+1
  3964   001872  C063  F03A         	movff	efgtoa@h+2,___flsub@b+2
  3965   001876  C064  F03B         	movff	efgtoa@h+3,___flsub@b+3
  3966   00187A  C065  F013         	movff	efgtoa@l,___flmul@a
  3967   00187E  C066  F014         	movff	efgtoa@l+1,___flmul@a+1
  3968   001882  C067  F015         	movff	efgtoa@l+2,___flmul@a+2
  3969   001886  C068  F016         	movff	efgtoa@l+3,___flmul@a+3
  3970   00188A  C070  F00F         	movff	efgtoa@u,___flmul@b
  3971   00188E  C071  F010         	movff	efgtoa@u+1,___flmul@b+1
  3972   001892  C072  F011         	movff	efgtoa@u+2,___flmul@b+2
  3973   001896  C073  F012         	movff	efgtoa@u+3,___flmul@b+3
  3974   00189A  EC96  F011         	call	___flmul	;wreg free
  3975   00189E  C00F  F03C         	movff	?___flmul,___flsub@a
  3976   0018A2  C010  F03D         	movff	?___flmul+1,___flsub@a+1
  3977   0018A6  C011  F03E         	movff	?___flmul+2,___flsub@a+2
  3978   0018AA  C012  F03F         	movff	?___flmul+3,___flsub@a+3
  3979   0018AE  ECDF  F023         	call	___flsub	;wreg free
  3980   0018B2  C038  F061         	movff	?___flsub,efgtoa@h
  3981   0018B6  C039  F062         	movff	?___flsub+1,efgtoa@h+1
  3982   0018BA  C03A  F063         	movff	?___flsub+2,efgtoa@h+2
  3983   0018BE  C03B  F064         	movff	?___flsub+3,efgtoa@h+3
  3984   0018C2                     
  3985                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 807:         u.f 
      +                          = u.f/10.0;
  3986   0018C2  C070  F001         	movff	efgtoa@u,___fldiv@b
  3987   0018C6  C071  F002         	movff	efgtoa@u+1,___fldiv@b+1
  3988   0018CA  C072  F003         	movff	efgtoa@u+2,___fldiv@b+2
  3989   0018CE  C073  F004         	movff	efgtoa@u+3,___fldiv@b+3
  3990   0018D2  0E00               	movlw	0
  3991   0018D4  6E05               	movwf	___fldiv@a^0,c
  3992   0018D6  0E00               	movlw	0
  3993   0018D8  6E06               	movwf	(___fldiv@a+1)^0,c
  3994   0018DA  0E20               	movlw	32
  3995   0018DC  6E07               	movwf	(___fldiv@a+2)^0,c
  3996   0018DE  0E41               	movlw	65
  3997   0018E0  6E08               	movwf	(___fldiv@a+3)^0,c
  3998   0018E2  ECAB  F013         	call	___fldiv	;wreg free
  3999   0018E6  C001  F070         	movff	?___fldiv,efgtoa@u
  4000   0018EA  C002  F071         	movff	?___fldiv+1,efgtoa@u+1
  4001   0018EE  C003  F072         	movff	?___fldiv+2,efgtoa@u+2
  4002   0018F2  C004  F073         	movff	?___fldiv+3,efgtoa@u+3
  4003   0018F6                     
  4004                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 808:         --ne
      +                          ;
  4005   0018F6  0648               	decf	efgtoa@ne^0,f,c
  4006   0018F8  A0D8               	btfss	status,0,c
  4007   0018FA  0649               	decf	(efgtoa@ne+1)^0,f,c
  4008   0018FC                     
  4009                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 809:         ++i;
  4010   0018FC  4A5F               	infsnz	efgtoa@i^0,f,c
  4011   0018FE  2A60               	incf	(efgtoa@i+1)^0,f,c
  4012   001900                     l7745:
  4013                           
  4014                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4015   001900  5055               	movf	efgtoa@m^0,w,c
  4016   001902  5C5F               	subwf	efgtoa@i^0,w,c
  4017   001904  5060               	movf	(efgtoa@i+1)^0,w,c
  4018   001906  0A80               	xorlw	128
  4019   001908  6E46               	movwf	??_efgtoa^0,c
  4020   00190A  5056               	movf	(efgtoa@m+1)^0,w,c
  4021   00190C  0A80               	xorlw	128
  4022   00190E  5846               	subwfb	??_efgtoa^0,w,c
  4023   001910  B0D8               	btfsc	status,0,c
  4024   001912  EF8D  F00C         	goto	u8611
  4025   001916  EF8F  F00C         	goto	u8610
  4026   00191A                     u8611:
  4027   00191A  EF9D  F00C         	goto	l7749
  4028   00191E                     u8610:
  4029   00191E  BE6F               	btfsc	(efgtoa@n+1)^0,7,c
  4030   001920  EF9B  F00C         	goto	u8621
  4031   001924  506F               	movf	(efgtoa@n+1)^0,w,c
  4032   001926  E109               	bnz	u8620
  4033   001928  0E4B               	movlw	75
  4034   00192A  5C6E               	subwf	efgtoa@n^0,w,c
  4035   00192C  A0D8               	btfss	status,0,c
  4036   00192E  EF9B  F00C         	goto	u8621
  4037   001932  EF9D  F00C         	goto	u8620
  4038   001936                     u8621:
  4039   001936  EF9E  F00B         	goto	l7705
  4040   00193A                     u8620:
  4041   00193A                     l7749:
  4042                           
  4043                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(
      +                          dbuf) - 1;
  4044   00193A  0E00               	movlw	0
  4045   00193C  6E60               	movwf	(efgtoa@i+1)^0,c
  4046   00193E  0E4F               	movlw	79
  4047   001940  6E5F               	movwf	efgtoa@i^0,c
  4048   001942                     
  4049                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] 
      +                          = '\0';
  4050   001942  0E10               	movlw	low _dbuf
  4051   001944  245F               	addwf	efgtoa@i^0,w,c
  4052   001946  6ED9               	movwf	fsr2l,c
  4053   001948  0E01               	movlw	high _dbuf
  4054   00194A  2060               	addwfc	(efgtoa@i+1)^0,w,c
  4055   00194C  6EDA               	movwf	fsr2h,c
  4056   00194E  6ADF               	clrf	indf2,c
  4057   001950                     
  4058                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  4059   001950  0E10               	movlw	low _dbuf
  4060   001952  6E46               	movwf	??_efgtoa^0,c
  4061   001954  0E01               	movlw	high _dbuf
  4062   001956  6E47               	movwf	(??_efgtoa+1)^0,c
  4063   001958  506E               	movf	efgtoa@n^0,w,c
  4064   00195A  5E46               	subwf	??_efgtoa^0,f,c
  4065   00195C  506F               	movf	(efgtoa@n+1)^0,w,c
  4066   00195E  5A47               	subwfb	(??_efgtoa+1)^0,f,c
  4067   001960  505F               	movf	efgtoa@i^0,w,c
  4068   001962  2446               	addwf	??_efgtoa^0,w,c
  4069   001964  6E01               	movwf	memcpy@d1^0,c
  4070   001966  5060               	movf	(efgtoa@i+1)^0,w,c
  4071   001968  2047               	addwfc	(??_efgtoa+1)^0,w,c
  4072   00196A  6E02               	movwf	(memcpy@d1+1)^0,c
  4073   00196C  0E10               	movlw	low _dbuf
  4074   00196E  6E03               	movwf	memcpy@s1^0,c
  4075   001970  0E01               	movlw	high _dbuf
  4076   001972  6E04               	movwf	(memcpy@s1+1)^0,c
  4077   001974  C06E  F005         	movff	efgtoa@n,memcpy@n
  4078   001978  C06F  F006         	movff	efgtoa@n+1,memcpy@n+1
  4079   00197C  EC94  F023         	call	_memcpy	;wreg free
  4080   001980                     
  4081                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
  4082   001980  506E               	movf	efgtoa@n^0,w,c
  4083   001982  5C5F               	subwf	efgtoa@i^0,w,c
  4084   001984  6E6E               	movwf	efgtoa@n^0,c
  4085   001986  506F               	movf	(efgtoa@n+1)^0,w,c
  4086   001988  5860               	subwfb	(efgtoa@i+1)^0,w,c
  4087   00198A  6E6F               	movwf	(efgtoa@n+1)^0,c
  4088   00198C                     
  4089                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 850:  i = sign ==
      +                           0 ? 0 : 1;
  4090   00198C  5069               	movf	efgtoa@sign^0,w,c
  4091   00198E  A4D8               	btfss	status,2,c
  4092   001990  EFCC  F00C         	goto	u8631
  4093   001994  EFCF  F00C         	goto	u8630
  4094   001998                     u8631:
  4095   001998  0E01               	movlw	1
  4096   00199A  EFD0  F00C         	goto	u8640
  4097   00199E                     u8630:
  4098   00199E  0E00               	movlw	0
  4099   0019A0                     u8640:
  4100   0019A0  6E5F               	movwf	efgtoa@i^0,c
  4101   0019A2  6A60               	clrf	(efgtoa@i+1)^0,c
  4102   0019A4                     
  4103                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
  4104   0019A4  5069               	movf	efgtoa@sign^0,w,c
  4105   0019A6  B4D8               	btfsc	status,2,c
  4106   0019A8  EFD8  F00C         	goto	u8651
  4107   0019AC  EFDA  F00C         	goto	u8650
  4108   0019B0                     u8651:
  4109   0019B0  EFE5  F00C         	goto	l7763
  4110   0019B4                     u8650:
  4111   0019B4                     
  4112                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] 
      +                          = sign;
  4113   0019B4  066E               	decf	efgtoa@n^0,f,c
  4114   0019B6  A0D8               	btfss	status,0,c
  4115   0019B8  066F               	decf	(efgtoa@n+1)^0,f,c
  4116   0019BA  0E10               	movlw	low _dbuf
  4117   0019BC  246E               	addwf	efgtoa@n^0,w,c
  4118   0019BE  6ED9               	movwf	fsr2l,c
  4119   0019C0  0E01               	movlw	high _dbuf
  4120   0019C2  206F               	addwfc	(efgtoa@n+1)^0,w,c
  4121   0019C4  6EDA               	movwf	fsr2h,c
  4122   0019C6  C069  FFDF         	movff	efgtoa@sign,indf2
  4123   0019CA                     l7763:
  4124                           
  4125                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 864:  w -= i;
  4126   0019CA  505F               	movf	efgtoa@i^0,w,c
  4127   0019CC  5E59               	subwf	efgtoa@w^0,f,c
  4128   0019CE  5060               	movf	(efgtoa@i+1)^0,w,c
  4129   0019D0  5A5A               	subwfb	(efgtoa@w+1)^0,f,c
  4130   0019D2                     
  4131                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 867:     return (
      +                          void) pad(fp, &dbuf[n], w);
  4132   0019D2  C040  F00F         	movff	efgtoa@fp,pad@fp
  4133   0019D6  0E10               	movlw	low _dbuf
  4134   0019D8  246E               	addwf	efgtoa@n^0,w,c
  4135   0019DA  6E10               	movwf	pad@buf^0,c
  4136   0019DC  0E01               	movlw	high _dbuf
  4137   0019DE  206F               	addwfc	(efgtoa@n+1)^0,w,c
  4138   0019E0  6E11               	movwf	(pad@buf+1)^0,c
  4139   0019E2  C059  F012         	movff	efgtoa@w,pad@p
  4140   0019E6  C05A  F013         	movff	efgtoa@w+1,pad@p+1
  4141   0019EA  EC05  F023         	call	_pad	;wreg free
  4142   0019EE                     l1375:
  4143   0019EE  0012               	return		;funcret
  4144   0019F0                     __end_of_efgtoa:
  4145                           	callstack 0
  4146                           
  4147 ;; *************** function _strcpy *****************
  4148 ;; Defined at:
  4149 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\strcpy.c"
  4150 ;; Parameters:    Size  Location     Type
  4151 ;;  dest            2    0[COMRAM] PTR unsigned char 
  4152 ;;		 -> dbuf(80), 
  4153 ;;  src             1    2[COMRAM] PTR const unsigned char 
  4154 ;;		 -> STR_9(4), STR_6(4), 
  4155 ;; Auto vars:     Size  Location     Type
  4156 ;;  d               2    4[COMRAM] PTR unsigned char 
  4157 ;;		 -> dbuf(80), 
  4158 ;; Return value:  Size  Location     Type
  4159 ;;                  2    0[COMRAM] PTR unsigned char 
  4160 ;; Registers used:
  4161 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4162 ;; Tracked objects:
  4163 ;;		On entry : 0/0
  4164 ;;		On exit  : 0/0
  4165 ;;		Unchanged: 0/0
  4166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4167 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4168 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4169 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4170 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4171 ;;Total ram usage:        6 bytes
  4172 ;; Hardware stack levels used: 1
  4173 ;; This function calls:
  4174 ;;		Nothing
  4175 ;; This function is called by:
  4176 ;;		_efgtoa
  4177 ;; This function uses a non-reentrant model
  4178 ;;
  4179                           
  4180                           	psect	text8
  4181   0048C4                     __ptext8:
  4182                           	callstack 0
  4183   0048C4                     _strcpy:
  4184                           	callstack 26
  4185   0048C4  C001  F005         	movff	strcpy@dest,strcpy@d
  4186   0048C8  C002  F006         	movff	strcpy@dest+1,strcpy@d+1
  4187   0048CC                     l7441:
  4188   0048CC  2A03               	incf	strcpy@src^0,f,c
  4189   0048CE  0403               	decf	strcpy@src^0,w,c
  4190   0048D0  6E04               	movwf	??_strcpy^0,c
  4191   0048D2  C004  FFF6         	movff	??_strcpy,tblptrl
  4192   0048D6                     	if	1	;There is more than 1 active tblptr byte
  4193   0048D6  0E10               	movlw	high __smallconst
  4194   0048D8  6EF7               	movwf	tblptrh,c
  4195   0048DA                     	endif
  4196   0048DA                     	if	0	;tblptru may be non-zero
  4197   0048DA                     	endif
  4198   0048DA                     	if	0	;tblptru may be non-zero
  4199   0048DA                     	endif
  4200   0048DA  C005  FFD9         	movff	strcpy@d,fsr2l
  4201   0048DE  C006  FFDA         	movff	strcpy@d+1,fsr2h
  4202   0048E2  4A05               	infsnz	strcpy@d^0,f,c
  4203   0048E4  2A06               	incf	(strcpy@d+1)^0,f,c
  4204   0048E6  0008               	tblrd		*
  4205   0048E8  CFF5 FFDF          	movff	tablat,indf2
  4206   0048EC  50DF               	movf	indf2,w,c
  4207   0048EE  A4D8               	btfss	status,2,c
  4208   0048F0  EF7C  F024         	goto	u8111
  4209   0048F4  EF7E  F024         	goto	u8110
  4210   0048F8                     u8111:
  4211   0048F8  EF66  F024         	goto	l7441
  4212   0048FC                     u8110:
  4213   0048FC  0012               	return		;funcret
  4214   0048FE                     __end_of_strcpy:
  4215                           	callstack 0
  4216                           
  4217 ;; *************** function _memcpy *****************
  4218 ;; Defined at:
  4219 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\memcpy.c"
  4220 ;; Parameters:    Size  Location     Type
  4221 ;;  d1              2    0[COMRAM] PTR void 
  4222 ;;		 -> dbuf(80), 
  4223 ;;  s1              2    2[COMRAM] PTR const void 
  4224 ;;		 -> dbuf(80), 
  4225 ;;  n               2    4[COMRAM] unsigned int 
  4226 ;; Auto vars:     Size  Location     Type
  4227 ;;  s               2    9[COMRAM] PTR const unsigned char 
  4228 ;;		 -> dbuf(80), 
  4229 ;;  d               2    7[COMRAM] PTR unsigned char 
  4230 ;;		 -> dbuf(80), 
  4231 ;;  tmp             1    6[COMRAM] unsigned char 
  4232 ;; Return value:  Size  Location     Type
  4233 ;;                  2    0[COMRAM] PTR void 
  4234 ;; Registers used:
  4235 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4236 ;; Tracked objects:
  4237 ;;		On entry : 0/0
  4238 ;;		On exit  : 0/0
  4239 ;;		Unchanged: 0/0
  4240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4241 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4242 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4244 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4245 ;;Total ram usage:       11 bytes
  4246 ;; Hardware stack levels used: 1
  4247 ;; This function calls:
  4248 ;;		Nothing
  4249 ;; This function is called by:
  4250 ;;		_efgtoa
  4251 ;; This function uses a non-reentrant model
  4252 ;;
  4253                           
  4254                           	psect	text9
  4255   004728                     __ptext9:
  4256                           	callstack 0
  4257   004728                     _memcpy:
  4258                           	callstack 26
  4259   004728  C003  F00A         	movff	memcpy@s1,memcpy@s
  4260   00472C  C004  F00B         	movff	memcpy@s1+1,memcpy@s+1
  4261   004730  C001  F008         	movff	memcpy@d1,memcpy@d
  4262   004734  C002  F009         	movff	memcpy@d1+1,memcpy@d+1
  4263   004738  EFAE  F023         	goto	l7489
  4264   00473C                     l7481:
  4265   00473C  C00A  FFD9         	movff	memcpy@s,fsr2l
  4266   004740  C00B  FFDA         	movff	memcpy@s+1,fsr2h
  4267   004744  50DF               	movf	indf2,w,c
  4268   004746  6E07               	movwf	memcpy@tmp^0,c
  4269   004748  4A0A               	infsnz	memcpy@s^0,f,c
  4270   00474A  2A0B               	incf	(memcpy@s+1)^0,f,c
  4271   00474C  C008  FFD9         	movff	memcpy@d,fsr2l
  4272   004750  C009  FFDA         	movff	memcpy@d+1,fsr2h
  4273   004754  C007  FFDF         	movff	memcpy@tmp,indf2
  4274   004758  4A08               	infsnz	memcpy@d^0,f,c
  4275   00475A  2A09               	incf	(memcpy@d+1)^0,f,c
  4276   00475C                     l7489:
  4277   00475C  0605               	decf	memcpy@n^0,f,c
  4278   00475E  A0D8               	btfss	status,0,c
  4279   004760  0606               	decf	(memcpy@n+1)^0,f,c
  4280   004762  2805               	incf	memcpy@n^0,w,c
  4281   004764  E106               	bnz	u8231
  4282   004766  2806               	incf	(memcpy@n+1)^0,w,c
  4283   004768  A4D8               	btfss	status,2,c
  4284   00476A  EFB9  F023         	goto	u8231
  4285   00476E  EFBB  F023         	goto	u8230
  4286   004772                     u8231:
  4287   004772  EF9E  F023         	goto	l7481
  4288   004776                     u8230:
  4289   004776  0012               	return		;funcret
  4290   004778                     __end_of_memcpy:
  4291                           	callstack 0
  4292                           
  4293 ;; *************** function _labs *****************
  4294 ;; Defined at:
  4295 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\labs.c"
  4296 ;; Parameters:    Size  Location     Type
  4297 ;;  a               4    0[COMRAM] long 
  4298 ;; Auto vars:     Size  Location     Type
  4299 ;;		None
  4300 ;; Return value:  Size  Location     Type
  4301 ;;                  4    0[COMRAM] long 
  4302 ;; Registers used:
  4303 ;;		wreg, status,2, status,0
  4304 ;; Tracked objects:
  4305 ;;		On entry : 0/0
  4306 ;;		On exit  : 0/0
  4307 ;;		Unchanged: 0/0
  4308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4309 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4311 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4312 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4313 ;;Total ram usage:        8 bytes
  4314 ;; Hardware stack levels used: 1
  4315 ;; This function calls:
  4316 ;;		Nothing
  4317 ;; This function is called by:
  4318 ;;		_efgtoa
  4319 ;; This function uses a non-reentrant model
  4320 ;;
  4321                           
  4322                           	psect	text10
  4323   0046D2                     __ptext10:
  4324                           	callstack 0
  4325   0046D2                     _labs:
  4326                           	callstack 26
  4327   0046D2  BE04               	btfsc	(labs@a+3)^0,7,c
  4328   0046D4  EF6E  F023         	goto	u8121
  4329   0046D8  EF70  F023         	goto	u8120
  4330   0046DC                     u8121:
  4331   0046DC  EF7A  F023         	goto	l7447
  4332   0046E0                     u8120:
  4333   0046E0  C001  F001         	movff	labs@a,?_labs
  4334   0046E4  C002  F002         	movff	labs@a+1,?_labs+1
  4335   0046E8  C003  F003         	movff	labs@a+2,?_labs+2
  4336   0046EC  C004  F004         	movff	labs@a+3,?_labs+3
  4337   0046F0  EF93  F023         	goto	l1492
  4338   0046F4                     l7447:
  4339   0046F4  C001  F005         	movff	labs@a,??_labs
  4340   0046F8  C002  F006         	movff	labs@a+1,??_labs+1
  4341   0046FC  C003  F007         	movff	labs@a+2,??_labs+2
  4342   004700  C004  F008         	movff	labs@a+3,??_labs+3
  4343   004704  1E05               	comf	??_labs^0,f,c
  4344   004706  1E06               	comf	(??_labs+1)^0,f,c
  4345   004708  1E07               	comf	(??_labs+2)^0,f,c
  4346   00470A  1E08               	comf	(??_labs+3)^0,f,c
  4347   00470C  2A05               	incf	??_labs^0,f,c
  4348   00470E  0E00               	movlw	0
  4349   004710  2206               	addwfc	(??_labs+1)^0,f,c
  4350   004712  2207               	addwfc	(??_labs+2)^0,f,c
  4351   004714  2208               	addwfc	(??_labs+3)^0,f,c
  4352   004716  C005  F001         	movff	??_labs,?_labs
  4353   00471A  C006  F002         	movff	??_labs+1,?_labs+1
  4354   00471E  C007  F003         	movff	??_labs+2,?_labs+2
  4355   004722  C008  F004         	movff	??_labs+3,?_labs+3
  4356   004726                     l1492:
  4357   004726  0012               	return		;funcret
  4358   004728                     __end_of_labs:
  4359                           	callstack 0
  4360                           
  4361 ;; *************** function _floorf *****************
  4362 ;; Defined at:
  4363 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\floorf.c"
  4364 ;; Parameters:    Size  Location     Type
  4365 ;;  x               4   25[COMRAM] float 
  4366 ;; Auto vars:     Size  Location     Type
  4367 ;;  u               4   41[COMRAM] struct .
  4368 ;;  m               4   35[COMRAM] unsigned long 
  4369 ;;  e               2   39[COMRAM] int 
  4370 ;; Return value:  Size  Location     Type
  4371 ;;                  4   25[COMRAM] float 
  4372 ;; Registers used:
  4373 ;;		wreg, status,2, status,0
  4374 ;; Tracked objects:
  4375 ;;		On entry : 0/0
  4376 ;;		On exit  : 0/0
  4377 ;;		Unchanged: 0/0
  4378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4379 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4380 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4381 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4382 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4383 ;;Total ram usage:       20 bytes
  4384 ;; Hardware stack levels used: 1
  4385 ;; This function calls:
  4386 ;;		Nothing
  4387 ;; This function is called by:
  4388 ;;		_efgtoa
  4389 ;; This function uses a non-reentrant model
  4390 ;;
  4391                           
  4392                           	psect	text11
  4393   0030B2                     __ptext11:
  4394                           	callstack 0
  4395   0030B2                     _floorf:
  4396                           	callstack 26
  4397   0030B2  C100  F02A         	movff	floorf@F521,floorf@u
  4398   0030B6  C101  F02B         	movff	floorf@F521+1,floorf@u+1
  4399   0030BA  C102  F02C         	movff	floorf@F521+2,floorf@u+2
  4400   0030BE  C103  F02D         	movff	floorf@F521+3,floorf@u+3
  4401   0030C2  C01A  F02A         	movff	floorf@x,floorf@u
  4402   0030C6  C01B  F02B         	movff	floorf@x+1,floorf@u+1
  4403   0030CA  C01C  F02C         	movff	floorf@x+2,floorf@u+2
  4404   0030CE  C01D  F02D         	movff	floorf@x+3,floorf@u+3
  4405   0030D2  0E81               	movlw	129
  4406   0030D4  6E1E               	movwf	??_floorf^0,c
  4407   0030D6  0EFF               	movlw	255
  4408   0030D8  6E1F               	movwf	(??_floorf+1)^0,c
  4409   0030DA  C02A  F020         	movff	floorf@u,??_floorf+2
  4410   0030DE  C02B  F021         	movff	floorf@u+1,??_floorf+3
  4411   0030E2  C02C  F022         	movff	floorf@u+2,??_floorf+4
  4412   0030E6  C02D  F023         	movff	floorf@u+3,??_floorf+5
  4413   0030EA  0E18               	movlw	24
  4414   0030EC  EF7D  F018         	goto	u8130
  4415   0030F0                     u8135:
  4416   0030F0  90D8               	bcf	status,0,c
  4417   0030F2  3223               	rrcf	(??_floorf+5)^0,f,c
  4418   0030F4  3222               	rrcf	(??_floorf+4)^0,f,c
  4419   0030F6  3221               	rrcf	(??_floorf+3)^0,f,c
  4420   0030F8  3220               	rrcf	(??_floorf+2)^0,f,c
  4421   0030FA                     u8130:
  4422   0030FA  2EE8               	decfsz	wreg,f,c
  4423   0030FC  EF78  F018         	goto	u8135
  4424   003100  5020               	movf	(??_floorf+2)^0,w,c
  4425   003102  241E               	addwf	??_floorf^0,w,c
  4426   003104  6E28               	movwf	floorf@e^0,c
  4427   003106  0E00               	movlw	0
  4428   003108  201F               	addwfc	(??_floorf+1)^0,w,c
  4429   00310A  6E29               	movwf	(floorf@e+1)^0,c
  4430   00310C  BE29               	btfsc	(floorf@e+1)^0,7,c
  4431   00310E  EF92  F018         	goto	u8141
  4432   003112  5029               	movf	(floorf@e+1)^0,w,c
  4433   003114  E109               	bnz	u8140
  4434   003116  0E17               	movlw	23
  4435   003118  5C28               	subwf	floorf@e^0,w,c
  4436   00311A  A0D8               	btfss	status,0,c
  4437   00311C  EF92  F018         	goto	u8141
  4438   003120  EF94  F018         	goto	u8140
  4439   003124                     u8141:
  4440   003124  EF9E  F018         	goto	l7457
  4441   003128                     u8140:
  4442   003128                     l7455:
  4443   003128  C01A  F01A         	movff	floorf@x,?_floorf
  4444   00312C  C01B  F01B         	movff	floorf@x+1,?_floorf+1
  4445   003130  C01C  F01C         	movff	floorf@x+2,?_floorf+2
  4446   003134  C01D  F01D         	movff	floorf@x+3,?_floorf+3
  4447   003138  EF61  F019         	goto	l1478
  4448   00313C                     l7457:
  4449   00313C  BE29               	btfsc	(floorf@e+1)^0,7,c
  4450   00313E  EFA3  F018         	goto	u8151
  4451   003142  EFA5  F018         	goto	u8150
  4452   003146                     u8151:
  4453   003146  EF15  F019         	goto	l7467
  4454   00314A                     u8150:
  4455   00314A  C028  F01E         	movff	floorf@e,??_floorf
  4456   00314E  0EFF               	movlw	255
  4457   003150  6E1F               	movwf	(??_floorf+1)^0,c
  4458   003152  0EFF               	movlw	255
  4459   003154  6E20               	movwf	(??_floorf+2)^0,c
  4460   003156  0E7F               	movlw	127
  4461   003158  6E21               	movwf	(??_floorf+3)^0,c
  4462   00315A  0E00               	movlw	0
  4463   00315C  6E22               	movwf	(??_floorf+4)^0,c
  4464   00315E                     u8165:
  4465   00315E  661E               	tstfsz	??_floorf^0,c
  4466   003160  EFB4  F018         	goto	u8166
  4467   003164  EFBC  F018         	goto	u8167
  4468   003168                     u8166:
  4469   003168  3422               	rlcf	(??_floorf+4)^0,w,c
  4470   00316A  3222               	rrcf	(??_floorf+4)^0,f,c
  4471   00316C  3221               	rrcf	(??_floorf+3)^0,f,c
  4472   00316E  3220               	rrcf	(??_floorf+2)^0,f,c
  4473   003170  321F               	rrcf	(??_floorf+1)^0,f,c
  4474   003172  2E1E               	decfsz	??_floorf^0,f,c
  4475   003174  EFAF  F018         	goto	u8165
  4476   003178                     u8167:
  4477   003178  C01F  F024         	movff	??_floorf+1,floorf@m
  4478   00317C  C020  F025         	movff	??_floorf+2,floorf@m+1
  4479   003180  C021  F026         	movff	??_floorf+3,floorf@m+2
  4480   003184  C022  F027         	movff	??_floorf+4,floorf@m+3
  4481   003188  5024               	movf	floorf@m^0,w,c
  4482   00318A  142A               	andwf	floorf@u^0,w,c
  4483   00318C  6E1E               	movwf	??_floorf^0,c
  4484   00318E  5025               	movf	(floorf@m+1)^0,w,c
  4485   003190  142B               	andwf	(floorf@u+1)^0,w,c
  4486   003192  6E1F               	movwf	(??_floorf+1)^0,c
  4487   003194  5026               	movf	(floorf@m+2)^0,w,c
  4488   003196  142C               	andwf	(floorf@u+2)^0,w,c
  4489   003198  6E20               	movwf	(??_floorf+2)^0,c
  4490   00319A  5027               	movf	(floorf@m+3)^0,w,c
  4491   00319C  142D               	andwf	(floorf@u+3)^0,w,c
  4492   00319E  6E21               	movwf	(??_floorf+3)^0,c
  4493   0031A0  501E               	movf	??_floorf^0,w,c
  4494   0031A2  101F               	iorwf	(??_floorf+1)^0,w,c
  4495   0031A4  1020               	iorwf	(??_floorf+2)^0,w,c
  4496   0031A6  1021               	iorwf	(??_floorf+3)^0,w,c
  4497   0031A8  A4D8               	btfss	status,2,c
  4498   0031AA  EFD9  F018         	goto	u8171
  4499   0031AE  EFDB  F018         	goto	u8170
  4500   0031B2                     u8171:
  4501   0031B2  EFDD  F018         	goto	l7463
  4502   0031B6                     u8170:
  4503   0031B6  EF94  F018         	goto	l7455
  4504   0031BA                     l7463:
  4505   0031BA  C02A  F01E         	movff	floorf@u,??_floorf
  4506   0031BE  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  4507   0031C2  C02C  F020         	movff	floorf@u+2,??_floorf+2
  4508   0031C6  C02D  F021         	movff	floorf@u+3,??_floorf+3
  4509   0031CA  0E20               	movlw	32
  4510   0031CC  EFED  F018         	goto	u8180
  4511   0031D0                     u8185:
  4512   0031D0  90D8               	bcf	status,0,c
  4513   0031D2  3221               	rrcf	(??_floorf+3)^0,f,c
  4514   0031D4  3220               	rrcf	(??_floorf+2)^0,f,c
  4515   0031D6  321F               	rrcf	(??_floorf+1)^0,f,c
  4516   0031D8  321E               	rrcf	??_floorf^0,f,c
  4517   0031DA                     u8180:
  4518   0031DA  2EE8               	decfsz	wreg,f,c
  4519   0031DC  EFE8  F018         	goto	u8185
  4520   0031E0  501E               	movf	??_floorf^0,w,c
  4521   0031E2  101F               	iorwf	(??_floorf+1)^0,w,c
  4522   0031E4  1020               	iorwf	(??_floorf+2)^0,w,c
  4523   0031E6  1021               	iorwf	(??_floorf+3)^0,w,c
  4524   0031E8  B4D8               	btfsc	status,2,c
  4525   0031EA  EFF9  F018         	goto	u8191
  4526   0031EE  EFFB  F018         	goto	u8190
  4527   0031F2                     u8191:
  4528   0031F2  EF03  F019         	goto	l1481
  4529   0031F6                     u8190:
  4530   0031F6  5024               	movf	floorf@m^0,w,c
  4531   0031F8  262A               	addwf	floorf@u^0,f,c
  4532   0031FA  5025               	movf	(floorf@m+1)^0,w,c
  4533   0031FC  222B               	addwfc	(floorf@u+1)^0,f,c
  4534   0031FE  5026               	movf	(floorf@m+2)^0,w,c
  4535   003200  222C               	addwfc	(floorf@u+2)^0,f,c
  4536   003202  5027               	movf	(floorf@m+3)^0,w,c
  4537   003204  222D               	addwfc	(floorf@u+3)^0,f,c
  4538   003206                     l1481:
  4539   003206  1C24               	comf	floorf@m^0,w,c
  4540   003208  6E1E               	movwf	??_floorf^0,c
  4541   00320A  1C25               	comf	(floorf@m+1)^0,w,c
  4542   00320C  6E1F               	movwf	(??_floorf+1)^0,c
  4543   00320E  1C26               	comf	(floorf@m+2)^0,w,c
  4544   003210  6E20               	movwf	(??_floorf+2)^0,c
  4545   003212  1C27               	comf	(floorf@m+3)^0,w,c
  4546   003214  6E21               	movwf	(??_floorf+3)^0,c
  4547   003216  501E               	movf	??_floorf^0,w,c
  4548   003218  162A               	andwf	floorf@u^0,f,c
  4549   00321A  501F               	movf	(??_floorf+1)^0,w,c
  4550   00321C  162B               	andwf	(floorf@u+1)^0,f,c
  4551   00321E  5020               	movf	(??_floorf+2)^0,w,c
  4552   003220  162C               	andwf	(floorf@u+2)^0,f,c
  4553   003222  5021               	movf	(??_floorf+3)^0,w,c
  4554   003224  162D               	andwf	(floorf@u+3)^0,f,c
  4555   003226  EF59  F019         	goto	l7475
  4556   00322A                     l7467:
  4557   00322A  C02A  F01E         	movff	floorf@u,??_floorf
  4558   00322E  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  4559   003232  C02C  F020         	movff	floorf@u+2,??_floorf+2
  4560   003236  C02D  F021         	movff	floorf@u+3,??_floorf+3
  4561   00323A  0E20               	movlw	32
  4562   00323C  EF25  F019         	goto	u8200
  4563   003240                     u8205:
  4564   003240  90D8               	bcf	status,0,c
  4565   003242  3221               	rrcf	(??_floorf+3)^0,f,c
  4566   003244  3220               	rrcf	(??_floorf+2)^0,f,c
  4567   003246  321F               	rrcf	(??_floorf+1)^0,f,c
  4568   003248  321E               	rrcf	??_floorf^0,f,c
  4569   00324A                     u8200:
  4570   00324A  2EE8               	decfsz	wreg,f,c
  4571   00324C  EF20  F019         	goto	u8205
  4572   003250  501E               	movf	??_floorf^0,w,c
  4573   003252  101F               	iorwf	(??_floorf+1)^0,w,c
  4574   003254  1020               	iorwf	(??_floorf+2)^0,w,c
  4575   003256  1021               	iorwf	(??_floorf+3)^0,w,c
  4576   003258  A4D8               	btfss	status,2,c
  4577   00325A  EF31  F019         	goto	u8211
  4578   00325E  EF33  F019         	goto	u8210
  4579   003262                     u8211:
  4580   003262  EF3D  F019         	goto	l7471
  4581   003266                     u8210:
  4582   003266  0E00               	movlw	0
  4583   003268  6E2A               	movwf	floorf@u^0,c
  4584   00326A  0E00               	movlw	0
  4585   00326C  6E2B               	movwf	(floorf@u+1)^0,c
  4586   00326E  0E00               	movlw	0
  4587   003270  6E2C               	movwf	(floorf@u+2)^0,c
  4588   003272  0E00               	movlw	0
  4589   003274  6E2D               	movwf	(floorf@u+3)^0,c
  4590   003276  EF59  F019         	goto	l7475
  4591   00327A                     l7471:
  4592   00327A  90D8               	bcf	status,0,c
  4593   00327C  342A               	rlcf	floorf@u^0,w,c
  4594   00327E  6E1E               	movwf	??_floorf^0,c
  4595   003280  342B               	rlcf	(floorf@u+1)^0,w,c
  4596   003282  6E1F               	movwf	(??_floorf+1)^0,c
  4597   003284  342C               	rlcf	(floorf@u+2)^0,w,c
  4598   003286  6E20               	movwf	(??_floorf+2)^0,c
  4599   003288  342D               	rlcf	(floorf@u+3)^0,w,c
  4600   00328A  6E21               	movwf	(??_floorf+3)^0,c
  4601   00328C  501E               	movf	??_floorf^0,w,c
  4602   00328E  101F               	iorwf	(??_floorf+1)^0,w,c
  4603   003290  1020               	iorwf	(??_floorf+2)^0,w,c
  4604   003292  1021               	iorwf	(??_floorf+3)^0,w,c
  4605   003294  B4D8               	btfsc	status,2,c
  4606   003296  EF4F  F019         	goto	u8221
  4607   00329A  EF51  F019         	goto	u8220
  4608   00329E                     u8221:
  4609   00329E  EF59  F019         	goto	l7475
  4610   0032A2                     u8220:
  4611   0032A2  0E00               	movlw	0
  4612   0032A4  6E2A               	movwf	floorf@u^0,c
  4613   0032A6  0E00               	movlw	0
  4614   0032A8  6E2B               	movwf	(floorf@u+1)^0,c
  4615   0032AA  0E80               	movlw	128
  4616   0032AC  6E2C               	movwf	(floorf@u+2)^0,c
  4617   0032AE  0EBF               	movlw	191
  4618   0032B0  6E2D               	movwf	(floorf@u+3)^0,c
  4619   0032B2                     l7475:
  4620   0032B2  C02A  F01A         	movff	floorf@u,?_floorf
  4621   0032B6  C02B  F01B         	movff	floorf@u+1,?_floorf+1
  4622   0032BA  C02C  F01C         	movff	floorf@u+2,?_floorf+2
  4623   0032BE  C02D  F01D         	movff	floorf@u+3,?_floorf+3
  4624   0032C2                     l1478:
  4625   0032C2  0012               	return		;funcret
  4626   0032C4                     __end_of_floorf:
  4627                           	callstack 0
  4628                           
  4629 ;; *************** function ___fpclassifyf *****************
  4630 ;; Defined at:
  4631 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\__fpclassifyf.c"
  4632 ;; Parameters:    Size  Location     Type
  4633 ;;  x               4    0[COMRAM] float 
  4634 ;; Auto vars:     Size  Location     Type
  4635 ;;  u               4   10[COMRAM] struct .
  4636 ;;  e               2    8[COMRAM] int 
  4637 ;; Return value:  Size  Location     Type
  4638 ;;                  2    0[COMRAM] int 
  4639 ;; Registers used:
  4640 ;;		wreg, status,2, status,0
  4641 ;; Tracked objects:
  4642 ;;		On entry : 0/0
  4643 ;;		On exit  : 0/0
  4644 ;;		Unchanged: 0/0
  4645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4646 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4647 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4648 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4649 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4650 ;;Total ram usage:       14 bytes
  4651 ;; Hardware stack levels used: 1
  4652 ;; This function calls:
  4653 ;;		Nothing
  4654 ;; This function is called by:
  4655 ;;		_efgtoa
  4656 ;; This function uses a non-reentrant model
  4657 ;;
  4658                           
  4659                           	psect	text12
  4660   003D3C                     __ptext12:
  4661                           	callstack 0
  4662   003D3C                     ___fpclassifyf:
  4663                           	callstack 26
  4664   003D3C  C104  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  4665   003D40  C105  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  4666   003D44  C106  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  4667   003D48  C107  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  4668   003D4C  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  4669   003D50  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  4670   003D54  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  4671   003D58  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  4672   003D5C  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4673   003D60  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4674   003D64  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4675   003D68  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4676   003D6C  0E18               	movlw	24
  4677   003D6E  EFBE  F01E         	goto	u8040
  4678   003D72                     u8045:
  4679   003D72  90D8               	bcf	status,0,c
  4680   003D74  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  4681   003D76  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  4682   003D78  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  4683   003D7A  3205               	rrcf	??___fpclassifyf^0,f,c
  4684   003D7C                     u8040:
  4685   003D7C  2EE8               	decfsz	wreg,f,c
  4686   003D7E  EFB9  F01E         	goto	u8045
  4687   003D82  5005               	movf	??___fpclassifyf^0,w,c
  4688   003D84  6E09               	movwf	___fpclassifyf@e^0,c
  4689   003D86  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  4690   003D88  5009               	movf	___fpclassifyf@e^0,w,c
  4691   003D8A  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4692   003D8C  A4D8               	btfss	status,2,c
  4693   003D8E  EFCB  F01E         	goto	u8051
  4694   003D92  EFCD  F01E         	goto	u8050
  4695   003D96                     u8051:
  4696   003D96  EFED  F01E         	goto	l7429
  4697   003D9A                     u8050:
  4698   003D9A  90D8               	bcf	status,0,c
  4699   003D9C  340B               	rlcf	___fpclassifyf@u^0,w,c
  4700   003D9E  6E05               	movwf	??___fpclassifyf^0,c
  4701   003DA0  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  4702   003DA2  6E06               	movwf	(??___fpclassifyf+1)^0,c
  4703   003DA4  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  4704   003DA6  6E07               	movwf	(??___fpclassifyf+2)^0,c
  4705   003DA8  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  4706   003DAA  6E08               	movwf	(??___fpclassifyf+3)^0,c
  4707   003DAC  5005               	movf	??___fpclassifyf^0,w,c
  4708   003DAE  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4709   003DB0  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4710   003DB2  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4711   003DB4  A4D8               	btfss	status,2,c
  4712   003DB6  EFDF  F01E         	goto	u8061
  4713   003DBA  EFE1  F01E         	goto	u8060
  4714   003DBE                     u8061:
  4715   003DBE  EFE7  F01E         	goto	l7425
  4716   003DC2                     u8060:
  4717   003DC2  0E00               	movlw	0
  4718   003DC4  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4719   003DC6  0E02               	movlw	2
  4720   003DC8  6E01               	movwf	?___fpclassifyf^0,c
  4721   003DCA  EF1C  F01F         	goto	l1464
  4722   003DCE                     l7425:
  4723   003DCE  0E00               	movlw	0
  4724   003DD0  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4725   003DD2  0E03               	movlw	3
  4726   003DD4  6E01               	movwf	?___fpclassifyf^0,c
  4727   003DD6  EF1C  F01F         	goto	l1464
  4728   003DDA                     l7429:
  4729   003DDA  2809               	incf	___fpclassifyf@e^0,w,c
  4730   003DDC  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4731   003DDE  A4D8               	btfss	status,2,c
  4732   003DE0  EFF4  F01E         	goto	u8071
  4733   003DE4  EFF6  F01E         	goto	u8070
  4734   003DE8                     u8071:
  4735   003DE8  EF18  F01F         	goto	l7435
  4736   003DEC                     u8070:
  4737   003DEC  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4738   003DF0  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4739   003DF4  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4740   003DF8  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4741   003DFC  0E09               	movlw	9
  4742   003DFE                     u8085:
  4743   003DFE  90D8               	bcf	status,0,c
  4744   003E00  3605               	rlcf	??___fpclassifyf^0,f,c
  4745   003E02  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  4746   003E04  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  4747   003E06  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  4748   003E08  2EE8               	decfsz	wreg,f,c
  4749   003E0A  EFFF  F01E         	goto	u8085
  4750   003E0E  5005               	movf	??___fpclassifyf^0,w,c
  4751   003E10  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4752   003E12  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4753   003E14  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4754   003E16  B4D8               	btfsc	status,2,c
  4755   003E18  EF10  F01F         	goto	u8091
  4756   003E1C  EF13  F01F         	goto	u8090
  4757   003E20                     u8091:
  4758   003E20  0E01               	movlw	1
  4759   003E22  EF14  F01F         	goto	u8100
  4760   003E26                     u8090:
  4761   003E26  0E00               	movlw	0
  4762   003E28                     u8100:
  4763   003E28  6E01               	movwf	?___fpclassifyf^0,c
  4764   003E2A  6A02               	clrf	(?___fpclassifyf+1)^0,c
  4765   003E2C  EF1C  F01F         	goto	l1464
  4766   003E30                     l7435:
  4767   003E30  0E00               	movlw	0
  4768   003E32  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4769   003E34  0E04               	movlw	4
  4770   003E36  6E01               	movwf	?___fpclassifyf^0,c
  4771   003E38                     l1464:
  4772   003E38  0012               	return		;funcret
  4773   003E3A                     __end_of___fpclassifyf:
  4774                           	callstack 0
  4775                           
  4776 ;; *************** function ___fltol *****************
  4777 ;; Defined at:
  4778 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fltol.c"
  4779 ;; Parameters:    Size  Location     Type
  4780 ;;  f1              4    0[COMRAM] int 
  4781 ;; Auto vars:     Size  Location     Type
  4782 ;;  exp1            1    9[COMRAM] unsigned char 
  4783 ;;  sign1           1    8[COMRAM] unsigned char 
  4784 ;; Return value:  Size  Location     Type
  4785 ;;                  4    0[COMRAM] long 
  4786 ;; Registers used:
  4787 ;;		wreg, status,2, status,0
  4788 ;; Tracked objects:
  4789 ;;		On entry : 0/0
  4790 ;;		On exit  : 0/0
  4791 ;;		Unchanged: 0/0
  4792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4793 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4794 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4795 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4796 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4797 ;;Total ram usage:       10 bytes
  4798 ;; Hardware stack levels used: 1
  4799 ;; This function calls:
  4800 ;;		Nothing
  4801 ;; This function is called by:
  4802 ;;		_efgtoa
  4803 ;; This function uses a non-reentrant model
  4804 ;;
  4805                           
  4806                           	psect	text13
  4807   003B32                     __ptext13:
  4808                           	callstack 0
  4809   003B32                     ___fltol:
  4810                           	callstack 26
  4811   003B32  3403               	rlcf	(___fltol@f1+2)^0,w,c
  4812   003B34  3404               	rlcf	(___fltol@f1+3)^0,w,c
  4813   003B36  6E0A               	movwf	___fltol@exp1^0,c
  4814   003B38  500A               	movf	___fltol@exp1^0,w,c
  4815   003B3A  A4D8               	btfss	status,2,c
  4816   003B3C  EFA2  F01D         	goto	u7941
  4817   003B40  EFA4  F01D         	goto	u7940
  4818   003B44                     u7941:
  4819   003B44  EFAE  F01D         	goto	l7363
  4820   003B48                     u7940:
  4821   003B48                     l7359:
  4822   003B48  0E00               	movlw	0
  4823   003B4A  6E01               	movwf	?___fltol^0,c
  4824   003B4C  0E00               	movlw	0
  4825   003B4E  6E02               	movwf	(?___fltol+1)^0,c
  4826   003B50  0E00               	movlw	0
  4827   003B52  6E03               	movwf	(?___fltol+2)^0,c
  4828   003B54  0E00               	movlw	0
  4829   003B56  6E04               	movwf	(?___fltol+3)^0,c
  4830   003B58  EF1B  F01E         	goto	l926
  4831   003B5C                     l7363:
  4832   003B5C  C001  F005         	movff	___fltol@f1,??___fltol
  4833   003B60  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  4834   003B64  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  4835   003B68  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  4836   003B6C  0E20               	movlw	32
  4837   003B6E  EFBE  F01D         	goto	u7950
  4838   003B72                     u7955:
  4839   003B72  90D8               	bcf	status,0,c
  4840   003B74  3208               	rrcf	(??___fltol+3)^0,f,c
  4841   003B76  3207               	rrcf	(??___fltol+2)^0,f,c
  4842   003B78  3206               	rrcf	(??___fltol+1)^0,f,c
  4843   003B7A  3205               	rrcf	??___fltol^0,f,c
  4844   003B7C                     u7950:
  4845   003B7C  2EE8               	decfsz	wreg,f,c
  4846   003B7E  EFB9  F01D         	goto	u7955
  4847   003B82  5005               	movf	??___fltol^0,w,c
  4848   003B84  6E09               	movwf	___fltol@sign1^0,c
  4849   003B86  8E03               	bsf	(___fltol@f1+2)^0,7,c
  4850   003B88  0EFF               	movlw	255
  4851   003B8A  1601               	andwf	___fltol@f1^0,f,c
  4852   003B8C  0EFF               	movlw	255
  4853   003B8E  1602               	andwf	(___fltol@f1+1)^0,f,c
  4854   003B90  0EFF               	movlw	255
  4855   003B92  1603               	andwf	(___fltol@f1+2)^0,f,c
  4856   003B94  0E00               	movlw	0
  4857   003B96  1604               	andwf	(___fltol@f1+3)^0,f,c
  4858   003B98  0E96               	movlw	150
  4859   003B9A  5E0A               	subwf	___fltol@exp1^0,f,c
  4860   003B9C  BE0A               	btfsc	___fltol@exp1^0,7,c
  4861   003B9E  EFD5  F01D         	goto	u7960
  4862   003BA2  EFD3  F01D         	goto	u7961
  4863   003BA6                     u7961:
  4864   003BA6  EFEB  F01D         	goto	l7383
  4865   003BAA                     u7960:
  4866   003BAA  500A               	movf	___fltol@exp1^0,w,c
  4867   003BAC  0A80               	xorlw	128
  4868   003BAE  0F97               	addlw	151
  4869   003BB0  B0D8               	btfsc	status,0,c
  4870   003BB2  EFDD  F01D         	goto	u7971
  4871   003BB6  EFDF  F01D         	goto	u7970
  4872   003BBA                     u7971:
  4873   003BBA  EFE1  F01D         	goto	l7379
  4874   003BBE                     u7970:
  4875   003BBE  EFA4  F01D         	goto	l7359
  4876   003BC2                     l7379:
  4877   003BC2  90D8               	bcf	status,0,c
  4878   003BC4  3204               	rrcf	(___fltol@f1+3)^0,f,c
  4879   003BC6  3203               	rrcf	(___fltol@f1+2)^0,f,c
  4880   003BC8  3202               	rrcf	(___fltol@f1+1)^0,f,c
  4881   003BCA  3201               	rrcf	___fltol@f1^0,f,c
  4882   003BCC  3E0A               	incfsz	___fltol@exp1^0,f,c
  4883   003BCE  EFE1  F01D         	goto	l7379
  4884   003BD2  EF03  F01E         	goto	l7393
  4885   003BD6                     l7383:
  4886   003BD6  0E1F               	movlw	31
  4887   003BD8  640A               	cpfsgt	___fltol@exp1^0,c
  4888   003BDA  EFF1  F01D         	goto	u7981
  4889   003BDE  EFF3  F01D         	goto	u7980
  4890   003BE2                     u7981:
  4891   003BE2  EFFB  F01D         	goto	l7391
  4892   003BE6                     u7980:
  4893   003BE6  EFA4  F01D         	goto	l7359
  4894   003BEA                     l7389:
  4895   003BEA  90D8               	bcf	status,0,c
  4896   003BEC  3601               	rlcf	___fltol@f1^0,f,c
  4897   003BEE  3602               	rlcf	(___fltol@f1+1)^0,f,c
  4898   003BF0  3603               	rlcf	(___fltol@f1+2)^0,f,c
  4899   003BF2  3604               	rlcf	(___fltol@f1+3)^0,f,c
  4900   003BF4  060A               	decf	___fltol@exp1^0,f,c
  4901   003BF6                     l7391:
  4902   003BF6  500A               	movf	___fltol@exp1^0,w,c
  4903   003BF8  A4D8               	btfss	status,2,c
  4904   003BFA  EF01  F01E         	goto	u7991
  4905   003BFE  EF03  F01E         	goto	u7990
  4906   003C02                     u7991:
  4907   003C02  EFF5  F01D         	goto	l7389
  4908   003C06                     u7990:
  4909   003C06                     l7393:
  4910   003C06  5009               	movf	___fltol@sign1^0,w,c
  4911   003C08  B4D8               	btfsc	status,2,c
  4912   003C0A  EF09  F01E         	goto	u8001
  4913   003C0E  EF0B  F01E         	goto	u8000
  4914   003C12                     u8001:
  4915   003C12  EF13  F01E         	goto	l7397
  4916   003C16                     u8000:
  4917   003C16  1E04               	comf	(___fltol@f1+3)^0,f,c
  4918   003C18  1E03               	comf	(___fltol@f1+2)^0,f,c
  4919   003C1A  1E02               	comf	(___fltol@f1+1)^0,f,c
  4920   003C1C  6C01               	negf	___fltol@f1^0,c
  4921   003C1E  0E00               	movlw	0
  4922   003C20  2202               	addwfc	(___fltol@f1+1)^0,f,c
  4923   003C22  2203               	addwfc	(___fltol@f1+2)^0,f,c
  4924   003C24  2204               	addwfc	(___fltol@f1+3)^0,f,c
  4925   003C26                     l7397:
  4926   003C26  C001  F001         	movff	___fltol@f1,?___fltol
  4927   003C2A  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  4928   003C2E  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  4929   003C32  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  4930   003C36                     l926:
  4931   003C36  0012               	return		;funcret
  4932   003C38                     __end_of___fltol:
  4933                           	callstack 0
  4934                           
  4935 ;; *************** function ___flneg *****************
  4936 ;; Defined at:
  4937 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\flneg.c"
  4938 ;; Parameters:    Size  Location     Type
  4939 ;;  f1              4    0[COMRAM] long 
  4940 ;; Auto vars:     Size  Location     Type
  4941 ;;		None
  4942 ;; Return value:  Size  Location     Type
  4943 ;;                  4    0[COMRAM] long 
  4944 ;; Registers used:
  4945 ;;		wreg, status,2, status,0
  4946 ;; Tracked objects:
  4947 ;;		On entry : 0/0
  4948 ;;		On exit  : 0/0
  4949 ;;		Unchanged: 0/0
  4950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4951 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4954 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4955 ;;Total ram usage:        4 bytes
  4956 ;; Hardware stack levels used: 1
  4957 ;; This function calls:
  4958 ;;		Nothing
  4959 ;; This function is called by:
  4960 ;;		_efgtoa
  4961 ;; This function uses a non-reentrant model
  4962 ;;
  4963                           
  4964                           	psect	text14
  4965   0048FE                     __ptext14:
  4966                           	callstack 0
  4967   0048FE                     ___flneg:
  4968                           	callstack 26
  4969   0048FE  5001               	movf	___flneg@f1^0,w,c
  4970   004900  1002               	iorwf	(___flneg@f1+1)^0,w,c
  4971   004902  1003               	iorwf	(___flneg@f1+2)^0,w,c
  4972   004904  1004               	iorwf	(___flneg@f1+3)^0,w,c
  4973   004906  B4D8               	btfsc	status,2,c
  4974   004908  EF88  F024         	goto	u7931
  4975   00490C  EF8A  F024         	goto	u7930
  4976   004910                     u7931:
  4977   004910  EF92  F024         	goto	l7353
  4978   004914                     u7930:
  4979   004914  0E00               	movlw	0
  4980   004916  1A01               	xorwf	___flneg@f1^0,f,c
  4981   004918  0E00               	movlw	0
  4982   00491A  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  4983   00491C  0E00               	movlw	0
  4984   00491E  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  4985   004920  0E80               	movlw	128
  4986   004922  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  4987   004924                     l7353:
  4988   004924  C001  F001         	movff	___flneg@f1,?___flneg
  4989   004928  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  4990   00492C  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  4991   004930  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  4992   004934  0012               	return		;funcret
  4993   004936                     __end_of___flneg:
  4994                           	callstack 0
  4995                           
  4996 ;; *************** function ___flge *****************
  4997 ;; Defined at:
  4998 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\flge.c"
  4999 ;; Parameters:    Size  Location     Type
  5000 ;;  ff1             4   39[COMRAM] long 
  5001 ;;  ff2             4   43[COMRAM] long 
  5002 ;; Auto vars:     Size  Location     Type
  5003 ;;		None
  5004 ;; Return value:  Size  Location     Type
  5005 ;;		None               void
  5006 ;; Registers used:
  5007 ;;		wreg, status,2, status,0
  5008 ;; Tracked objects:
  5009 ;;		On entry : 0/0
  5010 ;;		On exit  : 0/0
  5011 ;;		Unchanged: 0/0
  5012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5013 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5015 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5016 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5017 ;;Total ram usage:       12 bytes
  5018 ;; Hardware stack levels used: 1
  5019 ;; This function calls:
  5020 ;;		Nothing
  5021 ;; This function is called by:
  5022 ;;		_efgtoa
  5023 ;; This function uses a non-reentrant model
  5024 ;;
  5025                           
  5026                           	psect	text15
  5027   003C38                     __ptext15:
  5028                           	callstack 0
  5029   003C38                     ___flge:
  5030                           	callstack 26
  5031   003C38  0E00               	movlw	0
  5032   003C3A  1428               	andwf	___flge@ff1^0,w,c
  5033   003C3C  6E30               	movwf	??___flge^0,c
  5034   003C3E  0E00               	movlw	0
  5035   003C40  1429               	andwf	(___flge@ff1+1)^0,w,c
  5036   003C42  6E31               	movwf	(??___flge+1)^0,c
  5037   003C44  0E80               	movlw	128
  5038   003C46  142A               	andwf	(___flge@ff1+2)^0,w,c
  5039   003C48  6E32               	movwf	(??___flge+2)^0,c
  5040   003C4A  0E7F               	movlw	127
  5041   003C4C  142B               	andwf	(___flge@ff1+3)^0,w,c
  5042   003C4E  6E33               	movwf	(??___flge+3)^0,c
  5043   003C50  5030               	movf	??___flge^0,w,c
  5044   003C52  1031               	iorwf	(??___flge+1)^0,w,c
  5045   003C54  1032               	iorwf	(??___flge+2)^0,w,c
  5046   003C56  1033               	iorwf	(??___flge+3)^0,w,c
  5047   003C58  A4D8               	btfss	status,2,c
  5048   003C5A  EF31  F01E         	goto	u7881
  5049   003C5E  EF33  F01E         	goto	u7880
  5050   003C62                     u7881:
  5051   003C62  EF3B  F01E         	goto	l7331
  5052   003C66                     u7880:
  5053   003C66  0E00               	movlw	0
  5054   003C68  6E28               	movwf	___flge@ff1^0,c
  5055   003C6A  0E00               	movlw	0
  5056   003C6C  6E29               	movwf	(___flge@ff1+1)^0,c
  5057   003C6E  0E00               	movlw	0
  5058   003C70  6E2A               	movwf	(___flge@ff1+2)^0,c
  5059   003C72  0E00               	movlw	0
  5060   003C74  6E2B               	movwf	(___flge@ff1+3)^0,c
  5061   003C76                     l7331:
  5062   003C76  0E00               	movlw	0
  5063   003C78  142C               	andwf	___flge@ff2^0,w,c
  5064   003C7A  6E30               	movwf	??___flge^0,c
  5065   003C7C  0E00               	movlw	0
  5066   003C7E  142D               	andwf	(___flge@ff2+1)^0,w,c
  5067   003C80  6E31               	movwf	(??___flge+1)^0,c
  5068   003C82  0E80               	movlw	128
  5069   003C84  142E               	andwf	(___flge@ff2+2)^0,w,c
  5070   003C86  6E32               	movwf	(??___flge+2)^0,c
  5071   003C88  0E7F               	movlw	127
  5072   003C8A  142F               	andwf	(___flge@ff2+3)^0,w,c
  5073   003C8C  6E33               	movwf	(??___flge+3)^0,c
  5074   003C8E  5030               	movf	??___flge^0,w,c
  5075   003C90  1031               	iorwf	(??___flge+1)^0,w,c
  5076   003C92  1032               	iorwf	(??___flge+2)^0,w,c
  5077   003C94  1033               	iorwf	(??___flge+3)^0,w,c
  5078   003C96  A4D8               	btfss	status,2,c
  5079   003C98  EF50  F01E         	goto	u7891
  5080   003C9C  EF52  F01E         	goto	u7890
  5081   003CA0                     u7891:
  5082   003CA0  EF5A  F01E         	goto	l7335
  5083   003CA4                     u7890:
  5084   003CA4  0E00               	movlw	0
  5085   003CA6  6E2C               	movwf	___flge@ff2^0,c
  5086   003CA8  0E00               	movlw	0
  5087   003CAA  6E2D               	movwf	(___flge@ff2+1)^0,c
  5088   003CAC  0E00               	movlw	0
  5089   003CAE  6E2E               	movwf	(___flge@ff2+2)^0,c
  5090   003CB0  0E00               	movlw	0
  5091   003CB2  6E2F               	movwf	(___flge@ff2+3)^0,c
  5092   003CB4                     l7335:
  5093   003CB4  AE2B               	btfss	(___flge@ff1+3)^0,7,c
  5094   003CB6  EF5F  F01E         	goto	u7901
  5095   003CBA  EF61  F01E         	goto	u7900
  5096   003CBE                     u7901:
  5097   003CBE  EF6A  F01E         	goto	l7339
  5098   003CC2                     u7900:
  5099   003CC2  6C28               	negf	___flge@ff1^0,c
  5100   003CC4  1E29               	comf	(___flge@ff1+1)^0,f,c
  5101   003CC6  B0D8               	btfsc	status,0,c
  5102   003CC8  2A29               	incf	(___flge@ff1+1)^0,f,c
  5103   003CCA  1E2A               	comf	(___flge@ff1+2)^0,f,c
  5104   003CCC  B0D8               	btfsc	status,0,c
  5105   003CCE  2A2A               	incf	(___flge@ff1+2)^0,f,c
  5106   003CD0  0E80               	movlw	128
  5107   003CD2  562B               	subfwb	(___flge@ff1+3)^0,f,c
  5108   003CD4                     l7339:
  5109   003CD4  AE2F               	btfss	(___flge@ff2+3)^0,7,c
  5110   003CD6  EF6F  F01E         	goto	u7911
  5111   003CDA  EF71  F01E         	goto	u7910
  5112   003CDE                     u7911:
  5113   003CDE  EF7A  F01E         	goto	l894
  5114   003CE2                     u7910:
  5115   003CE2  6C2C               	negf	___flge@ff2^0,c
  5116   003CE4  1E2D               	comf	(___flge@ff2+1)^0,f,c
  5117   003CE6  B0D8               	btfsc	status,0,c
  5118   003CE8  2A2D               	incf	(___flge@ff2+1)^0,f,c
  5119   003CEA  1E2E               	comf	(___flge@ff2+2)^0,f,c
  5120   003CEC  B0D8               	btfsc	status,0,c
  5121   003CEE  2A2E               	incf	(___flge@ff2+2)^0,f,c
  5122   003CF0  0E80               	movlw	128
  5123   003CF2  562F               	subfwb	(___flge@ff2+3)^0,f,c
  5124   003CF4                     l894:
  5125   003CF4  0E00               	movlw	0
  5126   003CF6  1A28               	xorwf	___flge@ff1^0,f,c
  5127   003CF8  0E00               	movlw	0
  5128   003CFA  1A29               	xorwf	(___flge@ff1+1)^0,f,c
  5129   003CFC  0E00               	movlw	0
  5130   003CFE  1A2A               	xorwf	(___flge@ff1+2)^0,f,c
  5131   003D00  0E80               	movlw	128
  5132   003D02  1A2B               	xorwf	(___flge@ff1+3)^0,f,c
  5133   003D04  0E00               	movlw	0
  5134   003D06  1A2C               	xorwf	___flge@ff2^0,f,c
  5135   003D08  0E00               	movlw	0
  5136   003D0A  1A2D               	xorwf	(___flge@ff2+1)^0,f,c
  5137   003D0C  0E00               	movlw	0
  5138   003D0E  1A2E               	xorwf	(___flge@ff2+2)^0,f,c
  5139   003D10  0E80               	movlw	128
  5140   003D12  1A2F               	xorwf	(___flge@ff2+3)^0,f,c
  5141   003D14  502C               	movf	___flge@ff2^0,w,c
  5142   003D16  5C28               	subwf	___flge@ff1^0,w,c
  5143   003D18  502D               	movf	(___flge@ff2+1)^0,w,c
  5144   003D1A  5829               	subwfb	(___flge@ff1+1)^0,w,c
  5145   003D1C  502E               	movf	(___flge@ff2+2)^0,w,c
  5146   003D1E  582A               	subwfb	(___flge@ff1+2)^0,w,c
  5147   003D20  502F               	movf	(___flge@ff2+3)^0,w,c
  5148   003D22  582B               	subwfb	(___flge@ff1+3)^0,w,c
  5149   003D24  B0D8               	btfsc	status,0,c
  5150   003D26  EF97  F01E         	goto	u7921
  5151   003D2A  EF99  F01E         	goto	u7920
  5152   003D2E                     u7921:
  5153   003D2E  EF9C  F01E         	goto	l7345
  5154   003D32                     u7920:
  5155   003D32  90D8               	bcf	status,0,c
  5156   003D34  EF9D  F01E         	goto	l899
  5157   003D38                     l7345:
  5158   003D38  80D8               	bsf	status,0,c
  5159   003D3A                     l899:
  5160   003D3A  0012               	return		;funcret
  5161   003D3C                     __end_of___flge:
  5162                           	callstack 0
  5163                           
  5164 ;; *************** function ___fleq *****************
  5165 ;; Defined at:
  5166 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fleq.c"
  5167 ;; Parameters:    Size  Location     Type
  5168 ;;  ff1             4    0[COMRAM] long 
  5169 ;;  ff2             4    4[COMRAM] long 
  5170 ;; Auto vars:     Size  Location     Type
  5171 ;;		None
  5172 ;; Return value:  Size  Location     Type
  5173 ;;		None               void
  5174 ;; Registers used:
  5175 ;;		wreg, status,2, status,0
  5176 ;; Tracked objects:
  5177 ;;		On entry : 0/0
  5178 ;;		On exit  : 0/0
  5179 ;;		Unchanged: 0/0
  5180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5181 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5183 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5184 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5185 ;;Total ram usage:       12 bytes
  5186 ;; Hardware stack levels used: 1
  5187 ;; This function calls:
  5188 ;;		Nothing
  5189 ;; This function is called by:
  5190 ;;		_efgtoa
  5191 ;; This function uses a non-reentrant model
  5192 ;;
  5193                           
  5194                           	psect	text16
  5195   00411C                     __ptext16:
  5196                           	callstack 0
  5197   00411C                     ___fleq:
  5198                           	callstack 26
  5199   00411C  0E00               	movlw	0
  5200   00411E  1401               	andwf	___fleq@ff1^0,w,c
  5201   004120  6E09               	movwf	??___fleq^0,c
  5202   004122  0E00               	movlw	0
  5203   004124  1402               	andwf	(___fleq@ff1+1)^0,w,c
  5204   004126  6E0A               	movwf	(??___fleq+1)^0,c
  5205   004128  0E80               	movlw	128
  5206   00412A  1403               	andwf	(___fleq@ff1+2)^0,w,c
  5207   00412C  6E0B               	movwf	(??___fleq+2)^0,c
  5208   00412E  0E7F               	movlw	127
  5209   004130  1404               	andwf	(___fleq@ff1+3)^0,w,c
  5210   004132  6E0C               	movwf	(??___fleq+3)^0,c
  5211   004134  5009               	movf	??___fleq^0,w,c
  5212   004136  100A               	iorwf	(??___fleq+1)^0,w,c
  5213   004138  100B               	iorwf	(??___fleq+2)^0,w,c
  5214   00413A  100C               	iorwf	(??___fleq+3)^0,w,c
  5215   00413C  A4D8               	btfss	status,2,c
  5216   00413E  EFA3  F020         	goto	u7851
  5217   004142  EFA5  F020         	goto	u7850
  5218   004146                     u7851:
  5219   004146  EFAD  F020         	goto	l7315
  5220   00414A                     u7850:
  5221   00414A  0E00               	movlw	0
  5222   00414C  6E01               	movwf	___fleq@ff1^0,c
  5223   00414E  0E00               	movlw	0
  5224   004150  6E02               	movwf	(___fleq@ff1+1)^0,c
  5225   004152  0E00               	movlw	0
  5226   004154  6E03               	movwf	(___fleq@ff1+2)^0,c
  5227   004156  0E00               	movlw	0
  5228   004158  6E04               	movwf	(___fleq@ff1+3)^0,c
  5229   00415A                     l7315:
  5230   00415A  0E00               	movlw	0
  5231   00415C  1405               	andwf	___fleq@ff2^0,w,c
  5232   00415E  6E09               	movwf	??___fleq^0,c
  5233   004160  0E00               	movlw	0
  5234   004162  1406               	andwf	(___fleq@ff2+1)^0,w,c
  5235   004164  6E0A               	movwf	(??___fleq+1)^0,c
  5236   004166  0E80               	movlw	128
  5237   004168  1407               	andwf	(___fleq@ff2+2)^0,w,c
  5238   00416A  6E0B               	movwf	(??___fleq+2)^0,c
  5239   00416C  0E7F               	movlw	127
  5240   00416E  1408               	andwf	(___fleq@ff2+3)^0,w,c
  5241   004170  6E0C               	movwf	(??___fleq+3)^0,c
  5242   004172  5009               	movf	??___fleq^0,w,c
  5243   004174  100A               	iorwf	(??___fleq+1)^0,w,c
  5244   004176  100B               	iorwf	(??___fleq+2)^0,w,c
  5245   004178  100C               	iorwf	(??___fleq+3)^0,w,c
  5246   00417A  A4D8               	btfss	status,2,c
  5247   00417C  EFC2  F020         	goto	u7861
  5248   004180  EFC4  F020         	goto	u7860
  5249   004184                     u7861:
  5250   004184  EFCC  F020         	goto	l7319
  5251   004188                     u7860:
  5252   004188  0E00               	movlw	0
  5253   00418A  6E05               	movwf	___fleq@ff2^0,c
  5254   00418C  0E00               	movlw	0
  5255   00418E  6E06               	movwf	(___fleq@ff2+1)^0,c
  5256   004190  0E00               	movlw	0
  5257   004192  6E07               	movwf	(___fleq@ff2+2)^0,c
  5258   004194  0E00               	movlw	0
  5259   004196  6E08               	movwf	(___fleq@ff2+3)^0,c
  5260   004198                     l7319:
  5261   004198  5005               	movf	___fleq@ff2^0,w,c
  5262   00419A  1801               	xorwf	___fleq@ff1^0,w,c
  5263   00419C  E10F               	bnz	u7870
  5264   00419E  5006               	movf	(___fleq@ff2+1)^0,w,c
  5265   0041A0  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  5266   0041A2  E10C               	bnz	u7870
  5267   0041A4  5007               	movf	(___fleq@ff2+2)^0,w,c
  5268   0041A6  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  5269   0041A8  E109               	bnz	u7870
  5270   0041AA  5008               	movf	(___fleq@ff2+3)^0,w,c
  5271   0041AC  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  5272   0041AE  B4D8               	btfsc	status,2,c
  5273   0041B0  EFDC  F020         	goto	u7871
  5274   0041B4  EFDE  F020         	goto	u7870
  5275   0041B8                     u7871:
  5276   0041B8  EFE1  F020         	goto	l7323
  5277   0041BC                     u7870:
  5278   0041BC  90D8               	bcf	status,0,c
  5279   0041BE  EFE2  F020         	goto	l888
  5280   0041C2                     l7323:
  5281   0041C2  80D8               	bsf	status,0,c
  5282   0041C4                     l888:
  5283   0041C4  0012               	return		;funcret
  5284   0041C6                     __end_of___fleq:
  5285                           	callstack 0
  5286                           
  5287 ;; *************** function _dtoa *****************
  5288 ;; Defined at:
  5289 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  5290 ;; Parameters:    Size  Location     Type
  5291 ;;  fp              1   22[COMRAM] PTR struct _IO_FILE
  5292 ;;		 -> sprintf@f(12), 
  5293 ;;  d               2   23[COMRAM] int 
  5294 ;; Auto vars:     Size  Location     Type
  5295 ;;  i               2   32[COMRAM] int 
  5296 ;;  p               2   29[COMRAM] int 
  5297 ;;  w               2   27[COMRAM] int 
  5298 ;;  s               1   31[COMRAM] unsigned char 
  5299 ;; Return value:  Size  Location     Type
  5300 ;;                  1    wreg      void 
  5301 ;; Registers used:
  5302 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5303 ;; Tracked objects:
  5304 ;;		On entry : 0/0
  5305 ;;		On exit  : 0/0
  5306 ;;		Unchanged: 0/0
  5307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5308 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5309 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5311 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5312 ;;Total ram usage:       12 bytes
  5313 ;; Hardware stack levels used: 1
  5314 ;; Hardware stack levels required when called: 4
  5315 ;; This function calls:
  5316 ;;		___awdiv
  5317 ;;		___awmod
  5318 ;;		_abs
  5319 ;;		_pad
  5320 ;; This function is called by:
  5321 ;;		_vfpfcnvrt
  5322 ;; This function uses a non-reentrant model
  5323 ;;
  5324                           
  5325                           	psect	text17
  5326   003648                     __ptext17:
  5327                           	callstack 0
  5328   003648                     _dtoa:
  5329                           	callstack 23
  5330   003648                     
  5331                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 513: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\commo
      +                          n\doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c:
      +                           515:  char s;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 516
      +                          :     int i, w;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 51
      +                          8:  int p;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 524:   
      +                            s = d < 0 ? 1 : 0;
  5332   003648  BE19               	btfsc	(dtoa@d+1)^0,7,c
  5333   00364A  EF29  F01B         	goto	u8251
  5334   00364E  EF2C  F01B         	goto	u8250
  5335   003652                     u8251:
  5336   003652  0E01               	movlw	1
  5337   003654  EF2D  F01B         	goto	u8260
  5338   003658                     u8250:
  5339   003658  0E00               	movlw	0
  5340   00365A                     u8260:
  5341   00365A  6E20               	movwf	dtoa@s^0,c
  5342                           
  5343                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 533:     p = (0 <
      +                          = prec) ? prec : 1;
  5344   00365C  0100               	movlb	0	; () banked
  5345   00365E  BFEF               	btfsc	(_prec+1)& (0+255),7,b
  5346   003660  EF36  F01B         	goto	u8270
  5347   003664  EF34  F01B         	goto	u8271
  5348   003668                     u8271:
  5349   003668  EF3C  F01B         	goto	l1350
  5350   00366C                     u8270:
  5351   00366C                     
  5352                           ; BSR set to: 0
  5353   00366C  0E00               	movlw	0
  5354   00366E  6E1F               	movwf	(dtoa@p+1)^0,c
  5355   003670  0E01               	movlw	1
  5356   003672  6E1E               	movwf	dtoa@p^0,c
  5357   003674  EF40  F01B         	goto	l1352
  5358   003678                     l1350:
  5359                           
  5360                           ; BSR set to: 0
  5361   003678  C0EE  F01E         	movff	_prec,dtoa@p
  5362   00367C  C0EF  F01F         	movff	_prec+1,dtoa@p+1
  5363   003680                     l1352:
  5364                           
  5365                           ; BSR set to: 0
  5366                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
  5367   003680  C0EC  F01C         	movff	_width,dtoa@w
  5368   003684  C0ED  F01D         	movff	_width+1,dtoa@w+1
  5369   003688                     
  5370                           ; BSR set to: 0
  5371                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 536:     if (s
  5372   003688  5020               	movf	dtoa@s^0,w,c
  5373   00368A  B4D8               	btfsc	status,2,c
  5374   00368C  EF4A  F01B         	goto	u8281
  5375   003690  EF4C  F01B         	goto	u8280
  5376   003694                     u8281:
  5377   003694  EF63  F01B         	goto	l1353
  5378   003698                     u8280:
  5379   003698                     
  5380                           ; BSR set to: 0
  5381                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 541:         --w;
  5382   003698  061C               	decf	dtoa@w^0,f,c
  5383   00369A  A0D8               	btfss	status,0,c
  5384   00369C  061D               	decf	(dtoa@w+1)^0,f,c
  5385   00369E                     
  5386                           ; BSR set to: 0
  5387                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
  5388   00369E  5020               	movf	dtoa@s^0,w,c
  5389   0036A0  A4D8               	btfss	status,2,c
  5390   0036A2  EF55  F01B         	goto	u8291
  5391   0036A6  EF57  F01B         	goto	u8290
  5392   0036AA                     u8291:
  5393   0036AA  EF5D  F01B         	goto	l7515
  5394   0036AE                     u8290:
  5395   0036AE                     
  5396                           ; BSR set to: 0
  5397   0036AE  0E00               	movlw	0
  5398   0036B0  6E1B               	movwf	(_dtoa$1486+1)^0,c
  5399   0036B2  0E2B               	movlw	43
  5400   0036B4  6E1A               	movwf	_dtoa$1486^0,c
  5401   0036B6  EF61  F01B         	goto	l7517
  5402   0036BA                     l7515:
  5403                           
  5404                           ; BSR set to: 0
  5405   0036BA  0E00               	movlw	0
  5406   0036BC  6E1B               	movwf	(_dtoa$1486+1)^0,c
  5407   0036BE  0E2D               	movlw	45
  5408   0036C0  6E1A               	movwf	_dtoa$1486^0,c
  5409   0036C2                     l7517:
  5410                           
  5411                           ; BSR set to: 0
  5412   0036C2  C01A  F020         	movff	_dtoa$1486,dtoa@s
  5413   0036C6                     l1353:
  5414                           
  5415                           ; BSR set to: 0
  5416                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
  5417   0036C6  0E00               	movlw	0
  5418   0036C8  6E22               	movwf	(dtoa@i+1)^0,c
  5419   0036CA  0E4F               	movlw	79
  5420   0036CC  6E21               	movwf	dtoa@i^0,c
  5421   0036CE                     
  5422                           ; BSR set to: 0
  5423                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
  5424   0036CE  0E00               	movlw	0
  5425   0036D0  0101               	movlb	1	; () banked
  5426   0036D2  6F5F               	movwf	(_dbuf+79)& (0+255),b
  5427                           
  5428                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  5429   0036D4  EF9C  F01B         	goto	l7531
  5430   0036D8                     l7521:
  5431                           
  5432                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 564:         --i;
  5433   0036D8  0621               	decf	dtoa@i^0,f,c
  5434   0036DA  A0D8               	btfss	status,0,c
  5435   0036DC  0622               	decf	(dtoa@i+1)^0,f,c
  5436   0036DE                     
  5437                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  5438   0036DE  0E10               	movlw	low _dbuf
  5439   0036E0  2421               	addwf	dtoa@i^0,w,c
  5440   0036E2  6ED9               	movwf	fsr2l,c
  5441   0036E4  0E01               	movlw	high _dbuf
  5442   0036E6  2022               	addwfc	(dtoa@i+1)^0,w,c
  5443   0036E8  6EDA               	movwf	fsr2h,c
  5444   0036EA  C018  F001         	movff	dtoa@d,___awmod@dividend
  5445   0036EE  C019  F002         	movff	dtoa@d+1,___awmod@dividend+1
  5446   0036F2  0E00               	movlw	0
  5447   0036F4  6E04               	movwf	(___awmod@divisor+1)^0,c
  5448   0036F6  0E0A               	movlw	10
  5449   0036F8  6E03               	movwf	___awmod@divisor^0,c
  5450   0036FA  EC36  F020         	call	___awmod	;wreg free
  5451   0036FE  C001  F007         	movff	?___awmod,abs@a
  5452   003702  C002  F008         	movff	?___awmod+1,abs@a+1
  5453   003706  EC40  F025         	call	_abs	;wreg free
  5454   00370A  5007               	movf	?_abs^0,w,c
  5455   00370C  0F30               	addlw	48
  5456   00370E  6EDF               	movwf	indf2,c
  5457   003710                     
  5458                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 567:         --p;
  5459   003710  061E               	decf	dtoa@p^0,f,c
  5460   003712  A0D8               	btfss	status,0,c
  5461   003714  061F               	decf	(dtoa@p+1)^0,f,c
  5462   003716                     
  5463                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 571:         --w;
  5464   003716  061C               	decf	dtoa@w^0,f,c
  5465   003718  A0D8               	btfss	status,0,c
  5466   00371A  061D               	decf	(dtoa@w+1)^0,f,c
  5467   00371C                     
  5468                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
  5469   00371C  C018  F001         	movff	dtoa@d,___awdiv@dividend
  5470   003720  C019  F002         	movff	dtoa@d+1,___awdiv@dividend+1
  5471   003724  0E00               	movlw	0
  5472   003726  6E04               	movwf	(___awdiv@divisor+1)^0,c
  5473   003728  0E0A               	movlw	10
  5474   00372A  6E03               	movwf	___awdiv@divisor^0,c
  5475   00372C  EC1D  F01F         	call	___awdiv	;wreg free
  5476   003730  C001  F018         	movff	?___awdiv,dtoa@d
  5477   003734  C002  F019         	movff	?___awdiv+1,dtoa@d+1
  5478   003738                     l7531:
  5479                           
  5480                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  5481   003738  BE22               	btfsc	(dtoa@i+1)^0,7,c
  5482   00373A  EFA7  F01B         	goto	u8301
  5483   00373E  5022               	movf	(dtoa@i+1)^0,w,c
  5484   003740  E108               	bnz	u8300
  5485   003742  0421               	decf	dtoa@i^0,w,c
  5486   003744  A0D8               	btfss	status,0,c
  5487   003746  EFA7  F01B         	goto	u8301
  5488   00374A  EFA9  F01B         	goto	u8300
  5489   00374E                     u8301:
  5490   00374E  EFBF  F01B         	goto	l7537
  5491   003752                     u8300:
  5492   003752  5018               	movf	dtoa@d^0,w,c
  5493   003754  1019               	iorwf	(dtoa@d+1)^0,w,c
  5494   003756  A4D8               	btfss	status,2,c
  5495   003758  EFB0  F01B         	goto	u8311
  5496   00375C  EFB2  F01B         	goto	u8310
  5497   003760                     u8311:
  5498   003760  EF6C  F01B         	goto	l7521
  5499   003764                     u8310:
  5500   003764  BE1F               	btfsc	(dtoa@p+1)^0,7,c
  5501   003766  EFBF  F01B         	goto	u8320
  5502   00376A  501F               	movf	(dtoa@p+1)^0,w,c
  5503   00376C  E106               	bnz	u8321
  5504   00376E  041E               	decf	dtoa@p^0,w,c
  5505   003770  B0D8               	btfsc	status,0,c
  5506   003772  EFBD  F01B         	goto	u8321
  5507   003776  EFBF  F01B         	goto	u8320
  5508   00377A                     u8321:
  5509   00377A  EF6C  F01B         	goto	l7521
  5510   00377E                     u8320:
  5511   00377E                     l7537:
  5512                           
  5513                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
  5514   00377E  5020               	movf	dtoa@s^0,w,c
  5515   003780  B4D8               	btfsc	status,2,c
  5516   003782  EFC5  F01B         	goto	u8331
  5517   003786  EFC7  F01B         	goto	u8330
  5518   00378A                     u8331:
  5519   00378A  EFD2  F01B         	goto	l7543
  5520   00378E                     u8330:
  5521   00378E                     
  5522                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 577:         --i;
  5523   00378E  0621               	decf	dtoa@i^0,f,c
  5524   003790  A0D8               	btfss	status,0,c
  5525   003792  0622               	decf	(dtoa@i+1)^0,f,c
  5526   003794                     
  5527                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
  5528   003794  0E10               	movlw	low _dbuf
  5529   003796  2421               	addwf	dtoa@i^0,w,c
  5530   003798  6ED9               	movwf	fsr2l,c
  5531   00379A  0E01               	movlw	high _dbuf
  5532   00379C  2022               	addwfc	(dtoa@i+1)^0,w,c
  5533   00379E  6EDA               	movwf	fsr2h,c
  5534   0037A0  C020  FFDF         	movff	dtoa@s,indf2
  5535   0037A4                     l7543:
  5536                           
  5537                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          void) pad(fp, &dbuf[i], w);
  5538   0037A4  C017  F00F         	movff	dtoa@fp,pad@fp
  5539   0037A8  0E10               	movlw	low _dbuf
  5540   0037AA  2421               	addwf	dtoa@i^0,w,c
  5541   0037AC  6E10               	movwf	pad@buf^0,c
  5542   0037AE  0E01               	movlw	high _dbuf
  5543   0037B0  2022               	addwfc	(dtoa@i+1)^0,w,c
  5544   0037B2  6E11               	movwf	(pad@buf+1)^0,c
  5545   0037B4  C01C  F012         	movff	dtoa@w,pad@p
  5546   0037B8  C01D  F013         	movff	dtoa@w+1,pad@p+1
  5547   0037BC  EC05  F023         	call	_pad	;wreg free
  5548   0037C0  0012               	return		;funcret
  5549   0037C2                     __end_of_dtoa:
  5550                           	callstack 0
  5551                           
  5552 ;; *************** function _pad *****************
  5553 ;; Defined at:
  5554 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  5555 ;; Parameters:    Size  Location     Type
  5556 ;;  fp              1   14[COMRAM] PTR struct _IO_FILE
  5557 ;;		 -> sprintf@f(12), 
  5558 ;;  buf             2   15[COMRAM] PTR unsigned char 
  5559 ;;		 -> dbuf(80), 
  5560 ;;  p               2   17[COMRAM] int 
  5561 ;; Auto vars:     Size  Location     Type
  5562 ;;  i               2   20[COMRAM] int 
  5563 ;; Return value:  Size  Location     Type
  5564 ;;                  1    wreg      void 
  5565 ;; Registers used:
  5566 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5567 ;; Tracked objects:
  5568 ;;		On entry : 0/0
  5569 ;;		On exit  : 0/0
  5570 ;;		Unchanged: 0/0
  5571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5572 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5573 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5574 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5575 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5576 ;;Total ram usage:        8 bytes
  5577 ;; Hardware stack levels used: 1
  5578 ;; Hardware stack levels required when called: 3
  5579 ;; This function calls:
  5580 ;;		_fputc
  5581 ;;		_fputs
  5582 ;; This function is called by:
  5583 ;;		_dtoa
  5584 ;;		_efgtoa
  5585 ;; This function uses a non-reentrant model
  5586 ;;
  5587                           
  5588                           	psect	text18
  5589   00460A                     __ptext18:
  5590                           	callstack 0
  5591   00460A                     _pad:
  5592                           	callstack 23
  5593   00460A                     
  5594                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c:
      +                           205:  if (p < 0) {
  5595   00460A  BE13               	btfsc	(pad@p+1)^0,7,c
  5596   00460C  EF0C  F023         	goto	u8010
  5597   004610  EF0A  F023         	goto	u8011
  5598   004614                     u8011:
  5599   004614  EF10  F023         	goto	l1342
  5600   004618                     u8010:
  5601   004618                     
  5602                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  5603   004618  0E00               	movlw	0
  5604   00461A  6E13               	movwf	(pad@p+1)^0,c
  5605   00461C  0E00               	movlw	0
  5606   00461E  6E12               	movwf	pad@p^0,c
  5607   004620                     l1342:
  5608                           
  5609                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  5610   004620  0E00               	movlw	0
  5611   004622  6E16               	movwf	(pad@i+1)^0,c
  5612   004624  0E00               	movlw	0
  5613   004626  6E15               	movwf	pad@i^0,c
  5614                           
  5615                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  5616   004628  EF20  F023         	goto	l7409
  5617   00462C                     l7405:
  5618                           
  5619                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  5620   00462C  0E00               	movlw	0
  5621   00462E  6E02               	movwf	(fputc@c+1)^0,c
  5622   004630  0E20               	movlw	32
  5623   004632  6E01               	movwf	fputc@c^0,c
  5624   004634  C00F  F003         	movff	pad@fp,fputc@fp
  5625   004638  EC7F  F01F         	call	_fputc	;wreg free
  5626   00463C                     
  5627                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 211:         ++i;
  5628   00463C  4A15               	infsnz	pad@i^0,f,c
  5629   00463E  2A16               	incf	(pad@i+1)^0,f,c
  5630   004640                     l7409:
  5631                           
  5632                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  5633   004640  5012               	movf	pad@p^0,w,c
  5634   004642  5C15               	subwf	pad@i^0,w,c
  5635   004644  5016               	movf	(pad@i+1)^0,w,c
  5636   004646  0A80               	xorlw	128
  5637   004648  6E14               	movwf	??_pad^0,c
  5638   00464A  5013               	movf	(pad@p+1)^0,w,c
  5639   00464C  0A80               	xorlw	128
  5640   00464E  5814               	subwfb	??_pad^0,w,c
  5641   004650  A0D8               	btfss	status,0,c
  5642   004652  EF2D  F023         	goto	u8021
  5643   004656  EF2F  F023         	goto	u8020
  5644   00465A                     u8021:
  5645   00465A  EF16  F023         	goto	l7405
  5646   00465E                     u8020:
  5647   00465E                     
  5648                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  5649   00465E  C010  F009         	movff	pad@buf,fputs@s
  5650   004662  C011  F00A         	movff	pad@buf+1,fputs@s+1
  5651   004666  C00F  F00B         	movff	pad@fp,fputs@fp
  5652   00466A  EC42  F024         	call	_fputs	;wreg free
  5653   00466E  0012               	return		;funcret
  5654   004670                     __end_of_pad:
  5655                           	callstack 0
  5656                           
  5657 ;; *************** function _fputs *****************
  5658 ;; Defined at:
  5659 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputs.c"
  5660 ;; Parameters:    Size  Location     Type
  5661 ;;  s               2    8[COMRAM] PTR const unsigned char 
  5662 ;;		 -> dbuf(80), 
  5663 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
  5664 ;;		 -> sprintf@f(12), 
  5665 ;; Auto vars:     Size  Location     Type
  5666 ;;  i               2   12[COMRAM] int 
  5667 ;;  c               1   11[COMRAM] unsigned char 
  5668 ;; Return value:  Size  Location     Type
  5669 ;;                  2    8[COMRAM] int 
  5670 ;; Registers used:
  5671 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5672 ;; Tracked objects:
  5673 ;;		On entry : 0/0
  5674 ;;		On exit  : 0/0
  5675 ;;		Unchanged: 0/0
  5676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5677 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5678 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5680 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5681 ;;Total ram usage:        6 bytes
  5682 ;; Hardware stack levels used: 1
  5683 ;; Hardware stack levels required when called: 2
  5684 ;; This function calls:
  5685 ;;		_fputc
  5686 ;; This function is called by:
  5687 ;;		_pad
  5688 ;; This function uses a non-reentrant model
  5689 ;;
  5690                           
  5691                           	psect	text19
  5692   004884                     __ptext19:
  5693                           	callstack 0
  5694   004884                     _fputs:
  5695                           	callstack 23
  5696   004884  0E00               	movlw	0
  5697   004886  6E0E               	movwf	(fputs@i+1)^0,c
  5698   004888  0E00               	movlw	0
  5699   00488A  6E0D               	movwf	fputs@i^0,c
  5700   00488C  EF51  F024         	goto	l6927
  5701   004890                     l6923:
  5702   004890  C00C  F001         	movff	fputs@c,fputc@c
  5703   004894  6A02               	clrf	(fputc@c+1)^0,c
  5704   004896  C00B  F003         	movff	fputs@fp,fputc@fp
  5705   00489A  EC7F  F01F         	call	_fputc	;wreg free
  5706   00489E  4A0D               	infsnz	fputs@i^0,f,c
  5707   0048A0  2A0E               	incf	(fputs@i+1)^0,f,c
  5708   0048A2                     l6927:
  5709   0048A2  500D               	movf	fputs@i^0,w,c
  5710   0048A4  2409               	addwf	fputs@s^0,w,c
  5711   0048A6  6ED9               	movwf	fsr2l,c
  5712   0048A8  500E               	movf	(fputs@i+1)^0,w,c
  5713   0048AA  200A               	addwfc	(fputs@s+1)^0,w,c
  5714   0048AC  6EDA               	movwf	fsr2h,c
  5715   0048AE  50DF               	movf	indf2,w,c
  5716   0048B0  6E0C               	movwf	fputs@c^0,c
  5717   0048B2  500C               	movf	fputs@c^0,w,c
  5718   0048B4  A4D8               	btfss	status,2,c
  5719   0048B6  EF5F  F024         	goto	u7301
  5720   0048BA  EF61  F024         	goto	u7300
  5721   0048BE                     u7301:
  5722   0048BE  EF48  F024         	goto	l6923
  5723   0048C2                     u7300:
  5724   0048C2  0012               	return		;funcret
  5725   0048C4                     __end_of_fputs:
  5726                           	callstack 0
  5727                           
  5728 ;; *************** function _fputc *****************
  5729 ;; Defined at:
  5730 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  5731 ;; Parameters:    Size  Location     Type
  5732 ;;  c               2    0[COMRAM] int 
  5733 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  5734 ;;		 -> sprintf@f(12), 
  5735 ;; Auto vars:     Size  Location     Type
  5736 ;;		None
  5737 ;; Return value:  Size  Location     Type
  5738 ;;                  2    0[COMRAM] int 
  5739 ;; Registers used:
  5740 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5741 ;; Tracked objects:
  5742 ;;		On entry : 0/0
  5743 ;;		On exit  : 0/0
  5744 ;;		Unchanged: 0/0
  5745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5746 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5748 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5749 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5750 ;;Total ram usage:        8 bytes
  5751 ;; Hardware stack levels used: 1
  5752 ;; Hardware stack levels required when called: 1
  5753 ;; This function calls:
  5754 ;;		_putch
  5755 ;; This function is called by:
  5756 ;;		_pad
  5757 ;;		_vfpfcnvrt
  5758 ;;		_fputs
  5759 ;; This function uses a non-reentrant model
  5760 ;;
  5761                           
  5762                           	psect	text20
  5763   003EFE                     __ptext20:
  5764                           	callstack 0
  5765   003EFE                     _fputc:
  5766                           	callstack 26
  5767   003EFE  5003               	movf	fputc@fp^0,w,c
  5768   003F00  B4D8               	btfsc	status,2,c
  5769   003F02  EF85  F01F         	goto	u6831
  5770   003F06  EF87  F01F         	goto	u6830
  5771   003F0A                     u6831:
  5772   003F0A  EF8F  F01F         	goto	l6685
  5773   003F0E                     u6830:
  5774   003F0E  5003               	movf	fputc@fp^0,w,c
  5775   003F10  A4D8               	btfss	status,2,c
  5776   003F12  EF8D  F01F         	goto	u6841
  5777   003F16  EF8F  F01F         	goto	u6840
  5778   003F1A                     u6841:
  5779   003F1A  EF94  F01F         	goto	l6687
  5780   003F1E                     u6840:
  5781   003F1E                     l6685:
  5782   003F1E  5001               	movf	fputc@c^0,w,c
  5783   003F20  ECC4  F025         	call	_putch
  5784   003F24  EFDB  F01F         	goto	l1510
  5785   003F28                     l6687:
  5786   003F28  5003               	movf	fputc@fp^0,w,c
  5787   003F2A  6ED9               	movwf	fsr2l,c
  5788   003F2C  6ADA               	clrf	fsr2h,c
  5789   003F2E  0E0A               	movlw	10
  5790   003F30  26D9               	addwf	fsr2l,f,c
  5791   003F32  50DE               	movf	postinc2,w,c
  5792   003F34  10DE               	iorwf	postinc2,w,c
  5793   003F36  B4D8               	btfsc	status,2,c
  5794   003F38  EFA0  F01F         	goto	u6851
  5795   003F3C  EFA2  F01F         	goto	u6850
  5796   003F40                     u6851:
  5797   003F40  EFBB  F01F         	goto	l6691
  5798   003F44                     u6850:
  5799   003F44  5003               	movf	fputc@fp^0,w,c
  5800   003F46  6ED9               	movwf	fsr2l,c
  5801   003F48  6ADA               	clrf	fsr2h,c
  5802   003F4A  0E0A               	movlw	10
  5803   003F4C  26D9               	addwf	fsr2l,f,c
  5804   003F4E  5003               	movf	fputc@fp^0,w,c
  5805   003F50  6EE1               	movwf	fsr1l,c
  5806   003F52  6AE2               	clrf	fsr1h,c
  5807   003F54  0E03               	movlw	3
  5808   003F56  26E1               	addwf	fsr1l,f,c
  5809   003F58  50DE               	movf	postinc2,w,c
  5810   003F5A  5CE6               	subwf	postinc1,w,c
  5811   003F5C  50E6               	movf	postinc1,w,c
  5812   003F5E  0A80               	xorlw	128
  5813   003F60  6E08               	movwf	(??_fputc+4)^0,c
  5814   003F62  50DE               	movf	postinc2,w,c
  5815   003F64  0A80               	xorlw	128
  5816   003F66  5808               	subwfb	(??_fputc+4)^0,w,c
  5817   003F68  B0D8               	btfsc	status,0,c
  5818   003F6A  EFB9  F01F         	goto	u6861
  5819   003F6E  EFBB  F01F         	goto	u6860
  5820   003F72                     u6861:
  5821   003F72  EFDB  F01F         	goto	l1510
  5822   003F76                     u6860:
  5823   003F76                     l6691:
  5824   003F76  5003               	movf	fputc@fp^0,w,c
  5825   003F78  6ED9               	movwf	fsr2l,c
  5826   003F7A  6ADA               	clrf	fsr2h,c
  5827   003F7C  0E03               	movlw	3
  5828   003F7E  26D9               	addwf	fsr2l,f,c
  5829   003F80  CFDE F004          	movff	postinc2,??_fputc
  5830   003F84  CFDD F005          	movff	postdec2,??_fputc+1
  5831   003F88  5003               	movf	fputc@fp^0,w,c
  5832   003F8A  6ED9               	movwf	fsr2l,c
  5833   003F8C  6ADA               	clrf	fsr2h,c
  5834   003F8E  CFDE F006          	movff	postinc2,??_fputc+2
  5835   003F92  CFDD F007          	movff	postdec2,??_fputc+3
  5836   003F96  5004               	movf	??_fputc^0,w,c
  5837   003F98  2406               	addwf	(??_fputc+2)^0,w,c
  5838   003F9A  6ED9               	movwf	fsr2l,c
  5839   003F9C  5005               	movf	(??_fputc+1)^0,w,c
  5840   003F9E  2007               	addwfc	(??_fputc+3)^0,w,c
  5841   003FA0  6EDA               	movwf	fsr2h,c
  5842   003FA2  C001  FFDF         	movff	fputc@c,indf2
  5843   003FA6  5003               	movf	fputc@fp^0,w,c
  5844   003FA8  6ED9               	movwf	fsr2l,c
  5845   003FAA  6ADA               	clrf	fsr2h,c
  5846   003FAC  0E03               	movlw	3
  5847   003FAE  26D9               	addwf	fsr2l,f,c
  5848   003FB0  2ADE               	incf	postinc2,f,c
  5849   003FB2  0E00               	movlw	0
  5850   003FB4  22DD               	addwfc	postdec2,f,c
  5851   003FB6                     l1510:
  5852   003FB6  0012               	return		;funcret
  5853   003FB8                     __end_of_fputc:
  5854                           	callstack 0
  5855                           
  5856 ;; *************** function _putch *****************
  5857 ;; Defined at:
  5858 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  5859 ;; Parameters:    Size  Location     Type
  5860 ;;  c               1    wreg     unsigned char 
  5861 ;; Auto vars:     Size  Location     Type
  5862 ;;  c               1    0[COMRAM] unsigned char 
  5863 ;; Return value:  Size  Location     Type
  5864 ;;                  1    wreg      void 
  5865 ;; Registers used:
  5866 ;;		wreg
  5867 ;; Tracked objects:
  5868 ;;		On entry : 0/0
  5869 ;;		On exit  : 0/0
  5870 ;;		Unchanged: 0/0
  5871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5875 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5876 ;;Total ram usage:        0 bytes
  5877 ;; Hardware stack levels used: 1
  5878 ;; This function calls:
  5879 ;;		Nothing
  5880 ;; This function is called by:
  5881 ;;		_fputc
  5882 ;; This function uses a non-reentrant model
  5883 ;;
  5884                           
  5885                           	psect	text21
  5886   004B88                     __ptext21:
  5887                           	callstack 0
  5888   004B88                     _putch:
  5889                           	callstack 26
  5890   004B88  0012               	return		;funcret
  5891   004B8A                     __end_of_putch:
  5892                           	callstack 0
  5893                           
  5894 ;; *************** function _abs *****************
  5895 ;; Defined at:
  5896 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  5897 ;; Parameters:    Size  Location     Type
  5898 ;;  a               2    6[COMRAM] int 
  5899 ;; Auto vars:     Size  Location     Type
  5900 ;;		None
  5901 ;; Return value:  Size  Location     Type
  5902 ;;                  2    6[COMRAM] int 
  5903 ;; Registers used:
  5904 ;;		wreg, status,2, status,0
  5905 ;; Tracked objects:
  5906 ;;		On entry : 0/0
  5907 ;;		On exit  : 0/0
  5908 ;;		Unchanged: 0/0
  5909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5910 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5912 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5913 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5914 ;;Total ram usage:        4 bytes
  5915 ;; Hardware stack levels used: 1
  5916 ;; This function calls:
  5917 ;;		Nothing
  5918 ;; This function is called by:
  5919 ;;		_dtoa
  5920 ;; This function uses a non-reentrant model
  5921 ;;
  5922                           
  5923                           	psect	text22
  5924   004A80                     __ptext22:
  5925                           	callstack 0
  5926   004A80                     _abs:
  5927                           	callstack 26
  5928   004A80  BE08               	btfsc	(abs@a+1)^0,7,c
  5929   004A82  EF45  F025         	goto	u8031
  5930   004A86  EF47  F025         	goto	u8030
  5931   004A8A                     u8031:
  5932   004A8A  EF4D  F025         	goto	l1469
  5933   004A8E                     u8030:
  5934   004A8E  C007  F007         	movff	abs@a,?_abs
  5935   004A92  C008  F008         	movff	abs@a+1,?_abs+1
  5936   004A96  EF59  F025         	goto	l1472
  5937   004A9A                     l1469:
  5938   004A9A  C007  F009         	movff	abs@a,??_abs
  5939   004A9E  C008  F00A         	movff	abs@a+1,??_abs+1
  5940   004AA2  1E09               	comf	??_abs^0,f,c
  5941   004AA4  1E0A               	comf	(??_abs+1)^0,f,c
  5942   004AA6  4A09               	infsnz	??_abs^0,f,c
  5943   004AA8  2A0A               	incf	(??_abs+1)^0,f,c
  5944   004AAA  C009  F007         	movff	??_abs,?_abs
  5945   004AAE  C00A  F008         	movff	??_abs+1,?_abs+1
  5946   004AB2                     l1472:
  5947   004AB2  0012               	return		;funcret
  5948   004AB4                     __end_of_abs:
  5949                           	callstack 0
  5950                           
  5951 ;; *************** function ___awmod *****************
  5952 ;; Defined at:
  5953 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  5954 ;; Parameters:    Size  Location     Type
  5955 ;;  dividend        2    0[COMRAM] int 
  5956 ;;  divisor         2    2[COMRAM] int 
  5957 ;; Auto vars:     Size  Location     Type
  5958 ;;  sign            1    5[COMRAM] unsigned char 
  5959 ;;  counter         1    4[COMRAM] unsigned char 
  5960 ;; Return value:  Size  Location     Type
  5961 ;;                  2    0[COMRAM] int 
  5962 ;; Registers used:
  5963 ;;		wreg, status,2, status,0
  5964 ;; Tracked objects:
  5965 ;;		On entry : 0/0
  5966 ;;		On exit  : 0/0
  5967 ;;		Unchanged: 0/0
  5968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5969 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5970 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5972 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5973 ;;Total ram usage:        6 bytes
  5974 ;; Hardware stack levels used: 1
  5975 ;; This function calls:
  5976 ;;		Nothing
  5977 ;; This function is called by:
  5978 ;;		_dtoa
  5979 ;; This function uses a non-reentrant model
  5980 ;;
  5981                           
  5982                           	psect	text23
  5983   00406C                     __ptext23:
  5984                           	callstack 0
  5985   00406C                     ___awmod:
  5986                           	callstack 26
  5987   00406C  0E00               	movlw	0
  5988   00406E  6E06               	movwf	___awmod@sign^0,c
  5989   004070  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  5990   004072  EF3F  F020         	goto	u7790
  5991   004076  EF3D  F020         	goto	u7791
  5992   00407A                     u7791:
  5993   00407A  EF45  F020         	goto	l7283
  5994   00407E                     u7790:
  5995   00407E  6C01               	negf	___awmod@dividend^0,c
  5996   004080  1E02               	comf	(___awmod@dividend+1)^0,f,c
  5997   004082  B0D8               	btfsc	status,0,c
  5998   004084  2A02               	incf	(___awmod@dividend+1)^0,f,c
  5999   004086  0E01               	movlw	1
  6000   004088  6E06               	movwf	___awmod@sign^0,c
  6001   00408A                     l7283:
  6002   00408A  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  6003   00408C  EF4C  F020         	goto	u7800
  6004   004090  EF4A  F020         	goto	u7801
  6005   004094                     u7801:
  6006   004094  EF50  F020         	goto	l7287
  6007   004098                     u7800:
  6008   004098  6C03               	negf	___awmod@divisor^0,c
  6009   00409A  1E04               	comf	(___awmod@divisor+1)^0,f,c
  6010   00409C  B0D8               	btfsc	status,0,c
  6011   00409E  2A04               	incf	(___awmod@divisor+1)^0,f,c
  6012   0040A0                     l7287:
  6013   0040A0  5003               	movf	___awmod@divisor^0,w,c
  6014   0040A2  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  6015   0040A4  B4D8               	btfsc	status,2,c
  6016   0040A6  EF57  F020         	goto	u7811
  6017   0040AA  EF59  F020         	goto	u7810
  6018   0040AE                     u7811:
  6019   0040AE  EF7D  F020         	goto	l7303
  6020   0040B2                     u7810:
  6021   0040B2  0E01               	movlw	1
  6022   0040B4  6E05               	movwf	___awmod@counter^0,c
  6023   0040B6  EF61  F020         	goto	l7293
  6024   0040BA                     l7291:
  6025   0040BA  90D8               	bcf	status,0,c
  6026   0040BC  3603               	rlcf	___awmod@divisor^0,f,c
  6027   0040BE  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  6028   0040C0  2A05               	incf	___awmod@counter^0,f,c
  6029   0040C2                     l7293:
  6030   0040C2  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  6031   0040C4  EF66  F020         	goto	u7821
  6032   0040C8  EF68  F020         	goto	u7820
  6033   0040CC                     u7821:
  6034   0040CC  EF5D  F020         	goto	l7291
  6035   0040D0                     u7820:
  6036   0040D0                     l7295:
  6037   0040D0  5003               	movf	___awmod@divisor^0,w,c
  6038   0040D2  5C01               	subwf	___awmod@dividend^0,w,c
  6039   0040D4  5004               	movf	(___awmod@divisor+1)^0,w,c
  6040   0040D6  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  6041   0040D8  A0D8               	btfss	status,0,c
  6042   0040DA  EF71  F020         	goto	u7831
  6043   0040DE  EF73  F020         	goto	u7830
  6044   0040E2                     u7831:
  6045   0040E2  EF77  F020         	goto	l7299
  6046   0040E6                     u7830:
  6047   0040E6  5003               	movf	___awmod@divisor^0,w,c
  6048   0040E8  5E01               	subwf	___awmod@dividend^0,f,c
  6049   0040EA  5004               	movf	(___awmod@divisor+1)^0,w,c
  6050   0040EC  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  6051   0040EE                     l7299:
  6052   0040EE  90D8               	bcf	status,0,c
  6053   0040F0  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  6054   0040F2  3203               	rrcf	___awmod@divisor^0,f,c
  6055   0040F4  2E05               	decfsz	___awmod@counter^0,f,c
  6056   0040F6  EF68  F020         	goto	l7295
  6057   0040FA                     l7303:
  6058   0040FA  5006               	movf	___awmod@sign^0,w,c
  6059   0040FC  B4D8               	btfsc	status,2,c
  6060   0040FE  EF83  F020         	goto	u7841
  6061   004102  EF85  F020         	goto	u7840
  6062   004106                     u7841:
  6063   004106  EF89  F020         	goto	l7307
  6064   00410A                     u7840:
  6065   00410A  6C01               	negf	___awmod@dividend^0,c
  6066   00410C  1E02               	comf	(___awmod@dividend+1)^0,f,c
  6067   00410E  B0D8               	btfsc	status,0,c
  6068   004110  2A02               	incf	(___awmod@dividend+1)^0,f,c
  6069   004112                     l7307:
  6070   004112  C001  F001         	movff	___awmod@dividend,?___awmod
  6071   004116  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  6072   00411A  0012               	return		;funcret
  6073   00411C                     __end_of___awmod:
  6074                           	callstack 0
  6075                           
  6076 ;; *************** function ___awdiv *****************
  6077 ;; Defined at:
  6078 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  6079 ;; Parameters:    Size  Location     Type
  6080 ;;  dividend        2    0[COMRAM] int 
  6081 ;;  divisor         2    2[COMRAM] int 
  6082 ;; Auto vars:     Size  Location     Type
  6083 ;;  quotient        2    6[COMRAM] int 
  6084 ;;  sign            1    5[COMRAM] unsigned char 
  6085 ;;  counter         1    4[COMRAM] unsigned char 
  6086 ;; Return value:  Size  Location     Type
  6087 ;;                  2    0[COMRAM] int 
  6088 ;; Registers used:
  6089 ;;		wreg, status,2, status,0
  6090 ;; Tracked objects:
  6091 ;;		On entry : 0/0
  6092 ;;		On exit  : 0/0
  6093 ;;		Unchanged: 0/0
  6094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6095 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6096 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6098 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6099 ;;Total ram usage:        8 bytes
  6100 ;; Hardware stack levels used: 1
  6101 ;; This function calls:
  6102 ;;		Nothing
  6103 ;; This function is called by:
  6104 ;;		_dtoa
  6105 ;; This function uses a non-reentrant model
  6106 ;;
  6107                           
  6108                           	psect	text24
  6109   003E3A                     __ptext24:
  6110                           	callstack 0
  6111   003E3A                     ___awdiv:
  6112                           	callstack 26
  6113   003E3A  0E00               	movlw	0
  6114   003E3C  6E06               	movwf	___awdiv@sign^0,c
  6115   003E3E  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  6116   003E40  EF26  F01F         	goto	u7730
  6117   003E44  EF24  F01F         	goto	u7731
  6118   003E48                     u7731:
  6119   003E48  EF2C  F01F         	goto	l7239
  6120   003E4C                     u7730:
  6121   003E4C  6C03               	negf	___awdiv@divisor^0,c
  6122   003E4E  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  6123   003E50  B0D8               	btfsc	status,0,c
  6124   003E52  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  6125   003E54  0E01               	movlw	1
  6126   003E56  6E06               	movwf	___awdiv@sign^0,c
  6127   003E58                     l7239:
  6128   003E58  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  6129   003E5A  EF33  F01F         	goto	u7740
  6130   003E5E  EF31  F01F         	goto	u7741
  6131   003E62                     u7741:
  6132   003E62  EF39  F01F         	goto	l7245
  6133   003E66                     u7740:
  6134   003E66  6C01               	negf	___awdiv@dividend^0,c
  6135   003E68  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  6136   003E6A  B0D8               	btfsc	status,0,c
  6137   003E6C  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  6138   003E6E  0E01               	movlw	1
  6139   003E70  1A06               	xorwf	___awdiv@sign^0,f,c
  6140   003E72                     l7245:
  6141   003E72  0E00               	movlw	0
  6142   003E74  6E08               	movwf	(___awdiv@quotient+1)^0,c
  6143   003E76  0E00               	movlw	0
  6144   003E78  6E07               	movwf	___awdiv@quotient^0,c
  6145   003E7A  5003               	movf	___awdiv@divisor^0,w,c
  6146   003E7C  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  6147   003E7E  B4D8               	btfsc	status,2,c
  6148   003E80  EF44  F01F         	goto	u7751
  6149   003E84  EF46  F01F         	goto	u7750
  6150   003E88                     u7751:
  6151   003E88  EF6E  F01F         	goto	l7267
  6152   003E8C                     u7750:
  6153   003E8C  0E01               	movlw	1
  6154   003E8E  6E05               	movwf	___awdiv@counter^0,c
  6155   003E90  EF4E  F01F         	goto	l7253
  6156   003E94                     l7251:
  6157   003E94  90D8               	bcf	status,0,c
  6158   003E96  3603               	rlcf	___awdiv@divisor^0,f,c
  6159   003E98  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  6160   003E9A  2A05               	incf	___awdiv@counter^0,f,c
  6161   003E9C                     l7253:
  6162   003E9C  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  6163   003E9E  EF53  F01F         	goto	u7761
  6164   003EA2  EF55  F01F         	goto	u7760
  6165   003EA6                     u7761:
  6166   003EA6  EF4A  F01F         	goto	l7251
  6167   003EAA                     u7760:
  6168   003EAA                     l7255:
  6169   003EAA  90D8               	bcf	status,0,c
  6170   003EAC  3607               	rlcf	___awdiv@quotient^0,f,c
  6171   003EAE  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  6172   003EB0  5003               	movf	___awdiv@divisor^0,w,c
  6173   003EB2  5C01               	subwf	___awdiv@dividend^0,w,c
  6174   003EB4  5004               	movf	(___awdiv@divisor+1)^0,w,c
  6175   003EB6  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  6176   003EB8  A0D8               	btfss	status,0,c
  6177   003EBA  EF61  F01F         	goto	u7771
  6178   003EBE  EF63  F01F         	goto	u7770
  6179   003EC2                     u7771:
  6180   003EC2  EF68  F01F         	goto	l7263
  6181   003EC6                     u7770:
  6182   003EC6  5003               	movf	___awdiv@divisor^0,w,c
  6183   003EC8  5E01               	subwf	___awdiv@dividend^0,f,c
  6184   003ECA  5004               	movf	(___awdiv@divisor+1)^0,w,c
  6185   003ECC  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  6186   003ECE  8007               	bsf	___awdiv@quotient^0,0,c
  6187   003ED0                     l7263:
  6188   003ED0  90D8               	bcf	status,0,c
  6189   003ED2  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  6190   003ED4  3203               	rrcf	___awdiv@divisor^0,f,c
  6191   003ED6  2E05               	decfsz	___awdiv@counter^0,f,c
  6192   003ED8  EF55  F01F         	goto	l7255
  6193   003EDC                     l7267:
  6194   003EDC  5006               	movf	___awdiv@sign^0,w,c
  6195   003EDE  B4D8               	btfsc	status,2,c
  6196   003EE0  EF74  F01F         	goto	u7781
  6197   003EE4  EF76  F01F         	goto	u7780
  6198   003EE8                     u7781:
  6199   003EE8  EF7A  F01F         	goto	l7271
  6200   003EEC                     u7780:
  6201   003EEC  6C07               	negf	___awdiv@quotient^0,c
  6202   003EEE  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  6203   003EF0  B0D8               	btfsc	status,0,c
  6204   003EF2  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  6205   003EF4                     l7271:
  6206   003EF4  C007  F001         	movff	___awdiv@quotient,?___awdiv
  6207   003EF8  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  6208   003EFC  0012               	return		;funcret
  6209   003EFE                     __end_of___awdiv:
  6210                           	callstack 0
  6211                           
  6212 ;; *************** function _memset *****************
  6213 ;; Defined at:
  6214 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\memset.c"
  6215 ;; Parameters:    Size  Location     Type
  6216 ;;  dest            2    0[COMRAM] PTR void 
  6217 ;;		 -> arr(11), postfix(100), infix(100), 
  6218 ;;  c               2    2[COMRAM] int 
  6219 ;;  n               2    4[COMRAM] unsigned int 
  6220 ;; Auto vars:     Size  Location     Type
  6221 ;;  p               2    6[COMRAM] PTR unsigned char 
  6222 ;;		 -> arr(11), postfix(100), infix(100), 
  6223 ;; Return value:  Size  Location     Type
  6224 ;;                  2    0[COMRAM] PTR void 
  6225 ;; Registers used:
  6226 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6227 ;; Tracked objects:
  6228 ;;		On entry : 0/0
  6229 ;;		On exit  : 0/0
  6230 ;;		Unchanged: 0/0
  6231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6232 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6233 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6235 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6236 ;;Total ram usage:        8 bytes
  6237 ;; Hardware stack levels used: 1
  6238 ;; This function calls:
  6239 ;;		Nothing
  6240 ;; This function is called by:
  6241 ;;		_main
  6242 ;;		_convert_uint8_to_string
  6243 ;;		_convert_uint16_to_string
  6244 ;;		_convert_uint32_to_string
  6245 ;; This function uses a non-reentrant model
  6246 ;;
  6247                           
  6248                           	psect	text25
  6249   004936                     __ptext25:
  6250                           	callstack 0
  6251   004936                     _memset:
  6252                           	callstack 30
  6253   004936  C001  F007         	movff	memset@dest,memset@p
  6254   00493A  C002  F008         	movff	memset@dest+1,memset@p+1
  6255   00493E  EFA9  F024         	goto	l8157
  6256   004942                     l8153:
  6257   004942  C007  FFD9         	movff	memset@p,fsr2l
  6258   004946  C008  FFDA         	movff	memset@p+1,fsr2h
  6259   00494A  C003  FFDF         	movff	memset@c,indf2
  6260   00494E  4A07               	infsnz	memset@p^0,f,c
  6261   004950  2A08               	incf	(memset@p+1)^0,f,c
  6262   004952                     l8157:
  6263   004952  0605               	decf	memset@n^0,f,c
  6264   004954  A0D8               	btfss	status,0,c
  6265   004956  0606               	decf	(memset@n+1)^0,f,c
  6266   004958  2805               	incf	memset@n^0,w,c
  6267   00495A  E106               	bnz	u9051
  6268   00495C  2806               	incf	(memset@n+1)^0,w,c
  6269   00495E  A4D8               	btfss	status,2,c
  6270   004960  EFB4  F024         	goto	u9051
  6271   004964  EFB6  F024         	goto	u9050
  6272   004968                     u9051:
  6273   004968  EFA1  F024         	goto	l8153
  6274   00496C                     u9050:
  6275   00496C  0012               	return		;funcret
  6276   00496E                     __end_of_memset:
  6277                           	callstack 0
  6278                           
  6279 ;; *************** function _lcd_4bit_send_char_data_pos *****************
  6280 ;; Defined at:
  6281 ;;		line 119 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  6282 ;; Parameters:    Size  Location     Type
  6283 ;;  lcd             2   25[COMRAM] PTR const struct .
  6284 ;;		 -> my_lcd(6), 
  6285 ;;  row             1   27[COMRAM] unsigned char 
  6286 ;;  column          1   28[COMRAM] unsigned char 
  6287 ;;  data            1   29[COMRAM] unsigned char 
  6288 ;; Auto vars:     Size  Location     Type
  6289 ;;  ret             1   30[COMRAM] unsigned char 
  6290 ;; Return value:  Size  Location     Type
  6291 ;;                  1    wreg      unsigned char 
  6292 ;; Registers used:
  6293 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6294 ;; Tracked objects:
  6295 ;;		On entry : 0/0
  6296 ;;		On exit  : 0/0
  6297 ;;		Unchanged: 0/0
  6298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6299 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6300 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6302 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6303 ;;Total ram usage:        6 bytes
  6304 ;; Hardware stack levels used: 1
  6305 ;; Hardware stack levels required when called: 4
  6306 ;; This function calls:
  6307 ;;		_lcd_4bit_send_char_data
  6308 ;;		_lcd_4bit_set_cursor
  6309 ;; This function is called by:
  6310 ;;		_main
  6311 ;;		_lcd_4bit_send_custom_char
  6312 ;; This function uses a non-reentrant model
  6313 ;;
  6314                           
  6315                           	psect	text26
  6316   004778                     __ptext26:
  6317                           	callstack 0
  6318   004778                     _lcd_4bit_send_char_data_pos:
  6319                           	callstack 26
  6320   004778                     
  6321                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 121:     if(((void*)0) == lcd){
  6322   004778  501A               	movf	lcd_4bit_send_char_data_pos@lcd^0,w,c
  6323   00477A  101B               	iorwf	(lcd_4bit_send_char_data_pos@lcd+1)^0,w,c
  6324   00477C  A4D8               	btfss	status,2,c
  6325   00477E  EFC3  F023         	goto	u8981
  6326   004782  EFC5  F023         	goto	u8980
  6327   004786                     u8981:
  6328   004786  EFC9  F023         	goto	l8091
  6329   00478A                     u8980:
  6330   00478A                     
  6331                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 122:         ret = (Std_ReturnType)0x00;
  6332   00478A  0E00               	movlw	0
  6333   00478C  6E1F               	movwf	lcd_4bit_send_char_data_pos@ret^0,c
  6334                           
  6335                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 123:     }
  6336   00478E  EFDD  F023         	goto	l8093
  6337   004792                     l8091:
  6338                           
  6339                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 125:         ret = lcd_4bit_set_cursor(lcd, row, colum
      +                          n);
  6340   004792  C01A  F013         	movff	lcd_4bit_send_char_data_pos@lcd,lcd_4bit_set_cursor@lcd
  6341   004796  C01B  F014         	movff	lcd_4bit_send_char_data_pos@lcd+1,lcd_4bit_set_cursor@lcd+1
  6342   00479A  C01C  F015         	movff	lcd_4bit_send_char_data_pos@row,lcd_4bit_set_cursor@row
  6343   00479E  C01D  F016         	movff	lcd_4bit_send_char_data_pos@column,lcd_4bit_set_cursor@coulmn
  6344   0047A2  ECE3  F020         	call	_lcd_4bit_set_cursor	;wreg free
  6345   0047A6  6E1F               	movwf	lcd_4bit_send_char_data_pos@ret^0,c
  6346                           
  6347                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 126:         ret = lcd_4bit_send_char_data(lcd, data);
  6348   0047A8  C01A  F00F         	movff	lcd_4bit_send_char_data_pos@lcd,lcd_4bit_send_char_data@lcd
  6349   0047AC  C01B  F010         	movff	lcd_4bit_send_char_data_pos@lcd+1,lcd_4bit_send_char_data@lcd+1
  6350   0047B0  C01E  F011         	movff	lcd_4bit_send_char_data_pos@data,lcd_4bit_send_char_data@data
  6351   0047B4  EC62  F022         	call	_lcd_4bit_send_char_data	;wreg free
  6352   0047B8  6E1F               	movwf	lcd_4bit_send_char_data_pos@ret^0,c
  6353   0047BA                     l8093:
  6354                           
  6355                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 128:     return ret;
  6356   0047BA  501F               	movf	lcd_4bit_send_char_data_pos@ret^0,w,c
  6357   0047BC  0012               	return		;funcret
  6358   0047BE                     __end_of_lcd_4bit_send_char_data_pos:
  6359                           	callstack 0
  6360                           
  6361 ;; *************** function _keypad_get_value *****************
  6362 ;; Defined at:
  6363 ;;		line 59 in file "ECU_Layer/KeyPad/ecu_keypad.c"
  6364 ;; Parameters:    Size  Location     Type
  6365 ;;  _keypad_obj     2   10[COMRAM] PTR const struct .
  6366 ;;		 -> pad1(10), 
  6367 ;;  value           1   12[COMRAM] PTR unsigned char 
  6368 ;;		 -> val(1), 
  6369 ;; Auto vars:     Size  Location     Type
  6370 ;;  l_columns_co    1   19[COMRAM] unsigned char 
  6371 ;;  l_rows_count    1   18[COMRAM] unsigned char 
  6372 ;;  l_counter       1   17[COMRAM] unsigned char 
  6373 ;;  column_logic    1   16[COMRAM] unsigned char 
  6374 ;;  ret             1   15[COMRAM] unsigned char 
  6375 ;; Return value:  Size  Location     Type
  6376 ;;                  1    wreg      unsigned char 
  6377 ;; Registers used:
  6378 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6379 ;; Tracked objects:
  6380 ;;		On entry : 0/0
  6381 ;;		On exit  : 0/0
  6382 ;;		Unchanged: 0/0
  6383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6384 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6385 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6386 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6387 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6388 ;;Total ram usage:       10 bytes
  6389 ;; Hardware stack levels used: 1
  6390 ;; Hardware stack levels required when called: 1
  6391 ;; This function calls:
  6392 ;;		_gpio_pin_read_logic
  6393 ;;		_gpio_pin_write_logic
  6394 ;; This function is called by:
  6395 ;;		_main
  6396 ;; This function uses a non-reentrant model
  6397 ;;
  6398                           
  6399                           	psect	text27
  6400   003A2A                     __ptext27:
  6401                           	callstack 0
  6402   003A2A                     _keypad_get_value:
  6403                           	callstack 29
  6404   003A2A                     
  6405                           ;ECU_Layer/KeyPad/ecu_keypad.c: 61:     uint8 l_rows_counter = 0, l_columns_counter = 0,
      +                           l_counter = 0;
  6406   003A2A  0E00               	movlw	0
  6407   003A2C  6E13               	movwf	keypad_get_value@l_rows_counter^0,c
  6408   003A2E  0E00               	movlw	0
  6409   003A30  6E14               	movwf	keypad_get_value@l_columns_counter^0,c
  6410   003A32  0E00               	movlw	0
  6411   003A34  6E12               	movwf	keypad_get_value@l_counter^0,c
  6412                           
  6413                           ;ECU_Layer/KeyPad/ecu_keypad.c: 62:     uint8 column_logic = 0;
  6414   003A36  0E00               	movlw	0
  6415   003A38  6E11               	movwf	keypad_get_value@column_logic^0,c
  6416   003A3A                     
  6417                           ;ECU_Layer/KeyPad/ecu_keypad.c: 63:     if((((void*)0) == _keypad_obj) || (((void*)0) ==
      +                           value)){
  6418   003A3A  500B               	movf	keypad_get_value@_keypad_obj^0,w,c
  6419   003A3C  100C               	iorwf	(keypad_get_value@_keypad_obj+1)^0,w,c
  6420   003A3E  B4D8               	btfsc	status,2,c
  6421   003A40  EF24  F01D         	goto	u9091
  6422   003A44  EF26  F01D         	goto	u9090
  6423   003A48                     u9091:
  6424   003A48  EF2E  F01D         	goto	l8211
  6425   003A4C                     u9090:
  6426   003A4C  500D               	movf	keypad_get_value@value^0,w,c
  6427   003A4E  A4D8               	btfss	status,2,c
  6428   003A50  EF2C  F01D         	goto	u9101
  6429   003A54  EF2E  F01D         	goto	u9100
  6430   003A58                     u9101:
  6431   003A58  EF32  F01D         	goto	l8213
  6432   003A5C                     u9100:
  6433   003A5C                     l8211:
  6434                           
  6435                           ;ECU_Layer/KeyPad/ecu_keypad.c: 64:         ret = (Std_ReturnType)0x00;
  6436   003A5C  0E00               	movlw	0
  6437   003A5E  6E10               	movwf	keypad_get_value@ret^0,c
  6438                           
  6439                           ;ECU_Layer/KeyPad/ecu_keypad.c: 65:     }
  6440   003A60  EF97  F01D         	goto	l8255
  6441   003A64                     l8213:
  6442                           
  6443                           ;ECU_Layer/KeyPad/ecu_keypad.c: 67:         for(l_rows_counter=0; l_rows_counter<4; l_ro
      +                          ws_counter++){
  6444   003A64  0E00               	movlw	0
  6445   003A66  6E13               	movwf	keypad_get_value@l_rows_counter^0,c
  6446   003A68                     l8219:
  6447                           
  6448                           ;ECU_Layer/KeyPad/ecu_keypad.c: 68:             for(l_counter=0; l_counter<4; l_counter+
      +                          +){
  6449   003A68  0E00               	movlw	0
  6450   003A6A  6E12               	movwf	keypad_get_value@l_counter^0,c
  6451   003A6C                     l8225:
  6452   003A6C  5012               	movf	keypad_get_value@l_counter^0,w,c
  6453   003A6E  240B               	addwf	keypad_get_value@_keypad_obj^0,w,c
  6454   003A70  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
  6455   003A72  0E00               	movlw	0
  6456   003A74  200C               	addwfc	(keypad_get_value@_keypad_obj+1)^0,w,c
  6457   003A76  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  6458   003A78  0E00               	movlw	0
  6459   003A7A  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  6460   003A7C  EC7F  F01C         	call	_gpio_pin_write_logic	;wreg free
  6461   003A80                     
  6462                           ;ECU_Layer/KeyPad/ecu_keypad.c: 70:             }
  6463   003A80  2A12               	incf	keypad_get_value@l_counter^0,f,c
  6464   003A82  0E03               	movlw	3
  6465   003A84  6412               	cpfsgt	keypad_get_value@l_counter^0,c
  6466   003A86  EF47  F01D         	goto	u9111
  6467   003A8A  EF49  F01D         	goto	u9110
  6468   003A8E                     u9111:
  6469   003A8E  EF36  F01D         	goto	l8225
  6470   003A92                     u9110:
  6471   003A92                     
  6472                           ;ECU_Layer/KeyPad/ecu_keypad.c: 71:             gpio_pin_write_logic(&(_keypad_obj->keyp
      +                          ad_row_pins[l_rows_counter]), GPIO_HIGH);
  6473   003A92  5013               	movf	keypad_get_value@l_rows_counter^0,w,c
  6474   003A94  240B               	addwf	keypad_get_value@_keypad_obj^0,w,c
  6475   003A96  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
  6476   003A98  0E00               	movlw	0
  6477   003A9A  200C               	addwfc	(keypad_get_value@_keypad_obj+1)^0,w,c
  6478   003A9C  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  6479   003A9E  0E01               	movlw	1
  6480   003AA0  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  6481   003AA2  EC7F  F01C         	call	_gpio_pin_write_logic	;wreg free
  6482   003AA6                     
  6483                           ;ECU_Layer/KeyPad/ecu_keypad.c: 72:             _delay((unsigned long)((10)*(4000000UL/4
      +                          000.0)));
  6484   003AA6  0E0D               	movlw	13
  6485   003AA8  6E0E               	movwf	??_keypad_get_value^0,c
  6486   003AAA  0EFC               	movlw	252
  6487   003AAC                     u9927:
  6488   003AAC  2EE8               	decfsz	wreg,f,c
  6489   003AAE  D7FE               	bra	u9927
  6490   003AB0  2E0E               	decfsz	??_keypad_get_value^0,f,c
  6491   003AB2  D7FC               	bra	u9927
  6492   003AB4                     
  6493                           ;ECU_Layer/KeyPad/ecu_keypad.c: 73:             for(l_columns_counter=0; l_columns_count
      +                          er<6; l_columns_counter++){
  6494   003AB4  0E00               	movlw	0
  6495   003AB6  6E14               	movwf	keypad_get_value@l_columns_counter^0,c
  6496   003AB8                     l8241:
  6497                           
  6498                           ;ECU_Layer/KeyPad/ecu_keypad.c: 74:                 ret = gpio_pin_read_logic(&(_keypad_
      +                          obj->keypad_columns_pins[l_columns_counter]), &column_logic);
  6499   003AB8  5014               	movf	keypad_get_value@l_columns_counter^0,w,c
  6500   003ABA  240B               	addwf	keypad_get_value@_keypad_obj^0,w,c
  6501   003ABC  6E0E               	movwf	??_keypad_get_value^0,c
  6502   003ABE  0E00               	movlw	0
  6503   003AC0  200C               	addwfc	(keypad_get_value@_keypad_obj+1)^0,w,c
  6504   003AC2  6E0F               	movwf	(??_keypad_get_value+1)^0,c
  6505   003AC4  0E04               	movlw	4
  6506   003AC6  240E               	addwf	??_keypad_get_value^0,w,c
  6507   003AC8  6E01               	movwf	gpio_pin_read_logic@_pin_config^0,c
  6508   003ACA  0E00               	movlw	0
  6509   003ACC  200F               	addwfc	(??_keypad_get_value+1)^0,w,c
  6510   003ACE  6E02               	movwf	(gpio_pin_read_logic@_pin_config+1)^0,c
  6511   003AD0  0E11               	movlw	low keypad_get_value@column_logic
  6512   003AD2  6E03               	movwf	gpio_pin_read_logic@logic^0,c
  6513   003AD4  ECDC  F01F         	call	_gpio_pin_read_logic	;wreg free
  6514   003AD8  6E10               	movwf	keypad_get_value@ret^0,c
  6515   003ADA                     
  6516                           ;ECU_Layer/KeyPad/ecu_keypad.c: 75:                 if(GPIO_HIGH == column_logic){
  6517   003ADA  0411               	decf	keypad_get_value@column_logic^0,w,c
  6518   003ADC  A4D8               	btfss	status,2,c
  6519   003ADE  EF73  F01D         	goto	u9121
  6520   003AE2  EF75  F01D         	goto	u9120
  6521   003AE6                     u9121:
  6522   003AE6  EF85  F01D         	goto	l8247
  6523   003AEA                     u9120:
  6524   003AEA                     
  6525                           ;ECU_Layer/KeyPad/ecu_keypad.c: 76:                     *value = btn_values[l_rows_count
      +                          er][l_columns_counter];
  6526   003AEA  5013               	movf	keypad_get_value@l_rows_counter^0,w,c
  6527   003AEC  0D06               	mullw	6
  6528   003AEE  50F3               	movf	243,w,c
  6529   003AF0  0F01               	addlw	low _btn_values
  6530   003AF2  2414               	addwf	keypad_get_value@l_columns_counter^0,w,c
  6531   003AF4  6E0E               	movwf	??_keypad_get_value^0,c
  6532   003AF6  C00E  FFF6         	movff	??_keypad_get_value,tblptrl
  6533   003AFA                     	if	1	;There is more than 1 active tblptr byte
  6534   003AFA  0E10               	movlw	high __smallconst
  6535   003AFC  6EF7               	movwf	tblptrh,c
  6536   003AFE                     	endif
  6537   003AFE                     	if	0	;tblptru may be non-zero
  6538   003AFE                     	endif
  6539   003AFE                     	if	0	;tblptru may be non-zero
  6540   003AFE                     	endif
  6541   003AFE  500D               	movf	keypad_get_value@value^0,w,c
  6542   003B00  6ED9               	movwf	fsr2l,c
  6543   003B02  6ADA               	clrf	fsr2h,c
  6544   003B04  0008               	tblrd		*
  6545   003B06  CFF5 FFDF          	movff	tablat,indf2
  6546   003B0A                     l8247:
  6547                           
  6548                           ;ECU_Layer/KeyPad/ecu_keypad.c: 78:             }
  6549   003B0A  2A14               	incf	keypad_get_value@l_columns_counter^0,f,c
  6550   003B0C  0E05               	movlw	5
  6551   003B0E  6414               	cpfsgt	keypad_get_value@l_columns_counter^0,c
  6552   003B10  EF8C  F01D         	goto	u9131
  6553   003B14  EF8E  F01D         	goto	u9130
  6554   003B18                     u9131:
  6555   003B18  EF5C  F01D         	goto	l8241
  6556   003B1C                     u9130:
  6557   003B1C                     
  6558                           ;ECU_Layer/KeyPad/ecu_keypad.c: 79:         }
  6559   003B1C  2A13               	incf	keypad_get_value@l_rows_counter^0,f,c
  6560   003B1E  0E03               	movlw	3
  6561   003B20  6413               	cpfsgt	keypad_get_value@l_rows_counter^0,c
  6562   003B22  EF95  F01D         	goto	u9141
  6563   003B26  EF97  F01D         	goto	u9140
  6564   003B2A                     u9141:
  6565   003B2A  EF34  F01D         	goto	l8219
  6566   003B2E                     u9140:
  6567   003B2E                     l8255:
  6568                           
  6569                           ;ECU_Layer/KeyPad/ecu_keypad.c: 81:     return ret;
  6570   003B2E  5010               	movf	keypad_get_value@ret^0,w,c
  6571   003B30  0012               	return		;funcret
  6572   003B32                     __end_of_keypad_get_value:
  6573                           	callstack 0
  6574                           
  6575 ;; *************** function _gpio_pin_read_logic *****************
  6576 ;; Defined at:
  6577 ;;		line 104 in file "MCAL_Layer/GPIO/hal_gpio.c"
  6578 ;; Parameters:    Size  Location     Type
  6579 ;;  _pin_config     2    0[COMRAM] PTR const struct .
  6580 ;;		 -> pad1$keypad_columns_pins(6), pad1(10), 
  6581 ;;  logic           1    2[COMRAM] PTR enum E2978
  6582 ;;		 -> keypad_get_value@column_logic(1), button_read_state@Pin_Logic_Status(1), 
  6583 ;; Auto vars:     Size  Location     Type
  6584 ;;  ret             1    8[COMRAM] unsigned char 
  6585 ;; Return value:  Size  Location     Type
  6586 ;;                  1    wreg      unsigned char 
  6587 ;; Registers used:
  6588 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6589 ;; Tracked objects:
  6590 ;;		On entry : 0/0
  6591 ;;		On exit  : 0/0
  6592 ;;		Unchanged: 0/0
  6593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6594 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6595 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6596 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6597 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6598 ;;Total ram usage:        9 bytes
  6599 ;; Hardware stack levels used: 1
  6600 ;; This function calls:
  6601 ;;		Nothing
  6602 ;; This function is called by:
  6603 ;;		_keypad_get_value
  6604 ;;		_button_read_state
  6605 ;; This function uses a non-reentrant model
  6606 ;;
  6607                           
  6608                           	psect	text28
  6609   003FB8                     __ptext28:
  6610                           	callstack 0
  6611   003FB8                     _gpio_pin_read_logic:
  6612                           	callstack 29
  6613   003FB8                     
  6614                           ;MCAL_Layer/GPIO/hal_gpio.c: 105:     Std_ReturnType ret = (Std_ReturnType)0x01;
  6615   003FB8  0E01               	movlw	1
  6616   003FBA  6E09               	movwf	gpio_pin_read_logic@ret^0,c
  6617   003FBC                     
  6618                           ;MCAL_Layer/GPIO/hal_gpio.c: 106:     if(((void*)0) == _pin_config || ((void*)0) == logi
      +                          c || _pin_config->pin > 8 -1){
  6619   003FBC  5001               	movf	gpio_pin_read_logic@_pin_config^0,w,c
  6620   003FBE  1002               	iorwf	(gpio_pin_read_logic@_pin_config+1)^0,w,c
  6621   003FC0  B4D8               	btfsc	status,2,c
  6622   003FC2  EFE5  F01F         	goto	u8741
  6623   003FC6  EFE7  F01F         	goto	u8740
  6624   003FCA                     u8741:
  6625   003FCA  EF00  F020         	goto	l7909
  6626   003FCE                     u8740:
  6627   003FCE  5003               	movf	gpio_pin_read_logic@logic^0,w,c
  6628   003FD0  B4D8               	btfsc	status,2,c
  6629   003FD2  EFED  F01F         	goto	u8751
  6630   003FD6  EFEF  F01F         	goto	u8750
  6631   003FDA                     u8751:
  6632   003FDA  EF00  F020         	goto	l7909
  6633   003FDE                     u8750:
  6634   003FDE  C001  FFD9         	movff	gpio_pin_read_logic@_pin_config,fsr2l
  6635   003FE2  C002  FFDA         	movff	gpio_pin_read_logic@_pin_config+1,fsr2h
  6636   003FE6  30DF               	rrcf	223,w,c
  6637   003FE8  32E8               	rrcf	wreg,f,c
  6638   003FEA  32E8               	rrcf	wreg,f,c
  6639   003FEC  0B07               	andlw	7
  6640   003FEE  6E04               	movwf	??_gpio_pin_read_logic^0,c
  6641   003FF0  0E07               	movlw	7
  6642   003FF2  6404               	cpfsgt	??_gpio_pin_read_logic^0,c
  6643   003FF4  EFFE  F01F         	goto	u8761
  6644   003FF8  EF00  F020         	goto	u8760
  6645   003FFC                     u8761:
  6646   003FFC  EF04  F020         	goto	l7911
  6647   004000                     u8760:
  6648   004000                     l7909:
  6649                           
  6650                           ;MCAL_Layer/GPIO/hal_gpio.c: 107:         ret = (Std_ReturnType)0x00;
  6651   004000  0E00               	movlw	0
  6652   004002  6E09               	movwf	gpio_pin_read_logic@ret^0,c
  6653                           
  6654                           ;MCAL_Layer/GPIO/hal_gpio.c: 108:     }
  6655   004004  EF34  F020         	goto	l7913
  6656   004008                     l7911:
  6657                           
  6658                           ;MCAL_Layer/GPIO/hal_gpio.c: 110:         *logic = ((*port_registers[_pin_config->port] 
      +                          >> _pin_config->pin) & (uint8)1);
  6659   004008  5003               	movf	gpio_pin_read_logic@logic^0,w,c
  6660   00400A  6ED9               	movwf	fsr2l,c
  6661   00400C  6ADA               	clrf	fsr2h,c
  6662   00400E  C001  FFE1         	movff	gpio_pin_read_logic@_pin_config,fsr1l
  6663   004012  C002  FFE2         	movff	gpio_pin_read_logic@_pin_config+1,fsr1h
  6664   004016  30E7               	rrcf	231,w,c
  6665   004018  32E8               	rrcf	wreg,f,c
  6666   00401A  32E8               	rrcf	wreg,f,c
  6667   00401C  0B07               	andlw	7
  6668   00401E  6E04               	movwf	??_gpio_pin_read_logic^0,c
  6669   004020  C001  FFE1         	movff	gpio_pin_read_logic@_pin_config,fsr1l
  6670   004024  C002  FFE2         	movff	gpio_pin_read_logic@_pin_config+1,fsr1h
  6671   004028  50E7               	movf	231,w,c
  6672   00402A  0B07               	andlw	7
  6673   00402C  6E05               	movwf	(??_gpio_pin_read_logic+1)^0,c
  6674   00402E  5005               	movf	(??_gpio_pin_read_logic+1)^0,w,c
  6675   004030  0D02               	mullw	2
  6676   004032  0E6F               	movlw	low _port_registers
  6677   004034  24F3               	addwf	243,w,c
  6678   004036  6EE1               	movwf	fsr1l,c
  6679   004038  0E01               	movlw	high _port_registers
  6680   00403A  20F4               	addwfc	prodh,w,c
  6681   00403C  6EE2               	movwf	fsr1h,c
  6682   00403E  CFE6 F006          	movff	postinc1,??_gpio_pin_read_logic+2
  6683   004042  CFE5 F007          	movff	postdec1,??_gpio_pin_read_logic+3
  6684   004046  C006  FFE1         	movff	??_gpio_pin_read_logic+2,fsr1l
  6685   00404A  C007  FFE2         	movff	??_gpio_pin_read_logic+3,fsr1h
  6686   00404E  50E7               	movf	indf1,w,c
  6687   004050  6E08               	movwf	(??_gpio_pin_read_logic+4)^0,c
  6688   004052  2A04               	incf	??_gpio_pin_read_logic^0,f,c
  6689   004054  EF2E  F020         	goto	u8774
  6690   004058                     u8775:
  6691   004058  90D8               	bcf	status,0,c
  6692   00405A  3208               	rrcf	(??_gpio_pin_read_logic+4)^0,f,c
  6693   00405C                     u8774:
  6694   00405C  2E04               	decfsz	??_gpio_pin_read_logic^0,f,c
  6695   00405E  EF2C  F020         	goto	u8775
  6696   004062  5008               	movf	(??_gpio_pin_read_logic+4)^0,w,c
  6697   004064  0B01               	andlw	1
  6698   004066  6EDF               	movwf	indf2,c
  6699   004068                     l7913:
  6700                           
  6701                           ;MCAL_Layer/GPIO/hal_gpio.c: 112:     return ret;
  6702   004068  5009               	movf	gpio_pin_read_logic@ret^0,w,c
  6703   00406A  0012               	return		;funcret
  6704   00406C                     __end_of_gpio_pin_read_logic:
  6705                           	callstack 0
  6706                           
  6707 ;; *************** function _infixToPostfix *****************
  6708 ;; Defined at:
  6709 ;;		line 72 in file "Algorithms/Infix_to_postfix/infix_to_post.c"
  6710 ;; Parameters:    Size  Location     Type
  6711 ;;  infix           2    4[COMRAM] PTR const unsigned char 
  6712 ;;		 -> infix(100), 
  6713 ;;  postfix         2    6[COMRAM] PTR unsigned char 
  6714 ;;		 -> postfix(100), 
  6715 ;; Auto vars:     Size  Location     Type
  6716 ;;  current         1   11[COMRAM] unsigned char 
  6717 ;;  operatorStac  102   16[COMRAM] struct .
  6718 ;;  j               2   14[COMRAM] int 
  6719 ;;  i               2   12[COMRAM] int 
  6720 ;; Return value:  Size  Location     Type
  6721 ;;                  1    wreg      void 
  6722 ;; Registers used:
  6723 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6724 ;; Tracked objects:
  6725 ;;		On entry : 0/0
  6726 ;;		On exit  : 0/0
  6727 ;;		Unchanged: 0/0
  6728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6729 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6730 ;;      Locals:       107       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6731 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6732 ;;      Totals:       114       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6733 ;;Total ram usage:      114 bytes
  6734 ;; Hardware stack levels used: 1
  6735 ;; Hardware stack levels required when called: 1
  6736 ;; This function calls:
  6737 ;;		_check_digit
  6738 ;;		_initialize
  6739 ;;		_pop
  6740 ;;		_precedence
  6741 ;;		_push
  6742 ;; This function is called by:
  6743 ;;		_main
  6744 ;; This function uses a non-reentrant model
  6745 ;;
  6746                           
  6747                           	psect	text29
  6748   0032C4                     __ptext29:
  6749                           	callstack 0
  6750   0032C4                     _infixToPostfix:
  6751                           	callstack 29
  6752   0032C4                     
  6753                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 73:     stack_i operatorStack;;Algorithms/
      +                          Infix_to_postfix/infix_to_post.c: 74:     initialize(&operatorStack);
  6754   0032C4  0E11               	movlw	low infixToPostfix@operatorStack
  6755   0032C6  6E01               	movwf	initialize@stack^0,c
  6756   0032C8  ECAD  F025         	call	_initialize	;wreg free
  6757   0032CC                     
  6758                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 76:     int i = 0;
  6759   0032CC  0E00               	movlw	0
  6760   0032CE  6E0E               	movwf	(infixToPostfix@i+1)^0,c
  6761   0032D0  0E00               	movlw	0
  6762   0032D2  6E0D               	movwf	infixToPostfix@i^0,c
  6763   0032D4                     
  6764                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 77:     int j = 0;
  6765   0032D4  0E00               	movlw	0
  6766   0032D6  6E10               	movwf	(infixToPostfix@j+1)^0,c
  6767   0032D8  0E00               	movlw	0
  6768   0032DA  6E0F               	movwf	infixToPostfix@j^0,c
  6769                           
  6770                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 78:     while (infix[i] != '\0') {
  6771   0032DC  EF19  F01A         	goto	l8343
  6772   0032E0                     l8307:
  6773                           
  6774                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 79:         char current = infix[i];
  6775   0032E0  500D               	movf	infixToPostfix@i^0,w,c
  6776   0032E2  2405               	addwf	infixToPostfix@infix^0,w,c
  6777   0032E4  6ED9               	movwf	fsr2l,c
  6778   0032E6  500E               	movf	(infixToPostfix@i+1)^0,w,c
  6779   0032E8  2006               	addwfc	(infixToPostfix@infix+1)^0,w,c
  6780   0032EA  6EDA               	movwf	fsr2h,c
  6781   0032EC  50DF               	movf	indf2,w,c
  6782   0032EE  6E0C               	movwf	infixToPostfix@current^0,c
  6783   0032F0                     
  6784                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 81:         if (current == ' ') {
  6785   0032F0  0E20               	movlw	32
  6786   0032F2  180C               	xorwf	infixToPostfix@current^0,w,c
  6787   0032F4  A4D8               	btfss	status,2,c
  6788   0032F6  EF7F  F019         	goto	u9171
  6789   0032FA  EF81  F019         	goto	u9170
  6790   0032FE                     u9171:
  6791   0032FE  EF85  F019         	goto	l8313
  6792   003302                     u9170:
  6793   003302                     l8311:
  6794                           
  6795                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 82:             i++;
  6796   003302  4A0D               	infsnz	infixToPostfix@i^0,f,c
  6797   003304  2A0E               	incf	(infixToPostfix@i+1)^0,f,c
  6798                           
  6799                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 83:             continue;
  6800   003306  EF19  F01A         	goto	l8343
  6801   00330A                     l8313:
  6802                           
  6803                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 86:         if (check_digit(current) || cu
      +                          rrent == '.') {
  6804   00330A  500C               	movf	infixToPostfix@current^0,w,c
  6805   00330C  ECD3  F024         	call	_check_digit
  6806   003310  5001               	movf	?_check_digit^0,w,c
  6807   003312  1002               	iorwf	(?_check_digit+1)^0,w,c
  6808   003314  A4D8               	btfss	status,2,c
  6809   003316  EF8F  F019         	goto	u9181
  6810   00331A  EF91  F019         	goto	u9180
  6811   00331E                     u9181:
  6812   00331E  EFAE  F019         	goto	l8323
  6813   003322                     u9180:
  6814   003322  0E2E               	movlw	46
  6815   003324  180C               	xorwf	infixToPostfix@current^0,w,c
  6816   003326  A4D8               	btfss	status,2,c
  6817   003328  EF98  F019         	goto	u9191
  6818   00332C  EF9A  F019         	goto	u9190
  6819   003330                     u9191:
  6820   003330  EFEA  F019         	goto	l8335
  6821   003334                     u9190:
  6822   003334  EFAE  F019         	goto	l8323
  6823   003338                     l8317:
  6824                           
  6825                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 88:                 postfix[j++] = infix[i
      +                          ++];
  6826   003338  500D               	movf	infixToPostfix@i^0,w,c
  6827   00333A  2405               	addwf	infixToPostfix@infix^0,w,c
  6828   00333C  6ED9               	movwf	fsr2l,c
  6829   00333E  500E               	movf	(infixToPostfix@i+1)^0,w,c
  6830   003340  2006               	addwfc	(infixToPostfix@infix+1)^0,w,c
  6831   003342  6EDA               	movwf	fsr2h,c
  6832   003344  500F               	movf	infixToPostfix@j^0,w,c
  6833   003346  2407               	addwf	infixToPostfix@postfix^0,w,c
  6834   003348  6EE1               	movwf	fsr1l,c
  6835   00334A  5010               	movf	(infixToPostfix@j+1)^0,w,c
  6836   00334C  2008               	addwfc	(infixToPostfix@postfix+1)^0,w,c
  6837   00334E  6EE2               	movwf	fsr1h,c
  6838   003350  CFDF FFE7          	movff	indf2,indf1
  6839   003354  4A0D               	infsnz	infixToPostfix@i^0,f,c
  6840   003356  2A0E               	incf	(infixToPostfix@i+1)^0,f,c
  6841   003358  4A0F               	infsnz	infixToPostfix@j^0,f,c
  6842   00335A  2A10               	incf	(infixToPostfix@j+1)^0,f,c
  6843   00335C                     l8323:
  6844                           
  6845                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 87:             while (check_digit(infix[i
      +                          ]) || infix[i] == '.') {
  6846   00335C  500D               	movf	infixToPostfix@i^0,w,c
  6847   00335E  2405               	addwf	infixToPostfix@infix^0,w,c
  6848   003360  6ED9               	movwf	fsr2l,c
  6849   003362  500E               	movf	(infixToPostfix@i+1)^0,w,c
  6850   003364  2006               	addwfc	(infixToPostfix@infix+1)^0,w,c
  6851   003366  6EDA               	movwf	fsr2h,c
  6852   003368  50DF               	movf	indf2,w,c
  6853   00336A  ECD3  F024         	call	_check_digit
  6854   00336E  5001               	movf	?_check_digit^0,w,c
  6855   003370  1002               	iorwf	(?_check_digit+1)^0,w,c
  6856   003372  A4D8               	btfss	status,2,c
  6857   003374  EFBE  F019         	goto	u9201
  6858   003378  EFC0  F019         	goto	u9200
  6859   00337C                     u9201:
  6860   00337C  EF9C  F019         	goto	l8317
  6861   003380                     u9200:
  6862   003380  500D               	movf	infixToPostfix@i^0,w,c
  6863   003382  2405               	addwf	infixToPostfix@infix^0,w,c
  6864   003384  6ED9               	movwf	fsr2l,c
  6865   003386  500E               	movf	(infixToPostfix@i+1)^0,w,c
  6866   003388  2006               	addwfc	(infixToPostfix@infix+1)^0,w,c
  6867   00338A  6EDA               	movwf	fsr2h,c
  6868   00338C  0E2E               	movlw	46
  6869   00338E  18DE               	xorwf	postinc2,w,c
  6870   003390  B4D8               	btfsc	status,2,c
  6871   003392  EFCD  F019         	goto	u9211
  6872   003396  EFCF  F019         	goto	u9210
  6873   00339A                     u9211:
  6874   00339A  EF9C  F019         	goto	l8317
  6875   00339E                     u9210:
  6876   00339E                     
  6877                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 90:             postfix[j++] = ' ';
  6878   00339E  500F               	movf	infixToPostfix@j^0,w,c
  6879   0033A0  2407               	addwf	infixToPostfix@postfix^0,w,c
  6880   0033A2  6ED9               	movwf	fsr2l,c
  6881   0033A4  5010               	movf	(infixToPostfix@j+1)^0,w,c
  6882   0033A6  2008               	addwfc	(infixToPostfix@postfix+1)^0,w,c
  6883   0033A8  6EDA               	movwf	fsr2h,c
  6884   0033AA  0E20               	movlw	32
  6885   0033AC  6EDF               	movwf	indf2,c
  6886   0033AE  4A0F               	infsnz	infixToPostfix@j^0,f,c
  6887   0033B0  2A10               	incf	(infixToPostfix@j+1)^0,f,c
  6888                           
  6889                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 91:         } else {
  6890   0033B2  EF19  F01A         	goto	l8343
  6891   0033B6                     l8331:
  6892                           
  6893                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 93:                 postfix[j++] = pop(&op
      +                          eratorStack);
  6894   0033B6  0E11               	movlw	low infixToPostfix@operatorStack
  6895   0033B8  6E01               	movwf	pop@stack^0,c
  6896   0033BA  EC9A  F025         	call	_pop	;wreg free
  6897   0033BE  6E09               	movwf	??_infixToPostfix^0,c
  6898   0033C0  500F               	movf	infixToPostfix@j^0,w,c
  6899   0033C2  2407               	addwf	infixToPostfix@postfix^0,w,c
  6900   0033C4  6ED9               	movwf	fsr2l,c
  6901   0033C6  5010               	movf	(infixToPostfix@j+1)^0,w,c
  6902   0033C8  2008               	addwfc	(infixToPostfix@postfix+1)^0,w,c
  6903   0033CA  6EDA               	movwf	fsr2h,c
  6904   0033CC  C009  FFDF         	movff	??_infixToPostfix,indf2
  6905   0033D0  4A0F               	infsnz	infixToPostfix@j^0,f,c
  6906   0033D2  2A10               	incf	(infixToPostfix@j+1)^0,f,c
  6907   0033D4                     l8335:
  6908                           
  6909                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 92:             while (operatorStack.top !
      +                          = -1 && precedence(current) <= precedence(operatorStack.data[operatorStack.top])) {
  6910   0033D4  2875               	incf	(infixToPostfix@operatorStack+100)^0,w,c
  6911   0033D6  E108               	bnz	u9220
  6912   0033D8  2876               	incf	(infixToPostfix@operatorStack+101)^0,w,c
  6913   0033DA  B4D8               	btfsc	status,2,c
  6914   0033DC  EFF2  F019         	goto	u9221
  6915   0033E0  EFF4  F019         	goto	u9220
  6916   0033E4                     u9221:
  6917   0033E4  EF11  F01A         	goto	l8339
  6918   0033E8                     u9220:
  6919   0033E8  5075               	movf	(infixToPostfix@operatorStack+100)^0,w,c
  6920   0033EA  0F11               	addlw	low infixToPostfix@operatorStack
  6921   0033EC  6ED9               	movwf	fsr2l,c
  6922   0033EE  6ADA               	clrf	fsr2h,c
  6923   0033F0  50DF               	movf	indf2,w,c
  6924   0033F2  EC9B  F022         	call	_precedence
  6925   0033F6  C001  F009         	movff	?_precedence,??_infixToPostfix
  6926   0033FA  C002  F00A         	movff	?_precedence+1,??_infixToPostfix+1
  6927   0033FE  500C               	movf	infixToPostfix@current^0,w,c
  6928   003400  EC9B  F022         	call	_precedence
  6929   003404  5001               	movf	?_precedence^0,w,c
  6930   003406  5C09               	subwf	??_infixToPostfix^0,w,c
  6931   003408  500A               	movf	(??_infixToPostfix+1)^0,w,c
  6932   00340A  0A80               	xorlw	128
  6933   00340C  6E0B               	movwf	(??_infixToPostfix+2)^0,c
  6934   00340E  5002               	movf	(?_precedence+1)^0,w,c
  6935   003410  0A80               	xorlw	128
  6936   003412  580B               	subwfb	(??_infixToPostfix+2)^0,w,c
  6937   003414  B0D8               	btfsc	status,0,c
  6938   003416  EF0F  F01A         	goto	u9231
  6939   00341A  EF11  F01A         	goto	u9230
  6940   00341E                     u9231:
  6941   00341E  EFDB  F019         	goto	l8331
  6942   003422                     u9230:
  6943   003422                     l8339:
  6944                           
  6945                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 95:             push(&operatorStack, curre
      +                          nt);
  6946   003422  0E11               	movlw	low infixToPostfix@operatorStack
  6947   003424  6E01               	movwf	push@stack^0,c
  6948   003426  C00C  F002         	movff	infixToPostfix@current,push@c
  6949   00342A  EC87  F025         	call	_push	;wreg free
  6950   00342E  EF81  F019         	goto	l8311
  6951   003432                     l8343:
  6952                           
  6953                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 78:     while (infix[i] != '\0') {
  6954   003432  500D               	movf	infixToPostfix@i^0,w,c
  6955   003434  2405               	addwf	infixToPostfix@infix^0,w,c
  6956   003436  6ED9               	movwf	fsr2l,c
  6957   003438  500E               	movf	(infixToPostfix@i+1)^0,w,c
  6958   00343A  2006               	addwfc	(infixToPostfix@infix+1)^0,w,c
  6959   00343C  6EDA               	movwf	fsr2h,c
  6960   00343E  50DF               	movf	indf2,w,c
  6961   003440  A4D8               	btfss	status,2,c
  6962   003442  EF25  F01A         	goto	u9241
  6963   003446  EF27  F01A         	goto	u9240
  6964   00344A                     u9241:
  6965   00344A  EF70  F019         	goto	l8307
  6966   00344E                     u9240:
  6967   00344E  EF38  F01A         	goto	l8349
  6968   003452                     l8345:
  6969                           
  6970                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 101:         postfix[j++] = pop(&operatorS
      +                          tack);
  6971   003452  0E11               	movlw	low infixToPostfix@operatorStack
  6972   003454  6E01               	movwf	pop@stack^0,c
  6973   003456  EC9A  F025         	call	_pop	;wreg free
  6974   00345A  6E09               	movwf	??_infixToPostfix^0,c
  6975   00345C  500F               	movf	infixToPostfix@j^0,w,c
  6976   00345E  2407               	addwf	infixToPostfix@postfix^0,w,c
  6977   003460  6ED9               	movwf	fsr2l,c
  6978   003462  5010               	movf	(infixToPostfix@j+1)^0,w,c
  6979   003464  2008               	addwfc	(infixToPostfix@postfix+1)^0,w,c
  6980   003466  6EDA               	movwf	fsr2h,c
  6981   003468  C009  FFDF         	movff	??_infixToPostfix,indf2
  6982   00346C  4A0F               	infsnz	infixToPostfix@j^0,f,c
  6983   00346E  2A10               	incf	(infixToPostfix@j+1)^0,f,c
  6984   003470                     l8349:
  6985                           
  6986                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 100:     while (operatorStack.top != -1) {
  6987   003470  2875               	incf	(infixToPostfix@operatorStack+100)^0,w,c
  6988   003472  E106               	bnz	u9251
  6989   003474  2876               	incf	(infixToPostfix@operatorStack+101)^0,w,c
  6990   003476  A4D8               	btfss	status,2,c
  6991   003478  EF40  F01A         	goto	u9251
  6992   00347C  EF42  F01A         	goto	u9250
  6993   003480                     u9251:
  6994   003480  EF29  F01A         	goto	l8345
  6995   003484                     u9250:
  6996   003484                     
  6997                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 104:     postfix[j] = '\0';
  6998   003484  500F               	movf	infixToPostfix@j^0,w,c
  6999   003486  2407               	addwf	infixToPostfix@postfix^0,w,c
  7000   003488  6ED9               	movwf	fsr2l,c
  7001   00348A  5010               	movf	(infixToPostfix@j+1)^0,w,c
  7002   00348C  2008               	addwfc	(infixToPostfix@postfix+1)^0,w,c
  7003   00348E  6EDA               	movwf	fsr2h,c
  7004   003490  6ADF               	clrf	indf2,c
  7005   003492  0012               	return		;funcret
  7006   003494                     __end_of_infixToPostfix:
  7007                           	callstack 0
  7008                           
  7009 ;; *************** function _push *****************
  7010 ;; Defined at:
  7011 ;;		line 36 in file "Algorithms/Infix_to_postfix/infix_to_post.c"
  7012 ;; Parameters:    Size  Location     Type
  7013 ;;  stack           1    0[COMRAM] PTR struct .
  7014 ;;		 -> infixToPostfix@operatorStack(102), 
  7015 ;;  c               1    1[COMRAM] unsigned char 
  7016 ;; Auto vars:     Size  Location     Type
  7017 ;;		None
  7018 ;; Return value:  Size  Location     Type
  7019 ;;                  1    wreg      void 
  7020 ;; Registers used:
  7021 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7022 ;; Tracked objects:
  7023 ;;		On entry : 0/0
  7024 ;;		On exit  : 0/0
  7025 ;;		Unchanged: 0/0
  7026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7027 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7029 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7030 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7031 ;;Total ram usage:        4 bytes
  7032 ;; Hardware stack levels used: 1
  7033 ;; This function calls:
  7034 ;;		Nothing
  7035 ;; This function is called by:
  7036 ;;		_infixToPostfix
  7037 ;; This function uses a non-reentrant model
  7038 ;;
  7039                           
  7040                           	psect	text30
  7041   004B0E                     __ptext30:
  7042                           	callstack 0
  7043   004B0E                     _push:
  7044                           	callstack 29
  7045   004B0E                     
  7046                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 37:     stack->data[++stack->top] = c;
  7047   004B0E  5001               	movf	push@stack^0,w,c
  7048   004B10  6ED9               	movwf	fsr2l,c
  7049   004B12  6ADA               	clrf	fsr2h,c
  7050   004B14  0E64               	movlw	100
  7051   004B16  26D9               	addwf	fsr2l,f,c
  7052   004B18  2ADE               	incf	postinc2,f,c
  7053   004B1A  0E00               	movlw	0
  7054   004B1C  22DD               	addwfc	postdec2,f,c
  7055   004B1E  CFDE F003          	movff	postinc2,??_push
  7056   004B22  CFDD F004          	movff	postdec2,??_push+1
  7057   004B26  5001               	movf	push@stack^0,w,c
  7058   004B28  2403               	addwf	??_push^0,w,c
  7059   004B2A  6ED9               	movwf	fsr2l,c
  7060   004B2C  6ADA               	clrf	fsr2h,c
  7061   004B2E  C002  FFDF         	movff	push@c,indf2
  7062   004B32  0012               	return		;funcret
  7063   004B34                     __end_of_push:
  7064                           	callstack 0
  7065                           
  7066 ;; *************** function _precedence *****************
  7067 ;; Defined at:
  7068 ;;		line 51 in file "Algorithms/Infix_to_postfix/infix_to_post.c"
  7069 ;; Parameters:    Size  Location     Type
  7070 ;;  op              1    wreg     unsigned char 
  7071 ;; Auto vars:     Size  Location     Type
  7072 ;;  op              1    2[COMRAM] unsigned char 
  7073 ;; Return value:  Size  Location     Type
  7074 ;;                  2    0[COMRAM] int 
  7075 ;; Registers used:
  7076 ;;		wreg, status,2, status,0
  7077 ;; Tracked objects:
  7078 ;;		On entry : 0/0
  7079 ;;		On exit  : 0/0
  7080 ;;		Unchanged: 0/0
  7081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7082 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7083 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7085 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7086 ;;Total ram usage:        3 bytes
  7087 ;; Hardware stack levels used: 1
  7088 ;; This function calls:
  7089 ;;		Nothing
  7090 ;; This function is called by:
  7091 ;;		_infixToPostfix
  7092 ;; This function uses a non-reentrant model
  7093 ;;
  7094                           
  7095                           	psect	text31
  7096   004536                     __ptext31:
  7097                           	callstack 0
  7098   004536                     _precedence:
  7099                           	callstack 29
  7100                           
  7101                           ;incstack = 0
  7102                           ;precedence@op stored from wreg
  7103   004536  6E03               	movwf	precedence@op^0,c
  7104   004538                     
  7105                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 52:     if (op == '+' || op == '-')
  7106   004538  0E2B               	movlw	43
  7107   00453A  1803               	xorwf	precedence@op^0,w,c
  7108   00453C  B4D8               	btfsc	status,2,c
  7109   00453E  EFA3  F022         	goto	u5461
  7110   004542  EFA5  F022         	goto	u5460
  7111   004546                     u5461:
  7112   004546  EFAE  F022         	goto	l5415
  7113   00454A                     u5460:
  7114   00454A  0E2D               	movlw	45
  7115   00454C  1803               	xorwf	precedence@op^0,w,c
  7116   00454E  A4D8               	btfss	status,2,c
  7117   004550  EFAC  F022         	goto	u5471
  7118   004554  EFAE  F022         	goto	u5470
  7119   004558                     u5471:
  7120   004558  EFB4  F022         	goto	l5419
  7121   00455C                     u5470:
  7122   00455C                     l5415:
  7123                           
  7124                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 53:         return 1;
  7125   00455C  0E00               	movlw	0
  7126   00455E  6E02               	movwf	(?_precedence+1)^0,c
  7127   004560  0E01               	movlw	1
  7128   004562  6E01               	movwf	?_precedence^0,c
  7129   004564  EFD0  F022         	goto	l573
  7130   004568                     l5419:
  7131                           
  7132                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 54:     if (op == '*' || op == '/')
  7133   004568  0E2A               	movlw	42
  7134   00456A  1803               	xorwf	precedence@op^0,w,c
  7135   00456C  B4D8               	btfsc	status,2,c
  7136   00456E  EFBB  F022         	goto	u5481
  7137   004572  EFBD  F022         	goto	u5480
  7138   004576                     u5481:
  7139   004576  EFC6  F022         	goto	l5423
  7140   00457A                     u5480:
  7141   00457A  0E2F               	movlw	47
  7142   00457C  1803               	xorwf	precedence@op^0,w,c
  7143   00457E  A4D8               	btfss	status,2,c
  7144   004580  EFC4  F022         	goto	u5491
  7145   004584  EFC6  F022         	goto	u5490
  7146   004588                     u5491:
  7147   004588  EFCC  F022         	goto	l5427
  7148   00458C                     u5490:
  7149   00458C                     l5423:
  7150                           
  7151                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 55:         return 2;
  7152   00458C  0E00               	movlw	0
  7153   00458E  6E02               	movwf	(?_precedence+1)^0,c
  7154   004590  0E02               	movlw	2
  7155   004592  6E01               	movwf	?_precedence^0,c
  7156   004594  EFD0  F022         	goto	l573
  7157   004598                     l5427:
  7158                           
  7159                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 56:     return 0;
  7160   004598  0E00               	movlw	0
  7161   00459A  6E02               	movwf	(?_precedence+1)^0,c
  7162   00459C  0E00               	movlw	0
  7163   00459E  6E01               	movwf	?_precedence^0,c
  7164   0045A0                     l573:
  7165   0045A0  0012               	return		;funcret
  7166   0045A2                     __end_of_precedence:
  7167                           	callstack 0
  7168                           
  7169 ;; *************** function _pop *****************
  7170 ;; Defined at:
  7171 ;;		line 41 in file "Algorithms/Infix_to_postfix/infix_to_post.c"
  7172 ;; Parameters:    Size  Location     Type
  7173 ;;  stack           1    0[COMRAM] PTR struct .
  7174 ;;		 -> infixToPostfix@operatorStack(102), 
  7175 ;; Auto vars:     Size  Location     Type
  7176 ;;		None
  7177 ;; Return value:  Size  Location     Type
  7178 ;;                  1    wreg      unsigned char 
  7179 ;; Registers used:
  7180 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7181 ;; Tracked objects:
  7182 ;;		On entry : 0/0
  7183 ;;		On exit  : 0/0
  7184 ;;		Unchanged: 0/0
  7185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7186 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7188 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7189 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7190 ;;Total ram usage:        3 bytes
  7191 ;; Hardware stack levels used: 1
  7192 ;; This function calls:
  7193 ;;		Nothing
  7194 ;; This function is called by:
  7195 ;;		_infixToPostfix
  7196 ;; This function uses a non-reentrant model
  7197 ;;
  7198                           
  7199                           	psect	text32
  7200   004B34                     __ptext32:
  7201                           	callstack 0
  7202   004B34                     _pop:
  7203                           	callstack 29
  7204   004B34                     
  7205                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 42:     return stack->data[stack->top--];
  7206   004B34  5001               	movf	pop@stack^0,w,c
  7207   004B36  6ED9               	movwf	fsr2l,c
  7208   004B38  6ADA               	clrf	fsr2h,c
  7209   004B3A  0E64               	movlw	100
  7210   004B3C  26D9               	addwf	fsr2l,f,c
  7211   004B3E  CFDF F002          	movff	indf2,??_pop
  7212   004B42  0E01               	movlw	1
  7213   004B44  5EDE               	subwf	postinc2,f,c
  7214   004B46  CFDF F003          	movff	indf2,??_pop+1
  7215   004B4A  0E00               	movlw	0
  7216   004B4C  5ADD               	subwfb	postdec2,f,c
  7217   004B4E  5001               	movf	pop@stack^0,w,c
  7218   004B50  2402               	addwf	??_pop^0,w,c
  7219   004B52  6ED9               	movwf	fsr2l,c
  7220   004B54  6ADA               	clrf	fsr2h,c
  7221   004B56  50DF               	movf	indf2,w,c
  7222   004B58  0012               	return		;funcret
  7223   004B5A                     __end_of_pop:
  7224                           	callstack 0
  7225                           
  7226 ;; *************** function _initialize *****************
  7227 ;; Defined at:
  7228 ;;		line 31 in file "Algorithms/Infix_to_postfix/infix_to_post.c"
  7229 ;; Parameters:    Size  Location     Type
  7230 ;;  stack           1    0[COMRAM] PTR struct .
  7231 ;;		 -> infixToPostfix@operatorStack(102), 
  7232 ;; Auto vars:     Size  Location     Type
  7233 ;;		None
  7234 ;; Return value:  Size  Location     Type
  7235 ;;                  1    wreg      void 
  7236 ;; Registers used:
  7237 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7238 ;; Tracked objects:
  7239 ;;		On entry : 0/0
  7240 ;;		On exit  : 0/0
  7241 ;;		Unchanged: 0/0
  7242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7243 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7246 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7247 ;;Total ram usage:        1 bytes
  7248 ;; Hardware stack levels used: 1
  7249 ;; This function calls:
  7250 ;;		Nothing
  7251 ;; This function is called by:
  7252 ;;		_infixToPostfix
  7253 ;; This function uses a non-reentrant model
  7254 ;;
  7255                           
  7256                           	psect	text33
  7257   004B5A                     __ptext33:
  7258                           	callstack 0
  7259   004B5A                     _initialize:
  7260                           	callstack 29
  7261   004B5A                     
  7262                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 32:     stack->top = -1;
  7263   004B5A  5001               	movf	initialize@stack^0,w,c
  7264   004B5C  6ED9               	movwf	fsr2l,c
  7265   004B5E  6ADA               	clrf	fsr2h,c
  7266   004B60  0E64               	movlw	100
  7267   004B62  26D9               	addwf	fsr2l,f,c
  7268   004B64  0EFF               	movlw	255
  7269   004B66  6EDE               	movwf	postinc2,c
  7270   004B68  0EFF               	movlw	255
  7271   004B6A  6EDD               	movwf	postdec2,c
  7272   004B6C  0012               	return		;funcret
  7273   004B6E                     __end_of_initialize:
  7274                           	callstack 0
  7275                           
  7276 ;; *************** function _evaluatePostfix *****************
  7277 ;; Defined at:
  7278 ;;		line 108 in file "Algorithms/Infix_to_postfix/infix_to_post.c"
  7279 ;; Parameters:    Size  Location     Type
  7280 ;;  postfix         2   79[COMRAM] PTR const unsigned char 
  7281 ;;		 -> postfix(100), 
  7282 ;;  result          2   81[COMRAM] PTR float 
  7283 ;;		 -> result(4), 
  7284 ;; Auto vars:     Size  Location     Type
  7285 ;;  operand1        4    4[BANK0 ] float 
  7286 ;;  operand2        4    0[BANK0 ] float 
  7287 ;;  num             4   14[BANK0 ] float 
  7288 ;;  fractionalMu    4   10[BANK0 ] float 
  7289 ;;  isFractional    2    8[BANK0 ] int 
  7290 ;;  current         1   18[BANK0 ] unsigned char 
  7291 ;;  operandStack   82   19[BANK0 ] struct .
  7292 ;;  i               2  101[BANK0 ] int 
  7293 ;; Return value:  Size  Location     Type
  7294 ;;                  1    wreg      void 
  7295 ;; Registers used:
  7296 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7297 ;; Tracked objects:
  7298 ;;		On entry : 0/0
  7299 ;;		On exit  : 0/0
  7300 ;;		Unchanged: 0/0
  7301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7302 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7303 ;;      Locals:         0     103       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7304 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7305 ;;      Totals:         7     103       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7306 ;;Total ram usage:      110 bytes
  7307 ;; Hardware stack levels used: 1
  7308 ;; Hardware stack levels required when called: 3
  7309 ;; This function calls:
  7310 ;;		___fladd
  7311 ;;		___fldiv
  7312 ;;		___flmul
  7313 ;;		___xxtofl
  7314 ;;		_check_digit
  7315 ;;		_doMath
  7316 ;;		_initialize_t
  7317 ;;		_pop_t
  7318 ;;		_push_t
  7319 ;; This function is called by:
  7320 ;;		_main
  7321 ;; This function uses a non-reentrant model
  7322 ;;
  7323                           
  7324                           	psect	text34
  7325   002AF0                     __ptext34:
  7326                           	callstack 0
  7327   002AF0                     _evaluatePostfix:
  7328                           	callstack 27
  7329   002AF0                     
  7330                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 109:     stack_f operandStack;;Algorithms/
      +                          Infix_to_postfix/infix_to_post.c: 110:     initialize_t(&operandStack);
  7331   002AF0  0E93               	movlw	low evaluatePostfix@operandStack
  7332   002AF2  6E01               	movwf	initialize_t@stack^0,c
  7333   002AF4  ECB7  F025         	call	_initialize_t	;wreg free
  7334   002AF8                     
  7335                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 112:     int i = 0;
  7336   002AF8  0E00               	movlw	0
  7337   002AFA  0100               	movlb	0	; () banked
  7338   002AFC  6FE6               	movwf	(evaluatePostfix@i+1)& (0+255),b
  7339   002AFE  0E00               	movlw	0
  7340   002B00  6FE5               	movwf	evaluatePostfix@i& (0+255),b
  7341                           
  7342                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 113:     while (postfix[i] != '\0') {
  7343   002B02  EFF7  F016         	goto	l8397
  7344   002B06                     l8357:
  7345                           
  7346                           ; BSR set to: 0
  7347                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 114:         char current = postfix[i];
  7348   002B06  51E5               	movf	evaluatePostfix@i& (0+255),w,b
  7349   002B08  2450               	addwf	evaluatePostfix@postfix^0,w,c
  7350   002B0A  6ED9               	movwf	fsr2l,c
  7351   002B0C  51E6               	movf	(evaluatePostfix@i+1)& (0+255),w,b
  7352   002B0E  2051               	addwfc	(evaluatePostfix@postfix+1)^0,w,c
  7353   002B10  6EDA               	movwf	fsr2h,c
  7354   002B12  50DF               	movf	indf2,w,c
  7355   002B14  6F92               	movwf	evaluatePostfix@current& (0+255),b
  7356   002B16                     
  7357                           ; BSR set to: 0
  7358                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 116:         if (check_digit(current) || c
      +                          urrent == '.') {
  7359   002B16  5192               	movf	evaluatePostfix@current& (0+255),w,b
  7360   002B18  ECD3  F024         	call	_check_digit
  7361   002B1C  5001               	movf	?_check_digit^0,w,c
  7362   002B1E  1002               	iorwf	(?_check_digit+1)^0,w,c
  7363   002B20  A4D8               	btfss	status,2,c
  7364   002B22  EF95  F015         	goto	u9261
  7365   002B26  EF97  F015         	goto	u9260
  7366   002B2A                     u9261:
  7367   002B2A  EFA1  F015         	goto	l8363
  7368   002B2E                     u9260:
  7369   002B2E  0E2E               	movlw	46
  7370   002B30  0100               	movlb	0	; () banked
  7371   002B32  1992               	xorwf	evaluatePostfix@current& (0+255),w,b
  7372   002B34  A4D8               	btfss	status,2,c
  7373   002B36  EF9F  F015         	goto	u9271
  7374   002B3A  EFA1  F015         	goto	u9270
  7375   002B3E                     u9271:
  7376   002B3E  EFAF  F016         	goto	l8389
  7377   002B42                     u9270:
  7378   002B42                     l8363:
  7379                           
  7380                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 117:             float num = 0.0;
  7381   002B42  0E00               	movlw	0
  7382   002B44  0100               	movlb	0	; () banked
  7383   002B46  6F8E               	movwf	evaluatePostfix@num& (0+255),b
  7384   002B48  0E00               	movlw	0
  7385   002B4A  6F8F               	movwf	(evaluatePostfix@num+1)& (0+255),b
  7386   002B4C  0E00               	movlw	0
  7387   002B4E  6F90               	movwf	(evaluatePostfix@num+2)& (0+255),b
  7388   002B50  0E00               	movlw	0
  7389   002B52  6F91               	movwf	(evaluatePostfix@num+3)& (0+255),b
  7390                           
  7391                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 118:             int isFractional = 0;
  7392   002B54  0E00               	movlw	0
  7393   002B56  6F89               	movwf	(evaluatePostfix@isFractional+1)& (0+255),b
  7394   002B58  0E00               	movlw	0
  7395   002B5A  6F88               	movwf	evaluatePostfix@isFractional& (0+255),b
  7396                           
  7397                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 119:             float fractionalMultiplie
      +                          r = 0.1;
  7398   002B5C  0ECD               	movlw	205
  7399   002B5E  6F8A               	movwf	evaluatePostfix@fractionalMultiplier& (0+255),b
  7400   002B60  0ECC               	movlw	204
  7401   002B62  6F8B               	movwf	(evaluatePostfix@fractionalMultiplier+1)& (0+255),b
  7402   002B64  0ECC               	movlw	204
  7403   002B66  6F8C               	movwf	(evaluatePostfix@fractionalMultiplier+2)& (0+255),b
  7404   002B68  0E3D               	movlw	61
  7405   002B6A  6F8D               	movwf	(evaluatePostfix@fractionalMultiplier+3)& (0+255),b
  7406                           
  7407                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 121:             while (check_digit(postfi
      +                          x[i]) || postfix[i] == '.') {
  7408   002B6C  EF7F  F016         	goto	l8381
  7409   002B70                     l8365:
  7410                           
  7411                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 122:                 if (postfix[i] == '.'
      +                          ) {
  7412   002B70  0100               	movlb	0	; () banked
  7413   002B72  51E5               	movf	evaluatePostfix@i& (0+255),w,b
  7414   002B74  2450               	addwf	evaluatePostfix@postfix^0,w,c
  7415   002B76  6ED9               	movwf	fsr2l,c
  7416   002B78  51E6               	movf	(evaluatePostfix@i+1)& (0+255),w,b
  7417   002B7A  2051               	addwfc	(evaluatePostfix@postfix+1)^0,w,c
  7418   002B7C  6EDA               	movwf	fsr2h,c
  7419   002B7E  0E2E               	movlw	46
  7420   002B80  18DE               	xorwf	postinc2,w,c
  7421   002B82  A4D8               	btfss	status,2,c
  7422   002B84  EFC6  F015         	goto	u9281
  7423   002B88  EFC8  F015         	goto	u9280
  7424   002B8C                     u9281:
  7425   002B8C  EFD1  F015         	goto	l8371
  7426   002B90                     u9280:
  7427   002B90                     
  7428                           ; BSR set to: 0
  7429                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 123:                     isFractional = 1;
  7430   002B90  0E00               	movlw	0
  7431   002B92  6F89               	movwf	(evaluatePostfix@isFractional+1)& (0+255),b
  7432   002B94  0E01               	movlw	1
  7433   002B96  6F88               	movwf	evaluatePostfix@isFractional& (0+255),b
  7434   002B98                     l8369:
  7435                           
  7436                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 124:                     i++;
  7437   002B98  0100               	movlb	0	; () banked
  7438   002B9A  4BE5               	infsnz	evaluatePostfix@i& (0+255),f,b
  7439   002B9C  2BE6               	incf	(evaluatePostfix@i+1)& (0+255),f,b
  7440                           
  7441                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 125:                     continue;
  7442   002B9E  EF7F  F016         	goto	l8381
  7443   002BA2                     l8371:
  7444                           
  7445                           ; BSR set to: 0
  7446                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 128:                 if (!isFractional) {
  7447   002BA2  5188               	movf	evaluatePostfix@isFractional& (0+255),w,b
  7448   002BA4  1189               	iorwf	(evaluatePostfix@isFractional+1)& (0+255),w,b
  7449   002BA6  A4D8               	btfss	status,2,c
  7450   002BA8  EFD8  F015         	goto	u9291
  7451   002BAC  EFDA  F015         	goto	u9290
  7452   002BB0                     u9291:
  7453   002BB0  EF20  F016         	goto	l8375
  7454   002BB4                     u9290:
  7455   002BB4                     
  7456                           ; BSR set to: 0
  7457                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 129:                     num = num * 10 + 
      +                          (postfix[i] - '0');
  7458   002BB4  0E00               	movlw	0
  7459   002BB6  6E13               	movwf	___flmul@a^0,c
  7460   002BB8  0E00               	movlw	0
  7461   002BBA  6E14               	movwf	(___flmul@a+1)^0,c
  7462   002BBC  0E20               	movlw	32
  7463   002BBE  6E15               	movwf	(___flmul@a+2)^0,c
  7464   002BC0  0E41               	movlw	65
  7465   002BC2  6E16               	movwf	(___flmul@a+3)^0,c
  7466   002BC4  C08E  F00F         	movff	evaluatePostfix@num,___flmul@b
  7467   002BC8  C08F  F010         	movff	evaluatePostfix@num+1,___flmul@b+1
  7468   002BCC  C090  F011         	movff	evaluatePostfix@num+2,___flmul@b+2
  7469   002BD0  C091  F012         	movff	evaluatePostfix@num+3,___flmul@b+3
  7470   002BD4  EC96  F011         	call	___flmul	;wreg free
  7471   002BD8  C00F  F028         	movff	?___flmul,___fladd@b
  7472   002BDC  C010  F029         	movff	?___flmul+1,___fladd@b+1
  7473   002BE0  C011  F02A         	movff	?___flmul+2,___fladd@b+2
  7474   002BE4  C012  F02B         	movff	?___flmul+3,___fladd@b+3
  7475   002BE8  0100               	movlb	0	; () banked
  7476   002BEA  51E5               	movf	evaluatePostfix@i& (0+255),w,b
  7477   002BEC  2450               	addwf	evaluatePostfix@postfix^0,w,c
  7478   002BEE  6ED9               	movwf	fsr2l,c
  7479   002BF0  51E6               	movf	(evaluatePostfix@i+1)& (0+255),w,b
  7480   002BF2  2051               	addwfc	(evaluatePostfix@postfix+1)^0,w,c
  7481   002BF4  6EDA               	movwf	fsr2h,c
  7482   002BF6  50DF               	movf	indf2,w,c
  7483   002BF8  6E54               	movwf	??_evaluatePostfix^0,c
  7484   002BFA  0ED0               	movlw	208
  7485   002BFC  2454               	addwf	??_evaluatePostfix^0,w,c
  7486   002BFE  6E55               	movwf	(??_evaluatePostfix+1)^0,c
  7487   002C00  6A56               	clrf	(??_evaluatePostfix+2)^0,c
  7488   002C02  0EFF               	movlw	255
  7489   002C04  2256               	addwfc	(??_evaluatePostfix+2)^0,f,c
  7490   002C06  C055  F001         	movff	??_evaluatePostfix+1,___xxtofl@val
  7491   002C0A  C056  F002         	movff	??_evaluatePostfix+2,___xxtofl@val+1
  7492   002C0E  6A03               	clrf	(___xxtofl@val+2)^0,c
  7493   002C10  6A04               	clrf	(___xxtofl@val+3)^0,c
  7494   002C12  0E00               	movlw	0
  7495   002C14  EC4A  F01A         	call	___xxtofl
  7496   002C18  C001  F02C         	movff	?___xxtofl,___fladd@a
  7497   002C1C  C002  F02D         	movff	?___xxtofl+1,___fladd@a+1
  7498   002C20  C003  F02E         	movff	?___xxtofl+2,___fladd@a+2
  7499   002C24  C004  F02F         	movff	?___xxtofl+3,___fladd@a+3
  7500   002C28  ECF8  F00C         	call	___fladd	;wreg free
  7501   002C2C  C028  F08E         	movff	?___fladd,evaluatePostfix@num
  7502   002C30  C029  F08F         	movff	?___fladd+1,evaluatePostfix@num+1
  7503   002C34  C02A  F090         	movff	?___fladd+2,evaluatePostfix@num+2
  7504   002C38  C02B  F091         	movff	?___fladd+3,evaluatePostfix@num+3
  7505                           
  7506                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 130:                 } else {
  7507   002C3C  EFCC  F015         	goto	l8369
  7508   002C40                     l8375:
  7509                           
  7510                           ; BSR set to: 0
  7511                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 131:                     num += (postfix[i
      +                          ] - '0') * fractionalMultiplier;
  7512   002C40  C08E  F028         	movff	evaluatePostfix@num,___fladd@b
  7513   002C44  C08F  F029         	movff	evaluatePostfix@num+1,___fladd@b+1
  7514   002C48  C090  F02A         	movff	evaluatePostfix@num+2,___fladd@b+2
  7515   002C4C  C091  F02B         	movff	evaluatePostfix@num+3,___fladd@b+3
  7516   002C50  C08A  F013         	movff	evaluatePostfix@fractionalMultiplier,___flmul@a
  7517   002C54  C08B  F014         	movff	evaluatePostfix@fractionalMultiplier+1,___flmul@a+1
  7518   002C58  C08C  F015         	movff	evaluatePostfix@fractionalMultiplier+2,___flmul@a+2
  7519   002C5C  C08D  F016         	movff	evaluatePostfix@fractionalMultiplier+3,___flmul@a+3
  7520   002C60  51E5               	movf	evaluatePostfix@i& (0+255),w,b
  7521   002C62  2450               	addwf	evaluatePostfix@postfix^0,w,c
  7522   002C64  6ED9               	movwf	fsr2l,c
  7523   002C66  51E6               	movf	(evaluatePostfix@i+1)& (0+255),w,b
  7524   002C68  2051               	addwfc	(evaluatePostfix@postfix+1)^0,w,c
  7525   002C6A  6EDA               	movwf	fsr2h,c
  7526   002C6C  50DF               	movf	indf2,w,c
  7527   002C6E  6E54               	movwf	??_evaluatePostfix^0,c
  7528   002C70  0ED0               	movlw	208
  7529   002C72  2454               	addwf	??_evaluatePostfix^0,w,c
  7530   002C74  6E55               	movwf	(??_evaluatePostfix+1)^0,c
  7531   002C76  6A56               	clrf	(??_evaluatePostfix+2)^0,c
  7532   002C78  0EFF               	movlw	255
  7533   002C7A  2256               	addwfc	(??_evaluatePostfix+2)^0,f,c
  7534   002C7C  C055  F001         	movff	??_evaluatePostfix+1,___xxtofl@val
  7535   002C80  C056  F002         	movff	??_evaluatePostfix+2,___xxtofl@val+1
  7536   002C84  6A03               	clrf	(___xxtofl@val+2)^0,c
  7537   002C86  6A04               	clrf	(___xxtofl@val+3)^0,c
  7538   002C88  0E00               	movlw	0
  7539   002C8A  EC4A  F01A         	call	___xxtofl
  7540   002C8E  C001  F00F         	movff	?___xxtofl,___flmul@b
  7541   002C92  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  7542   002C96  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  7543   002C9A  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  7544   002C9E  EC96  F011         	call	___flmul	;wreg free
  7545   002CA2  C00F  F02C         	movff	?___flmul,___fladd@a
  7546   002CA6  C010  F02D         	movff	?___flmul+1,___fladd@a+1
  7547   002CAA  C011  F02E         	movff	?___flmul+2,___fladd@a+2
  7548   002CAE  C012  F02F         	movff	?___flmul+3,___fladd@a+3
  7549   002CB2  ECF8  F00C         	call	___fladd	;wreg free
  7550   002CB6  C028  F08E         	movff	?___fladd,evaluatePostfix@num
  7551   002CBA  C029  F08F         	movff	?___fladd+1,evaluatePostfix@num+1
  7552   002CBE  C02A  F090         	movff	?___fladd+2,evaluatePostfix@num+2
  7553   002CC2  C02B  F091         	movff	?___fladd+3,evaluatePostfix@num+3
  7554   002CC6                     
  7555                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 132:                     fractionalMultipl
      +                          ier /= 10;
  7556   002CC6  C08A  F001         	movff	evaluatePostfix@fractionalMultiplier,___fldiv@b
  7557   002CCA  C08B  F002         	movff	evaluatePostfix@fractionalMultiplier+1,___fldiv@b+1
  7558   002CCE  C08C  F003         	movff	evaluatePostfix@fractionalMultiplier+2,___fldiv@b+2
  7559   002CD2  C08D  F004         	movff	evaluatePostfix@fractionalMultiplier+3,___fldiv@b+3
  7560   002CD6  0E00               	movlw	0
  7561   002CD8  6E05               	movwf	___fldiv@a^0,c
  7562   002CDA  0E00               	movlw	0
  7563   002CDC  6E06               	movwf	(___fldiv@a+1)^0,c
  7564   002CDE  0E20               	movlw	32
  7565   002CE0  6E07               	movwf	(___fldiv@a+2)^0,c
  7566   002CE2  0E41               	movlw	65
  7567   002CE4  6E08               	movwf	(___fldiv@a+3)^0,c
  7568   002CE6  ECAB  F013         	call	___fldiv	;wreg free
  7569   002CEA  C001  F08A         	movff	?___fldiv,evaluatePostfix@fractionalMultiplier
  7570   002CEE  C002  F08B         	movff	?___fldiv+1,evaluatePostfix@fractionalMultiplier+1
  7571   002CF2  C003  F08C         	movff	?___fldiv+2,evaluatePostfix@fractionalMultiplier+2
  7572   002CF6  C004  F08D         	movff	?___fldiv+3,evaluatePostfix@fractionalMultiplier+3
  7573   002CFA  EFCC  F015         	goto	l8369
  7574   002CFE                     l8381:
  7575                           
  7576                           ; BSR set to: 0
  7577                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 121:             while (check_digit(postfi
      +                          x[i]) || postfix[i] == '.') {
  7578   002CFE  51E5               	movf	evaluatePostfix@i& (0+255),w,b
  7579   002D00  2450               	addwf	evaluatePostfix@postfix^0,w,c
  7580   002D02  6ED9               	movwf	fsr2l,c
  7581   002D04  51E6               	movf	(evaluatePostfix@i+1)& (0+255),w,b
  7582   002D06  2051               	addwfc	(evaluatePostfix@postfix+1)^0,w,c
  7583   002D08  6EDA               	movwf	fsr2h,c
  7584   002D0A  50DF               	movf	indf2,w,c
  7585   002D0C  ECD3  F024         	call	_check_digit
  7586   002D10  5001               	movf	?_check_digit^0,w,c
  7587   002D12  1002               	iorwf	(?_check_digit+1)^0,w,c
  7588   002D14  A4D8               	btfss	status,2,c
  7589   002D16  EF8F  F016         	goto	u9301
  7590   002D1A  EF91  F016         	goto	u9300
  7591   002D1E                     u9301:
  7592   002D1E  EFB8  F015         	goto	l8365
  7593   002D22                     u9300:
  7594   002D22  0100               	movlb	0	; () banked
  7595   002D24  51E5               	movf	evaluatePostfix@i& (0+255),w,b
  7596   002D26  2450               	addwf	evaluatePostfix@postfix^0,w,c
  7597   002D28  6ED9               	movwf	fsr2l,c
  7598   002D2A  51E6               	movf	(evaluatePostfix@i+1)& (0+255),w,b
  7599   002D2C  2051               	addwfc	(evaluatePostfix@postfix+1)^0,w,c
  7600   002D2E  6EDA               	movwf	fsr2h,c
  7601   002D30  0E2E               	movlw	46
  7602   002D32  18DE               	xorwf	postinc2,w,c
  7603   002D34  B4D8               	btfsc	status,2,c
  7604   002D36  EF9F  F016         	goto	u9311
  7605   002D3A  EFA1  F016         	goto	u9310
  7606   002D3E                     u9311:
  7607   002D3E  EFB8  F015         	goto	l8365
  7608   002D42                     u9310:
  7609   002D42                     
  7610                           ; BSR set to: 0
  7611                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 136:             push_t(&operandStack, num
      +                          );
  7612   002D42  0E93               	movlw	low evaluatePostfix@operandStack
  7613   002D44  6E49               	movwf	push_t@stack^0,c
  7614   002D46  C08E  F04A         	movff	evaluatePostfix@num,push_t@c
  7615   002D4A  C08F  F04B         	movff	evaluatePostfix@num+1,push_t@c+1
  7616   002D4E  C090  F04C         	movff	evaluatePostfix@num+2,push_t@c+2
  7617   002D52  C091  F04D         	movff	evaluatePostfix@num+3,push_t@c+3
  7618   002D56  EC25  F025         	call	_push_t	;wreg free
  7619   002D5A                     
  7620                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 138:         } else if (current == ' ') {
  7621   002D5A  EFF7  F016         	goto	l8397
  7622   002D5E                     l8389:
  7623                           
  7624                           ; BSR set to: 0
  7625   002D5E  0E20               	movlw	32
  7626   002D60  1992               	xorwf	evaluatePostfix@current& (0+255),w,b
  7627   002D62  A4D8               	btfss	status,2,c
  7628   002D64  EFB6  F016         	goto	u9321
  7629   002D68  EFB8  F016         	goto	u9320
  7630   002D6C                     u9321:
  7631   002D6C  EFBD  F016         	goto	l8393
  7632   002D70                     u9320:
  7633   002D70                     l8391:
  7634                           
  7635                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 139:             i++;
  7636   002D70  0100               	movlb	0	; () banked
  7637   002D72  4BE5               	infsnz	evaluatePostfix@i& (0+255),f,b
  7638   002D74  2BE6               	incf	(evaluatePostfix@i+1)& (0+255),f,b
  7639                           
  7640                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 140:         } else {
  7641   002D76  EFF7  F016         	goto	l8397
  7642   002D7A                     l8393:
  7643                           
  7644                           ; BSR set to: 0
  7645                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 141:             float operand2 = pop_t(&o
      +                          perandStack);
  7646   002D7A  0E93               	movlw	low evaluatePostfix@operandStack
  7647   002D7C  6E01               	movwf	pop_t@stack^0,c
  7648   002D7E  ECB7  F024         	call	_pop_t	;wreg free
  7649   002D82  C001  F080         	movff	?_pop_t,evaluatePostfix@operand2
  7650   002D86  C002  F081         	movff	?_pop_t+1,evaluatePostfix@operand2+1
  7651   002D8A  C003  F082         	movff	?_pop_t+2,evaluatePostfix@operand2+2
  7652   002D8E  C004  F083         	movff	?_pop_t+3,evaluatePostfix@operand2+3
  7653                           
  7654                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 142:             float operand1 = pop_t(&o
      +                          perandStack);
  7655   002D92  0E93               	movlw	low evaluatePostfix@operandStack
  7656   002D94  6E01               	movwf	pop_t@stack^0,c
  7657   002D96  ECB7  F024         	call	_pop_t	;wreg free
  7658   002D9A  C001  F084         	movff	?_pop_t,evaluatePostfix@operand1
  7659   002D9E  C002  F085         	movff	?_pop_t+1,evaluatePostfix@operand1+1
  7660   002DA2  C003  F086         	movff	?_pop_t+2,evaluatePostfix@operand1+2
  7661   002DA6  C004  F087         	movff	?_pop_t+3,evaluatePostfix@operand1+3
  7662                           
  7663                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 143:             push_t(&operandStack, doM
      +                          ath(current, operand1, operand2));
  7664   002DAA  0E93               	movlw	low evaluatePostfix@operandStack
  7665   002DAC  6E49               	movwf	push_t@stack^0,c
  7666   002DAE  C084  F040         	movff	evaluatePostfix@operand1,doMath@op1
  7667   002DB2  C085  F041         	movff	evaluatePostfix@operand1+1,doMath@op1+1
  7668   002DB6  C086  F042         	movff	evaluatePostfix@operand1+2,doMath@op1+2
  7669   002DBA  C087  F043         	movff	evaluatePostfix@operand1+3,doMath@op1+3
  7670   002DBE  C080  F044         	movff	evaluatePostfix@operand2,doMath@op2
  7671   002DC2  C081  F045         	movff	evaluatePostfix@operand2+1,doMath@op2+1
  7672   002DC6  C082  F046         	movff	evaluatePostfix@operand2+2,doMath@op2+2
  7673   002DCA  C083  F047         	movff	evaluatePostfix@operand2+3,doMath@op2+3
  7674   002DCE  0100               	movlb	0	; () banked
  7675   002DD0  5192               	movf	evaluatePostfix@current& (0+255),w,b
  7676   002DD2  ECE1  F01B         	call	_doMath
  7677   002DD6  C040  F04A         	movff	?_doMath,push_t@c
  7678   002DDA  C041  F04B         	movff	?_doMath+1,push_t@c+1
  7679   002DDE  C042  F04C         	movff	?_doMath+2,push_t@c+2
  7680   002DE2  C043  F04D         	movff	?_doMath+3,push_t@c+3
  7681   002DE6  EC25  F025         	call	_push_t	;wreg free
  7682   002DEA  EFB8  F016         	goto	l8391
  7683   002DEE                     l8397:
  7684                           
  7685                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 113:     while (postfix[i] != '\0') {
  7686   002DEE  0100               	movlb	0	; () banked
  7687   002DF0  51E5               	movf	evaluatePostfix@i& (0+255),w,b
  7688   002DF2  2450               	addwf	evaluatePostfix@postfix^0,w,c
  7689   002DF4  6ED9               	movwf	fsr2l,c
  7690   002DF6  51E6               	movf	(evaluatePostfix@i+1)& (0+255),w,b
  7691   002DF8  2051               	addwfc	(evaluatePostfix@postfix+1)^0,w,c
  7692   002DFA  6EDA               	movwf	fsr2h,c
  7693   002DFC  50DF               	movf	indf2,w,c
  7694   002DFE  A4D8               	btfss	status,2,c
  7695   002E00  EF04  F017         	goto	u9331
  7696   002E04  EF06  F017         	goto	u9330
  7697   002E08                     u9331:
  7698   002E08  EF83  F015         	goto	l8357
  7699   002E0C                     u9330:
  7700   002E0C                     
  7701                           ; BSR set to: 0
  7702                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 148:     *result = (float)pop_t(&operandSt
      +                          ack);
  7703   002E0C  0E93               	movlw	low evaluatePostfix@operandStack
  7704   002E0E  6E01               	movwf	pop_t@stack^0,c
  7705   002E10  ECB7  F024         	call	_pop_t	;wreg free
  7706   002E14  C052  FFD9         	movff	evaluatePostfix@result,fsr2l
  7707   002E18  C053  FFDA         	movff	evaluatePostfix@result+1,fsr2h
  7708   002E1C  C001  FFDE         	movff	?_pop_t,postinc2
  7709   002E20  C002  FFDE         	movff	?_pop_t+1,postinc2
  7710   002E24  C003  FFDE         	movff	?_pop_t+2,postinc2
  7711   002E28  C004  FFDE         	movff	?_pop_t+3,postinc2
  7712   002E2C  0012               	return		;funcret
  7713   002E2E                     __end_of_evaluatePostfix:
  7714                           	callstack 0
  7715                           
  7716 ;; *************** function _push_t *****************
  7717 ;; Defined at:
  7718 ;;		line 19 in file "Algorithms/Infix_to_postfix/infix_to_post.c"
  7719 ;; Parameters:    Size  Location     Type
  7720 ;;  stack           1   72[COMRAM] PTR struct .
  7721 ;;		 -> evaluatePostfix@operandStack(82), 
  7722 ;;  c               4   73[COMRAM] float 
  7723 ;; Auto vars:     Size  Location     Type
  7724 ;;		None
  7725 ;; Return value:  Size  Location     Type
  7726 ;;                  1    wreg      void 
  7727 ;; Registers used:
  7728 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7729 ;; Tracked objects:
  7730 ;;		On entry : 0/0
  7731 ;;		On exit  : 0/0
  7732 ;;		Unchanged: 0/0
  7733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7734 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7736 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7737 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7738 ;;Total ram usage:        7 bytes
  7739 ;; Hardware stack levels used: 1
  7740 ;; This function calls:
  7741 ;;		Nothing
  7742 ;; This function is called by:
  7743 ;;		_evaluatePostfix
  7744 ;; This function uses a non-reentrant model
  7745 ;;
  7746                           
  7747                           	psect	text35
  7748   004A4A                     __ptext35:
  7749                           	callstack 0
  7750   004A4A                     _push_t:
  7751                           	callstack 29
  7752   004A4A                     
  7753                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 20:     stack->data[++stack->top] = c;
  7754   004A4A  5049               	movf	push_t@stack^0,w,c
  7755   004A4C  6ED9               	movwf	fsr2l,c
  7756   004A4E  6ADA               	clrf	fsr2h,c
  7757   004A50  0E50               	movlw	80
  7758   004A52  26D9               	addwf	fsr2l,f,c
  7759   004A54  2ADE               	incf	postinc2,f,c
  7760   004A56  0E00               	movlw	0
  7761   004A58  22DD               	addwfc	postdec2,f,c
  7762   004A5A  CFDE F04E          	movff	postinc2,??_push_t
  7763   004A5E  CFDD F04F          	movff	postdec2,??_push_t+1
  7764   004A62  504E               	movf	??_push_t^0,w,c
  7765   004A64  0D04               	mullw	4
  7766   004A66  5049               	movf	push_t@stack^0,w,c
  7767   004A68  24F3               	addwf	243,w,c
  7768   004A6A  6ED9               	movwf	fsr2l,c
  7769   004A6C  6ADA               	clrf	fsr2h,c
  7770   004A6E  C04A  FFDE         	movff	push_t@c,postinc2
  7771   004A72  C04B  FFDE         	movff	push_t@c+1,postinc2
  7772   004A76  C04C  FFDE         	movff	push_t@c+2,postinc2
  7773   004A7A  C04D  FFDE         	movff	push_t@c+3,postinc2
  7774   004A7E  0012               	return		;funcret
  7775   004A80                     __end_of_push_t:
  7776                           	callstack 0
  7777                           
  7778 ;; *************** function _pop_t *****************
  7779 ;; Defined at:
  7780 ;;		line 24 in file "Algorithms/Infix_to_postfix/infix_to_post.c"
  7781 ;; Parameters:    Size  Location     Type
  7782 ;;  stack           1    0[COMRAM] PTR struct .
  7783 ;;		 -> evaluatePostfix@operandStack(82), 
  7784 ;; Auto vars:     Size  Location     Type
  7785 ;;		None
  7786 ;; Return value:  Size  Location     Type
  7787 ;;                  4    0[COMRAM] float 
  7788 ;; Registers used:
  7789 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7790 ;; Tracked objects:
  7791 ;;		On entry : 0/0
  7792 ;;		On exit  : 0/0
  7793 ;;		Unchanged: 0/0
  7794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7795 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7797 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7798 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7799 ;;Total ram usage:        6 bytes
  7800 ;; Hardware stack levels used: 1
  7801 ;; This function calls:
  7802 ;;		Nothing
  7803 ;; This function is called by:
  7804 ;;		_evaluatePostfix
  7805 ;; This function uses a non-reentrant model
  7806 ;;
  7807                           
  7808                           	psect	text36
  7809   00496E                     __ptext36:
  7810                           	callstack 0
  7811   00496E                     _pop_t:
  7812                           	callstack 29
  7813   00496E                     
  7814                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 25:     return stack->data[stack->top--];
  7815   00496E  5001               	movf	pop_t@stack^0,w,c
  7816   004970  6ED9               	movwf	fsr2l,c
  7817   004972  6ADA               	clrf	fsr2h,c
  7818   004974  0E50               	movlw	80
  7819   004976  26D9               	addwf	fsr2l,f,c
  7820   004978  CFDF F005          	movff	indf2,??_pop_t
  7821   00497C  0E01               	movlw	1
  7822   00497E  5EDE               	subwf	postinc2,f,c
  7823   004980  CFDF F006          	movff	indf2,??_pop_t+1
  7824   004984  0E00               	movlw	0
  7825   004986  5ADD               	subwfb	postdec2,f,c
  7826   004988  5005               	movf	??_pop_t^0,w,c
  7827   00498A  0D04               	mullw	4
  7828   00498C  5001               	movf	pop_t@stack^0,w,c
  7829   00498E  24F3               	addwf	243,w,c
  7830   004990  6ED9               	movwf	fsr2l,c
  7831   004992  6ADA               	clrf	fsr2h,c
  7832   004994  CFDE F001          	movff	postinc2,?_pop_t
  7833   004998  CFDE F002          	movff	postinc2,?_pop_t+1
  7834   00499C  CFDE F003          	movff	postinc2,?_pop_t+2
  7835   0049A0  CFDE F004          	movff	postinc2,?_pop_t+3
  7836   0049A4  0012               	return		;funcret
  7837   0049A6                     __end_of_pop_t:
  7838                           	callstack 0
  7839                           
  7840 ;; *************** function _initialize_t *****************
  7841 ;; Defined at:
  7842 ;;		line 14 in file "Algorithms/Infix_to_postfix/infix_to_post.c"
  7843 ;; Parameters:    Size  Location     Type
  7844 ;;  stack           1    0[COMRAM] PTR struct .
  7845 ;;		 -> evaluatePostfix@operandStack(82), 
  7846 ;; Auto vars:     Size  Location     Type
  7847 ;;		None
  7848 ;; Return value:  Size  Location     Type
  7849 ;;                  1    wreg      void 
  7850 ;; Registers used:
  7851 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7852 ;; Tracked objects:
  7853 ;;		On entry : 0/0
  7854 ;;		On exit  : 0/0
  7855 ;;		Unchanged: 0/0
  7856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7857 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7860 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7861 ;;Total ram usage:        1 bytes
  7862 ;; Hardware stack levels used: 1
  7863 ;; This function calls:
  7864 ;;		Nothing
  7865 ;; This function is called by:
  7866 ;;		_evaluatePostfix
  7867 ;; This function uses a non-reentrant model
  7868 ;;
  7869                           
  7870                           	psect	text37
  7871   004B6E                     __ptext37:
  7872                           	callstack 0
  7873   004B6E                     _initialize_t:
  7874                           	callstack 29
  7875   004B6E                     
  7876                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 15:     stack->top = -1;
  7877   004B6E  5001               	movf	initialize_t@stack^0,w,c
  7878   004B70  6ED9               	movwf	fsr2l,c
  7879   004B72  6ADA               	clrf	fsr2h,c
  7880   004B74  0E50               	movlw	80
  7881   004B76  26D9               	addwf	fsr2l,f,c
  7882   004B78  0EFF               	movlw	255
  7883   004B7A  6EDE               	movwf	postinc2,c
  7884   004B7C  0EFF               	movlw	255
  7885   004B7E  6EDD               	movwf	postdec2,c
  7886   004B80  0012               	return		;funcret
  7887   004B82                     __end_of_initialize_t:
  7888                           	callstack 0
  7889                           
  7890 ;; *************** function _doMath *****************
  7891 ;; Defined at:
  7892 ;;		line 59 in file "Algorithms/Infix_to_postfix/infix_to_post.c"
  7893 ;; Parameters:    Size  Location     Type
  7894 ;;  op              1    wreg     unsigned char 
  7895 ;;  op1             4   63[COMRAM] float 
  7896 ;;  op2             4   67[COMRAM] float 
  7897 ;; Auto vars:     Size  Location     Type
  7898 ;;  op              1   71[COMRAM] unsigned char 
  7899 ;; Return value:  Size  Location     Type
  7900 ;;                  4   63[COMRAM] float 
  7901 ;; Registers used:
  7902 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7903 ;; Tracked objects:
  7904 ;;		On entry : 0/0
  7905 ;;		On exit  : 0/0
  7906 ;;		Unchanged: 0/0
  7907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7908 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7909 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7911 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7912 ;;Total ram usage:        9 bytes
  7913 ;; Hardware stack levels used: 1
  7914 ;; Hardware stack levels required when called: 2
  7915 ;; This function calls:
  7916 ;;		___fladd
  7917 ;;		___fldiv
  7918 ;;		___flmul
  7919 ;;		___flsub
  7920 ;; This function is called by:
  7921 ;;		_evaluatePostfix
  7922 ;; This function uses a non-reentrant model
  7923 ;;
  7924                           
  7925                           	psect	text38
  7926   0037C2                     __ptext38:
  7927                           	callstack 0
  7928   0037C2                     _doMath:
  7929                           	callstack 27
  7930                           
  7931                           ;incstack = 0
  7932                           ;doMath@op stored from wreg
  7933   0037C2  6E48               	movwf	doMath@op^0,c
  7934   0037C4                     
  7935                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 60:     if (op == '*')
  7936   0037C4  0E2A               	movlw	42
  7937   0037C6  1848               	xorwf	doMath@op^0,w,c
  7938   0037C8  A4D8               	btfss	status,2,c
  7939   0037CA  EFE9  F01B         	goto	u8851
  7940   0037CE  EFEB  F01B         	goto	u8850
  7941   0037D2                     u8851:
  7942   0037D2  EF07  F01C         	goto	l7979
  7943   0037D6                     u8850:
  7944   0037D6                     
  7945                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 61:         return (float)(op1*op2);
  7946   0037D6  C040  F00F         	movff	doMath@op1,___flmul@b
  7947   0037DA  C041  F010         	movff	doMath@op1+1,___flmul@b+1
  7948   0037DE  C042  F011         	movff	doMath@op1+2,___flmul@b+2
  7949   0037E2  C043  F012         	movff	doMath@op1+3,___flmul@b+3
  7950   0037E6  C044  F013         	movff	doMath@op2,___flmul@a
  7951   0037EA  C045  F014         	movff	doMath@op2+1,___flmul@a+1
  7952   0037EE  C046  F015         	movff	doMath@op2+2,___flmul@a+2
  7953   0037F2  C047  F016         	movff	doMath@op2+3,___flmul@a+3
  7954   0037F6  EC96  F011         	call	___flmul	;wreg free
  7955   0037FA  C00F  F040         	movff	?___flmul,?_doMath
  7956   0037FE  C010  F041         	movff	?___flmul+1,?_doMath+1
  7957   003802  C011  F042         	movff	?___flmul+2,?_doMath+2
  7958   003806  C012  F043         	movff	?___flmul+3,?_doMath+3
  7959   00380A  EF7E  F01C         	goto	l580
  7960   00380E                     l7979:
  7961   00380E  0E2F               	movlw	47
  7962   003810  1848               	xorwf	doMath@op^0,w,c
  7963   003812  A4D8               	btfss	status,2,c
  7964   003814  EF0E  F01C         	goto	u8861
  7965   003818  EF10  F01C         	goto	u8860
  7966   00381C                     u8861:
  7967   00381C  EF2C  F01C         	goto	l7987
  7968   003820                     u8860:
  7969   003820                     
  7970                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 63:         return (float)(op1/op2);
  7971   003820  C040  F001         	movff	doMath@op1,___fldiv@b
  7972   003824  C041  F002         	movff	doMath@op1+1,___fldiv@b+1
  7973   003828  C042  F003         	movff	doMath@op1+2,___fldiv@b+2
  7974   00382C  C043  F004         	movff	doMath@op1+3,___fldiv@b+3
  7975   003830  C044  F005         	movff	doMath@op2,___fldiv@a
  7976   003834  C045  F006         	movff	doMath@op2+1,___fldiv@a+1
  7977   003838  C046  F007         	movff	doMath@op2+2,___fldiv@a+2
  7978   00383C  C047  F008         	movff	doMath@op2+3,___fldiv@a+3
  7979   003840  ECAB  F013         	call	___fldiv	;wreg free
  7980   003844  C001  F040         	movff	?___fldiv,?_doMath
  7981   003848  C002  F041         	movff	?___fldiv+1,?_doMath+1
  7982   00384C  C003  F042         	movff	?___fldiv+2,?_doMath+2
  7983   003850  C004  F043         	movff	?___fldiv+3,?_doMath+3
  7984   003854  EF7E  F01C         	goto	l580
  7985   003858                     l7987:
  7986   003858  0E2B               	movlw	43
  7987   00385A  1848               	xorwf	doMath@op^0,w,c
  7988   00385C  A4D8               	btfss	status,2,c
  7989   00385E  EF33  F01C         	goto	u8871
  7990   003862  EF35  F01C         	goto	u8870
  7991   003866                     u8871:
  7992   003866  EF51  F01C         	goto	l7995
  7993   00386A                     u8870:
  7994   00386A                     
  7995                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 65:         return (float)(op1+op2);
  7996   00386A  C040  F028         	movff	doMath@op1,___fladd@b
  7997   00386E  C041  F029         	movff	doMath@op1+1,___fladd@b+1
  7998   003872  C042  F02A         	movff	doMath@op1+2,___fladd@b+2
  7999   003876  C043  F02B         	movff	doMath@op1+3,___fladd@b+3
  8000   00387A  C044  F02C         	movff	doMath@op2,___fladd@a
  8001   00387E  C045  F02D         	movff	doMath@op2+1,___fladd@a+1
  8002   003882  C046  F02E         	movff	doMath@op2+2,___fladd@a+2
  8003   003886  C047  F02F         	movff	doMath@op2+3,___fladd@a+3
  8004   00388A  ECF8  F00C         	call	___fladd	;wreg free
  8005   00388E  C028  F040         	movff	?___fladd,?_doMath
  8006   003892  C029  F041         	movff	?___fladd+1,?_doMath+1
  8007   003896  C02A  F042         	movff	?___fladd+2,?_doMath+2
  8008   00389A  C02B  F043         	movff	?___fladd+3,?_doMath+3
  8009   00389E  EF7E  F01C         	goto	l580
  8010   0038A2                     l7995:
  8011   0038A2  0E2D               	movlw	45
  8012   0038A4  1848               	xorwf	doMath@op^0,w,c
  8013   0038A6  A4D8               	btfss	status,2,c
  8014   0038A8  EF58  F01C         	goto	u8881
  8015   0038AC  EF5A  F01C         	goto	u8880
  8016   0038B0                     u8881:
  8017   0038B0  EF76  F01C         	goto	l583
  8018   0038B4                     u8880:
  8019   0038B4                     
  8020                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 67:         return (float)(op1-op2);
  8021   0038B4  C040  F038         	movff	doMath@op1,___flsub@b
  8022   0038B8  C041  F039         	movff	doMath@op1+1,___flsub@b+1
  8023   0038BC  C042  F03A         	movff	doMath@op1+2,___flsub@b+2
  8024   0038C0  C043  F03B         	movff	doMath@op1+3,___flsub@b+3
  8025   0038C4  C044  F03C         	movff	doMath@op2,___flsub@a
  8026   0038C8  C045  F03D         	movff	doMath@op2+1,___flsub@a+1
  8027   0038CC  C046  F03E         	movff	doMath@op2+2,___flsub@a+2
  8028   0038D0  C047  F03F         	movff	doMath@op2+3,___flsub@a+3
  8029   0038D4  ECDF  F023         	call	___flsub	;wreg free
  8030   0038D8  C038  F040         	movff	?___flsub,?_doMath
  8031   0038DC  C039  F041         	movff	?___flsub+1,?_doMath+1
  8032   0038E0  C03A  F042         	movff	?___flsub+2,?_doMath+2
  8033   0038E4  C03B  F043         	movff	?___flsub+3,?_doMath+3
  8034   0038E8  EF7E  F01C         	goto	l580
  8035   0038EC                     l583:
  8036   0038EC                     
  8037                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 68:     return 0.0;
  8038   0038EC  0E00               	movlw	0
  8039   0038EE  6E40               	movwf	?_doMath^0,c
  8040   0038F0  0E00               	movlw	0
  8041   0038F2  6E41               	movwf	(?_doMath+1)^0,c
  8042   0038F4  0E00               	movlw	0
  8043   0038F6  6E42               	movwf	(?_doMath+2)^0,c
  8044   0038F8  0E00               	movlw	0
  8045   0038FA  6E43               	movwf	(?_doMath+3)^0,c
  8046   0038FC                     l580:
  8047   0038FC  0012               	return		;funcret
  8048   0038FE                     __end_of_doMath:
  8049                           	callstack 0
  8050                           
  8051 ;; *************** function ___flsub *****************
  8052 ;; Defined at:
  8053 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
  8054 ;; Parameters:    Size  Location     Type
  8055 ;;  b               4   55[COMRAM] float 
  8056 ;;  a               4   59[COMRAM] float 
  8057 ;; Auto vars:     Size  Location     Type
  8058 ;;		None
  8059 ;; Return value:  Size  Location     Type
  8060 ;;                  4   55[COMRAM] float 
  8061 ;; Registers used:
  8062 ;;		wreg, status,2, status,0, cstack
  8063 ;; Tracked objects:
  8064 ;;		On entry : 0/0
  8065 ;;		On exit  : 0/0
  8066 ;;		Unchanged: 0/0
  8067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8068 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8071 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8072 ;;Total ram usage:        8 bytes
  8073 ;; Hardware stack levels used: 1
  8074 ;; Hardware stack levels required when called: 1
  8075 ;; This function calls:
  8076 ;;		___fladd
  8077 ;; This function is called by:
  8078 ;;		_doMath
  8079 ;;		_efgtoa
  8080 ;; This function uses a non-reentrant model
  8081 ;;
  8082                           
  8083                           	psect	text39
  8084   0047BE                     __ptext39:
  8085                           	callstack 0
  8086   0047BE                     ___flsub:
  8087                           	callstack 25
  8088   0047BE  0E00               	movlw	0
  8089   0047C0  1A3C               	xorwf	___flsub@a^0,f,c
  8090   0047C2  0E00               	movlw	0
  8091   0047C4  1A3D               	xorwf	(___flsub@a+1)^0,f,c
  8092   0047C6  0E00               	movlw	0
  8093   0047C8  1A3E               	xorwf	(___flsub@a+2)^0,f,c
  8094   0047CA  0E80               	movlw	128
  8095   0047CC  1A3F               	xorwf	(___flsub@a+3)^0,f,c
  8096   0047CE  C038  F028         	movff	___flsub@b,___fladd@b
  8097   0047D2  C039  F029         	movff	___flsub@b+1,___fladd@b+1
  8098   0047D6  C03A  F02A         	movff	___flsub@b+2,___fladd@b+2
  8099   0047DA  C03B  F02B         	movff	___flsub@b+3,___fladd@b+3
  8100   0047DE  C03C  F02C         	movff	___flsub@a,___fladd@a
  8101   0047E2  C03D  F02D         	movff	___flsub@a+1,___fladd@a+1
  8102   0047E6  C03E  F02E         	movff	___flsub@a+2,___fladd@a+2
  8103   0047EA  C03F  F02F         	movff	___flsub@a+3,___fladd@a+3
  8104   0047EE  ECF8  F00C         	call	___fladd	;wreg free
  8105   0047F2  C028  F038         	movff	?___fladd,?___flsub
  8106   0047F6  C029  F039         	movff	?___fladd+1,?___flsub+1
  8107   0047FA  C02A  F03A         	movff	?___fladd+2,?___flsub+2
  8108   0047FE  C02B  F03B         	movff	?___fladd+3,?___flsub+3
  8109   004802  0012               	return		;funcret
  8110   004804                     __end_of___flsub:
  8111                           	callstack 0
  8112                           
  8113 ;; *************** function ___fladd *****************
  8114 ;; Defined at:
  8115 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
  8116 ;; Parameters:    Size  Location     Type
  8117 ;;  b               4   39[COMRAM] float 
  8118 ;;  a               4   43[COMRAM] float 
  8119 ;; Auto vars:     Size  Location     Type
  8120 ;;  grs             1   54[COMRAM] unsigned char 
  8121 ;;  bexp            1   53[COMRAM] unsigned char 
  8122 ;;  aexp            1   52[COMRAM] unsigned char 
  8123 ;;  signs           1   51[COMRAM] unsigned char 
  8124 ;; Return value:  Size  Location     Type
  8125 ;;                  4   39[COMRAM] unsigned char 
  8126 ;; Registers used:
  8127 ;;		wreg, status,2, status,0
  8128 ;; Tracked objects:
  8129 ;;		On entry : 0/0
  8130 ;;		On exit  : 0/0
  8131 ;;		Unchanged: 0/0
  8132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8133 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8134 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8135 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8136 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8137 ;;Total ram usage:       16 bytes
  8138 ;; Hardware stack levels used: 1
  8139 ;; This function calls:
  8140 ;;		Nothing
  8141 ;; This function is called by:
  8142 ;;		_doMath
  8143 ;;		_evaluatePostfix
  8144 ;;		___flsub
  8145 ;;		_efgtoa
  8146 ;; This function uses a non-reentrant model
  8147 ;;
  8148                           
  8149                           	psect	text40
  8150   0019F0                     __ptext40:
  8151                           	callstack 0
  8152   0019F0                     ___fladd:
  8153                           	callstack 25
  8154   0019F0  502B               	movf	(___fladd@b+3)^0,w,c
  8155   0019F2  0B80               	andlw	128
  8156   0019F4  6E34               	movwf	___fladd@signs^0,c
  8157   0019F6  502B               	movf	(___fladd@b+3)^0,w,c
  8158   0019F8  242B               	addwf	(___fladd@b+3)^0,w,c
  8159   0019FA  6E36               	movwf	___fladd@bexp^0,c
  8160   0019FC  AE2A               	btfss	(___fladd@b+2)^0,7,c
  8161   0019FE  EF03  F00D         	goto	u6911
  8162   001A02  EF05  F00D         	goto	u6910
  8163   001A06                     u6911:
  8164   001A06  EF06  F00D         	goto	l6725
  8165   001A0A                     u6910:
  8166   001A0A  8036               	bsf	___fladd@bexp^0,0,c
  8167   001A0C                     l6725:
  8168   001A0C  5036               	movf	___fladd@bexp^0,w,c
  8169   001A0E  B4D8               	btfsc	status,2,c
  8170   001A10  EF0C  F00D         	goto	u6921
  8171   001A14  EF0E  F00D         	goto	u6920
  8172   001A18                     u6921:
  8173   001A18  EF23  F00D         	goto	l6735
  8174   001A1C                     u6920:
  8175   001A1C  2836               	incf	___fladd@bexp^0,w,c
  8176   001A1E  A4D8               	btfss	status,2,c
  8177   001A20  EF14  F00D         	goto	u6931
  8178   001A24  EF16  F00D         	goto	u6930
  8179   001A28                     u6931:
  8180   001A28  EF1E  F00D         	goto	l6731
  8181   001A2C                     u6930:
  8182   001A2C  0E00               	movlw	0
  8183   001A2E  6E28               	movwf	___fladd@b^0,c
  8184   001A30  0E00               	movlw	0
  8185   001A32  6E29               	movwf	(___fladd@b+1)^0,c
  8186   001A34  0E00               	movlw	0
  8187   001A36  6E2A               	movwf	(___fladd@b+2)^0,c
  8188   001A38  0E00               	movlw	0
  8189   001A3A  6E2B               	movwf	(___fladd@b+3)^0,c
  8190   001A3C                     l6731:
  8191   001A3C  8E2A               	bsf	(___fladd@b+2)^0,7,c
  8192   001A3E  0E00               	movlw	0
  8193   001A40  6E2B               	movwf	(___fladd@b+3)^0,c
  8194   001A42  EF2B  F00D         	goto	l6737
  8195   001A46                     l6735:
  8196   001A46  0E00               	movlw	0
  8197   001A48  6E28               	movwf	___fladd@b^0,c
  8198   001A4A  0E00               	movlw	0
  8199   001A4C  6E29               	movwf	(___fladd@b+1)^0,c
  8200   001A4E  0E00               	movlw	0
  8201   001A50  6E2A               	movwf	(___fladd@b+2)^0,c
  8202   001A52  0E00               	movlw	0
  8203   001A54  6E2B               	movwf	(___fladd@b+3)^0,c
  8204   001A56                     l6737:
  8205   001A56  502F               	movf	(___fladd@a+3)^0,w,c
  8206   001A58  0B80               	andlw	128
  8207   001A5A  6E35               	movwf	___fladd@aexp^0,c
  8208   001A5C  5034               	movf	___fladd@signs^0,w,c
  8209   001A5E  1835               	xorwf	___fladd@aexp^0,w,c
  8210   001A60  B4D8               	btfsc	status,2,c
  8211   001A62  EF35  F00D         	goto	u6941
  8212   001A66  EF37  F00D         	goto	u6940
  8213   001A6A                     u6941:
  8214   001A6A  EF38  F00D         	goto	l6743
  8215   001A6E                     u6940:
  8216   001A6E  8C34               	bsf	___fladd@signs^0,6,c
  8217   001A70                     l6743:
  8218   001A70  502F               	movf	(___fladd@a+3)^0,w,c
  8219   001A72  242F               	addwf	(___fladd@a+3)^0,w,c
  8220   001A74  6E35               	movwf	___fladd@aexp^0,c
  8221   001A76  AE2E               	btfss	(___fladd@a+2)^0,7,c
  8222   001A78  EF40  F00D         	goto	u6951
  8223   001A7C  EF42  F00D         	goto	u6950
  8224   001A80                     u6951:
  8225   001A80  EF43  F00D         	goto	l6749
  8226   001A84                     u6950:
  8227   001A84  8035               	bsf	___fladd@aexp^0,0,c
  8228   001A86                     l6749:
  8229   001A86  5035               	movf	___fladd@aexp^0,w,c
  8230   001A88  B4D8               	btfsc	status,2,c
  8231   001A8A  EF49  F00D         	goto	u6961
  8232   001A8E  EF4B  F00D         	goto	u6960
  8233   001A92                     u6961:
  8234   001A92  EF60  F00D         	goto	l6759
  8235   001A96                     u6960:
  8236   001A96  2835               	incf	___fladd@aexp^0,w,c
  8237   001A98  A4D8               	btfss	status,2,c
  8238   001A9A  EF51  F00D         	goto	u6971
  8239   001A9E  EF53  F00D         	goto	u6970
  8240   001AA2                     u6971:
  8241   001AA2  EF5B  F00D         	goto	l6755
  8242   001AA6                     u6970:
  8243   001AA6  0E00               	movlw	0
  8244   001AA8  6E2C               	movwf	___fladd@a^0,c
  8245   001AAA  0E00               	movlw	0
  8246   001AAC  6E2D               	movwf	(___fladd@a+1)^0,c
  8247   001AAE  0E00               	movlw	0
  8248   001AB0  6E2E               	movwf	(___fladd@a+2)^0,c
  8249   001AB2  0E00               	movlw	0
  8250   001AB4  6E2F               	movwf	(___fladd@a+3)^0,c
  8251   001AB6                     l6755:
  8252   001AB6  8E2E               	bsf	(___fladd@a+2)^0,7,c
  8253   001AB8  0E00               	movlw	0
  8254   001ABA  6E2F               	movwf	(___fladd@a+3)^0,c
  8255   001ABC  EF68  F00D         	goto	l6761
  8256   001AC0                     l6759:
  8257   001AC0  0E00               	movlw	0
  8258   001AC2  6E2C               	movwf	___fladd@a^0,c
  8259   001AC4  0E00               	movlw	0
  8260   001AC6  6E2D               	movwf	(___fladd@a+1)^0,c
  8261   001AC8  0E00               	movlw	0
  8262   001ACA  6E2E               	movwf	(___fladd@a+2)^0,c
  8263   001ACC  0E00               	movlw	0
  8264   001ACE  6E2F               	movwf	(___fladd@a+3)^0,c
  8265   001AD0                     l6761:
  8266   001AD0  5036               	movf	___fladd@bexp^0,w,c
  8267   001AD2  5C35               	subwf	___fladd@aexp^0,w,c
  8268   001AD4  B0D8               	btfsc	status,0,c
  8269   001AD6  EF6F  F00D         	goto	u6981
  8270   001ADA  EF71  F00D         	goto	u6980
  8271   001ADE                     u6981:
  8272   001ADE  EF98  F00D         	goto	l6797
  8273   001AE2                     u6980:
  8274   001AE2  AC34               	btfss	___fladd@signs^0,6,c
  8275   001AE4  EF76  F00D         	goto	u6991
  8276   001AE8  EF78  F00D         	goto	u6990
  8277   001AEC                     u6991:
  8278   001AEC  EF7A  F00D         	goto	l6767
  8279   001AF0                     u6990:
  8280   001AF0  0E80               	movlw	128
  8281   001AF2  1A34               	xorwf	___fladd@signs^0,f,c
  8282   001AF4                     l6767:
  8283   001AF4  C036  F037         	movff	___fladd@bexp,___fladd@grs
  8284   001AF8  C035  F036         	movff	___fladd@aexp,___fladd@bexp
  8285   001AFC  C037  F035         	movff	___fladd@grs,___fladd@aexp
  8286   001B00  C028  F037         	movff	___fladd@b,___fladd@grs
  8287   001B04  C02C  F028         	movff	___fladd@a,___fladd@b
  8288   001B08  C037  F02C         	movff	___fladd@grs,___fladd@a
  8289   001B0C  C029  F037         	movff	___fladd@b+1,___fladd@grs
  8290   001B10  C02D  F029         	movff	___fladd@a+1,___fladd@b+1
  8291   001B14  C037  F02D         	movff	___fladd@grs,___fladd@a+1
  8292   001B18  C02A  F037         	movff	___fladd@b+2,___fladd@grs
  8293   001B1C  C02E  F02A         	movff	___fladd@a+2,___fladd@b+2
  8294   001B20  C037  F02E         	movff	___fladd@grs,___fladd@a+2
  8295   001B24  C02B  F037         	movff	___fladd@b+3,___fladd@grs
  8296   001B28  C02F  F02B         	movff	___fladd@a+3,___fladd@b+3
  8297   001B2C  C037  F02F         	movff	___fladd@grs,___fladd@a+3
  8298   001B30                     l6797:
  8299   001B30  0E00               	movlw	0
  8300   001B32  6E37               	movwf	___fladd@grs^0,c
  8301   001B34  5036               	movf	___fladd@bexp^0,w,c
  8302   001B36  C035  F030         	movff	___fladd@aexp,??___fladd
  8303   001B3A  6A31               	clrf	(??___fladd+1)^0,c
  8304   001B3C  5E30               	subwf	??___fladd^0,f,c
  8305   001B3E  0E00               	movlw	0
  8306   001B40  5A31               	subwfb	(??___fladd+1)^0,f,c
  8307   001B42  BE31               	btfsc	(??___fladd+1)^0,7,c
  8308   001B44  EFAD  F00D         	goto	u7001
  8309   001B48  5031               	movf	(??___fladd+1)^0,w,c
  8310   001B4A  E109               	bnz	u7000
  8311   001B4C  0E1A               	movlw	26
  8312   001B4E  5C30               	subwf	??___fladd^0,w,c
  8313   001B50  A0D8               	btfss	status,0,c
  8314   001B52  EFAD  F00D         	goto	u7001
  8315   001B56  EFAF  F00D         	goto	u7000
  8316   001B5A                     u7001:
  8317   001B5A  EFE6  F00D         	goto	l1158
  8318   001B5E                     u7000:
  8319   001B5E  5028               	movf	___fladd@b^0,w,c
  8320   001B60  1029               	iorwf	(___fladd@b+1)^0,w,c
  8321   001B62  102A               	iorwf	(___fladd@b+2)^0,w,c
  8322   001B64  102B               	iorwf	(___fladd@b+3)^0,w,c
  8323   001B66  A4D8               	btfss	status,2,c
  8324   001B68  EFB8  F00D         	goto	u7011
  8325   001B6C  EFBB  F00D         	goto	u7010
  8326   001B70                     u7011:
  8327   001B70  0E01               	movlw	1
  8328   001B72  EFBC  F00D         	goto	u7020
  8329   001B76                     u7010:
  8330   001B76  0E00               	movlw	0
  8331   001B78                     u7020:
  8332   001B78  6E37               	movwf	___fladd@grs^0,c
  8333   001B7A  0E00               	movlw	0
  8334   001B7C  6E28               	movwf	___fladd@b^0,c
  8335   001B7E  0E00               	movlw	0
  8336   001B80  6E29               	movwf	(___fladd@b+1)^0,c
  8337   001B82  0E00               	movlw	0
  8338   001B84  6E2A               	movwf	(___fladd@b+2)^0,c
  8339   001B86  0E00               	movlw	0
  8340   001B88  6E2B               	movwf	(___fladd@b+3)^0,c
  8341   001B8A  C035  F036         	movff	___fladd@aexp,___fladd@bexp
  8342   001B8E  EFEF  F00D         	goto	l1157
  8343   001B92                     l1159:
  8344   001B92  A037               	btfss	___fladd@grs^0,0,c
  8345   001B94  EFCE  F00D         	goto	u7031
  8346   001B98  EFD0  F00D         	goto	u7030
  8347   001B9C                     u7031:
  8348   001B9C  EFD6  F00D         	goto	l6809
  8349   001BA0                     u7030:
  8350   001BA0  90D8               	bcf	status,0,c
  8351   001BA2  3037               	rrcf	___fladd@grs^0,w,c
  8352   001BA4  0901               	iorlw	1
  8353   001BA6  6E37               	movwf	___fladd@grs^0,c
  8354   001BA8  EFD8  F00D         	goto	l6811
  8355   001BAC                     l6809:
  8356   001BAC  90D8               	bcf	status,0,c
  8357   001BAE  3237               	rrcf	___fladd@grs^0,f,c
  8358   001BB0                     l6811:
  8359   001BB0  A028               	btfss	___fladd@b^0,0,c
  8360   001BB2  EFDD  F00D         	goto	u7041
  8361   001BB6  EFDF  F00D         	goto	u7040
  8362   001BBA                     u7041:
  8363   001BBA  EFE0  F00D         	goto	l6815
  8364   001BBE                     u7040:
  8365   001BBE  8E37               	bsf	___fladd@grs^0,7,c
  8366   001BC0                     l6815:
  8367   001BC0  342B               	rlcf	(___fladd@b+3)^0,w,c
  8368   001BC2  322B               	rrcf	(___fladd@b+3)^0,f,c
  8369   001BC4  322A               	rrcf	(___fladd@b+2)^0,f,c
  8370   001BC6  3229               	rrcf	(___fladd@b+1)^0,f,c
  8371   001BC8  3228               	rrcf	___fladd@b^0,f,c
  8372   001BCA  2A36               	incf	___fladd@bexp^0,f,c
  8373   001BCC                     l1158:
  8374   001BCC  5035               	movf	___fladd@aexp^0,w,c
  8375   001BCE  5C36               	subwf	___fladd@bexp^0,w,c
  8376   001BD0  A0D8               	btfss	status,0,c
  8377   001BD2  EFED  F00D         	goto	u7051
  8378   001BD6  EFEF  F00D         	goto	u7050
  8379   001BDA                     u7051:
  8380   001BDA  EFC9  F00D         	goto	l1159
  8381   001BDE                     u7050:
  8382   001BDE                     l1157:
  8383   001BDE  BC34               	btfsc	___fladd@signs^0,6,c
  8384   001BE0  EFF4  F00D         	goto	u7061
  8385   001BE4  EFF6  F00D         	goto	u7060
  8386   001BE8                     u7061:
  8387   001BE8  EF36  F00E         	goto	l6843
  8388   001BEC                     u7060:
  8389   001BEC  5036               	movf	___fladd@bexp^0,w,c
  8390   001BEE  A4D8               	btfss	status,2,c
  8391   001BF0  EFFC  F00D         	goto	u7071
  8392   001BF4  EFFE  F00D         	goto	u7070
  8393   001BF8                     u7071:
  8394   001BF8  EF08  F00E         	goto	l6825
  8395   001BFC                     u7070:
  8396   001BFC  0E00               	movlw	0
  8397   001BFE  6E28               	movwf	?___fladd^0,c
  8398   001C00  0E00               	movlw	0
  8399   001C02  6E29               	movwf	(?___fladd+1)^0,c
  8400   001C04  0E00               	movlw	0
  8401   001C06  6E2A               	movwf	(?___fladd+2)^0,c
  8402   001C08  0E00               	movlw	0
  8403   001C0A  6E2B               	movwf	(?___fladd+3)^0,c
  8404   001C0C  EF57  F00F         	goto	l1166
  8405   001C10                     l6825:
  8406   001C10  502C               	movf	___fladd@a^0,w,c
  8407   001C12  2628               	addwf	___fladd@b^0,f,c
  8408   001C14  502D               	movf	(___fladd@a+1)^0,w,c
  8409   001C16  2229               	addwfc	(___fladd@b+1)^0,f,c
  8410   001C18  502E               	movf	(___fladd@a+2)^0,w,c
  8411   001C1A  222A               	addwfc	(___fladd@b+2)^0,f,c
  8412   001C1C  502F               	movf	(___fladd@a+3)^0,w,c
  8413   001C1E  222B               	addwfc	(___fladd@b+3)^0,f,c
  8414   001C20  A02B               	btfss	(___fladd@b+3)^0,0,c
  8415   001C22  EF15  F00E         	goto	u7081
  8416   001C26  EF17  F00E         	goto	u7080
  8417   001C2A                     u7081:
  8418   001C2A  EFC3  F00E         	goto	l6879
  8419   001C2E                     u7080:
  8420   001C2E  A037               	btfss	___fladd@grs^0,0,c
  8421   001C30  EF1C  F00E         	goto	u7091
  8422   001C34  EF1E  F00E         	goto	u7090
  8423   001C38                     u7091:
  8424   001C38  EF24  F00E         	goto	l6833
  8425   001C3C                     u7090:
  8426   001C3C  90D8               	bcf	status,0,c
  8427   001C3E  3037               	rrcf	___fladd@grs^0,w,c
  8428   001C40  0901               	iorlw	1
  8429   001C42  6E37               	movwf	___fladd@grs^0,c
  8430   001C44  EF26  F00E         	goto	l6835
  8431   001C48                     l6833:
  8432   001C48  90D8               	bcf	status,0,c
  8433   001C4A  3237               	rrcf	___fladd@grs^0,f,c
  8434   001C4C                     l6835:
  8435   001C4C  A028               	btfss	___fladd@b^0,0,c
  8436   001C4E  EF2B  F00E         	goto	u7101
  8437   001C52  EF2D  F00E         	goto	u7100
  8438   001C56                     u7101:
  8439   001C56  EF2E  F00E         	goto	l6839
  8440   001C5A                     u7100:
  8441   001C5A  8E37               	bsf	___fladd@grs^0,7,c
  8442   001C5C                     l6839:
  8443   001C5C  342B               	rlcf	(___fladd@b+3)^0,w,c
  8444   001C5E  322B               	rrcf	(___fladd@b+3)^0,f,c
  8445   001C60  322A               	rrcf	(___fladd@b+2)^0,f,c
  8446   001C62  3229               	rrcf	(___fladd@b+1)^0,f,c
  8447   001C64  3228               	rrcf	___fladd@b^0,f,c
  8448   001C66  2A36               	incf	___fladd@bexp^0,f,c
  8449   001C68  EFC3  F00E         	goto	l6879
  8450   001C6C                     l6843:
  8451   001C6C  502C               	movf	___fladd@a^0,w,c
  8452   001C6E  5C28               	subwf	___fladd@b^0,w,c
  8453   001C70  502D               	movf	(___fladd@a+1)^0,w,c
  8454   001C72  5829               	subwfb	(___fladd@b+1)^0,w,c
  8455   001C74  502E               	movf	(___fladd@a+2)^0,w,c
  8456   001C76  582A               	subwfb	(___fladd@b+2)^0,w,c
  8457   001C78  502B               	movf	(___fladd@b+3)^0,w,c
  8458   001C7A  0A80               	xorlw	128
  8459   001C7C  6E30               	movwf	??___fladd^0,c
  8460   001C7E  502F               	movf	(___fladd@a+3)^0,w,c
  8461   001C80  0A80               	xorlw	128
  8462   001C82  5830               	subwfb	??___fladd^0,w,c
  8463   001C84  B0D8               	btfsc	status,0,c
  8464   001C86  EF47  F00E         	goto	u7111
  8465   001C8A  EF49  F00E         	goto	u7110
  8466   001C8E                     u7111:
  8467   001C8E  EF74  F00E         	goto	l6853
  8468   001C92                     u7110:
  8469   001C92  5028               	movf	___fladd@b^0,w,c
  8470   001C94  5C2C               	subwf	___fladd@a^0,w,c
  8471   001C96  6E30               	movwf	??___fladd^0,c
  8472   001C98  5029               	movf	(___fladd@b+1)^0,w,c
  8473   001C9A  582D               	subwfb	(___fladd@a+1)^0,w,c
  8474   001C9C  6E31               	movwf	(??___fladd+1)^0,c
  8475   001C9E  502A               	movf	(___fladd@b+2)^0,w,c
  8476   001CA0  582E               	subwfb	(___fladd@a+2)^0,w,c
  8477   001CA2  6E32               	movwf	(??___fladd+2)^0,c
  8478   001CA4  502B               	movf	(___fladd@b+3)^0,w,c
  8479   001CA6  582F               	subwfb	(___fladd@a+3)^0,w,c
  8480   001CA8  6E33               	movwf	(??___fladd+3)^0,c
  8481   001CAA  0EFF               	movlw	255
  8482   001CAC  2430               	addwf	??___fladd^0,w,c
  8483   001CAE  6E28               	movwf	___fladd@b^0,c
  8484   001CB0  0EFF               	movlw	255
  8485   001CB2  2031               	addwfc	(??___fladd+1)^0,w,c
  8486   001CB4  6E29               	movwf	(___fladd@b+1)^0,c
  8487   001CB6  0EFF               	movlw	255
  8488   001CB8  2032               	addwfc	(??___fladd+2)^0,w,c
  8489   001CBA  6E2A               	movwf	(___fladd@b+2)^0,c
  8490   001CBC  0EFF               	movlw	255
  8491   001CBE  2033               	addwfc	(??___fladd+3)^0,w,c
  8492   001CC0  6E2B               	movwf	(___fladd@b+3)^0,c
  8493   001CC2  0E80               	movlw	128
  8494   001CC4  1A34               	xorwf	___fladd@signs^0,f,c
  8495   001CC6  6C37               	negf	___fladd@grs^0,c
  8496   001CC8  5037               	movf	___fladd@grs^0,w,c
  8497   001CCA  A4D8               	btfss	status,2,c
  8498   001CCC  EF6A  F00E         	goto	u7121
  8499   001CD0  EF6C  F00E         	goto	u7120
  8500   001CD4                     u7121:
  8501   001CD4  EF7C  F00E         	goto	l1174
  8502   001CD8                     u7120:
  8503   001CD8  0E01               	movlw	1
  8504   001CDA  2628               	addwf	___fladd@b^0,f,c
  8505   001CDC  0E00               	movlw	0
  8506   001CDE  2229               	addwfc	(___fladd@b+1)^0,f,c
  8507   001CE0  222A               	addwfc	(___fladd@b+2)^0,f,c
  8508   001CE2  222B               	addwfc	(___fladd@b+3)^0,f,c
  8509   001CE4  EF7C  F00E         	goto	l1174
  8510   001CE8                     l6853:
  8511   001CE8  502C               	movf	___fladd@a^0,w,c
  8512   001CEA  5E28               	subwf	___fladd@b^0,f,c
  8513   001CEC  502D               	movf	(___fladd@a+1)^0,w,c
  8514   001CEE  5A29               	subwfb	(___fladd@b+1)^0,f,c
  8515   001CF0  502E               	movf	(___fladd@a+2)^0,w,c
  8516   001CF2  5A2A               	subwfb	(___fladd@b+2)^0,f,c
  8517   001CF4  502F               	movf	(___fladd@a+3)^0,w,c
  8518   001CF6  5A2B               	subwfb	(___fladd@b+3)^0,f,c
  8519   001CF8                     l1174:
  8520   001CF8  5028               	movf	___fladd@b^0,w,c
  8521   001CFA  1029               	iorwf	(___fladd@b+1)^0,w,c
  8522   001CFC  102A               	iorwf	(___fladd@b+2)^0,w,c
  8523   001CFE  102B               	iorwf	(___fladd@b+3)^0,w,c
  8524   001D00  A4D8               	btfss	status,2,c
  8525   001D02  EF85  F00E         	goto	u7131
  8526   001D06  EF87  F00E         	goto	u7130
  8527   001D0A                     u7131:
  8528   001D0A  EFBC  F00E         	goto	l6877
  8529   001D0E                     u7130:
  8530   001D0E  5037               	movf	___fladd@grs^0,w,c
  8531   001D10  A4D8               	btfss	status,2,c
  8532   001D12  EF8D  F00E         	goto	u7141
  8533   001D16  EF8F  F00E         	goto	u7140
  8534   001D1A                     u7141:
  8535   001D1A  EFBC  F00E         	goto	l6877
  8536   001D1E                     u7140:
  8537   001D1E  0E00               	movlw	0
  8538   001D20  6E28               	movwf	?___fladd^0,c
  8539   001D22  0E00               	movlw	0
  8540   001D24  6E29               	movwf	(?___fladd+1)^0,c
  8541   001D26  0E00               	movlw	0
  8542   001D28  6E2A               	movwf	(?___fladd+2)^0,c
  8543   001D2A  0E00               	movlw	0
  8544   001D2C  6E2B               	movwf	(?___fladd+3)^0,c
  8545   001D2E  EF57  F00F         	goto	l1166
  8546   001D32                     l6861:
  8547   001D32  90D8               	bcf	status,0,c
  8548   001D34  3628               	rlcf	___fladd@b^0,f,c
  8549   001D36  3629               	rlcf	(___fladd@b+1)^0,f,c
  8550   001D38  362A               	rlcf	(___fladd@b+2)^0,f,c
  8551   001D3A  362B               	rlcf	(___fladd@b+3)^0,f,c
  8552   001D3C  AE37               	btfss	___fladd@grs^0,7,c
  8553   001D3E  EFA3  F00E         	goto	u7151
  8554   001D42  EFA5  F00E         	goto	u7150
  8555   001D46                     u7151:
  8556   001D46  EFA6  F00E         	goto	l6867
  8557   001D4A                     u7150:
  8558   001D4A  8028               	bsf	___fladd@b^0,0,c
  8559   001D4C                     l6867:
  8560   001D4C  A037               	btfss	___fladd@grs^0,0,c
  8561   001D4E  EFAB  F00E         	goto	u7161
  8562   001D52  EFAD  F00E         	goto	u7160
  8563   001D56                     u7161:
  8564   001D56  EFB1  F00E         	goto	l6871
  8565   001D5A                     u7160:
  8566   001D5A  80D8               	bsf	status,0,c
  8567   001D5C  3637               	rlcf	___fladd@grs^0,f,c
  8568   001D5E  EFB3  F00E         	goto	l6873
  8569   001D62                     l6871:
  8570   001D62  90D8               	bcf	status,0,c
  8571   001D64  3637               	rlcf	___fladd@grs^0,f,c
  8572   001D66                     l6873:
  8573   001D66  5036               	movf	___fladd@bexp^0,w,c
  8574   001D68  B4D8               	btfsc	status,2,c
  8575   001D6A  EFB9  F00E         	goto	u7171
  8576   001D6E  EFBB  F00E         	goto	u7170
  8577   001D72                     u7171:
  8578   001D72  EFBC  F00E         	goto	l6877
  8579   001D76                     u7170:
  8580   001D76  0636               	decf	___fladd@bexp^0,f,c
  8581   001D78                     l6877:
  8582   001D78  AE2A               	btfss	(___fladd@b+2)^0,7,c
  8583   001D7A  EFC1  F00E         	goto	u7181
  8584   001D7E  EFC3  F00E         	goto	u7180
  8585   001D82                     u7181:
  8586   001D82  EF99  F00E         	goto	l6861
  8587   001D86                     u7180:
  8588   001D86                     l6879:
  8589   001D86  0E00               	movlw	0
  8590   001D88  6E35               	movwf	___fladd@aexp^0,c
  8591   001D8A  AE37               	btfss	___fladd@grs^0,7,c
  8592   001D8C  EFCA  F00E         	goto	u7191
  8593   001D90  EFCC  F00E         	goto	u7190
  8594   001D94                     u7191:
  8595   001D94  EFE4  F00E         	goto	l1183
  8596   001D98                     u7190:
  8597   001D98  C037  F030         	movff	___fladd@grs,??___fladd
  8598   001D9C  0E7F               	movlw	127
  8599   001D9E  1630               	andwf	??___fladd^0,f,c
  8600   001DA0  B4D8               	btfsc	status,2,c
  8601   001DA2  EFD5  F00E         	goto	u7201
  8602   001DA6  EFD7  F00E         	goto	u7200
  8603   001DAA                     u7201:
  8604   001DAA  EFDB  F00E         	goto	l1184
  8605   001DAE                     u7200:
  8606   001DAE                     l6885:
  8607   001DAE  0E01               	movlw	1
  8608   001DB0  6E35               	movwf	___fladd@aexp^0,c
  8609   001DB2  EFE4  F00E         	goto	l1183
  8610   001DB6                     l1184:
  8611   001DB6  A028               	btfss	___fladd@b^0,0,c
  8612   001DB8  EFE0  F00E         	goto	u7211
  8613   001DBC  EFE2  F00E         	goto	u7210
  8614   001DC0                     u7211:
  8615   001DC0  EFE4  F00E         	goto	l1183
  8616   001DC4                     u7210:
  8617   001DC4  EFD7  F00E         	goto	l6885
  8618   001DC8                     l1183:
  8619   001DC8  5035               	movf	___fladd@aexp^0,w,c
  8620   001DCA  B4D8               	btfsc	status,2,c
  8621   001DCC  EFEA  F00E         	goto	u7221
  8622   001DD0  EFEC  F00E         	goto	u7220
  8623   001DD4                     u7221:
  8624   001DD4  EF17  F00F         	goto	l6897
  8625   001DD8                     u7220:
  8626   001DD8  0E01               	movlw	1
  8627   001DDA  2628               	addwf	___fladd@b^0,f,c
  8628   001DDC  0E00               	movlw	0
  8629   001DDE  2229               	addwfc	(___fladd@b+1)^0,f,c
  8630   001DE0  222A               	addwfc	(___fladd@b+2)^0,f,c
  8631   001DE2  222B               	addwfc	(___fladd@b+3)^0,f,c
  8632   001DE4  A02B               	btfss	(___fladd@b+3)^0,0,c
  8633   001DE6  EFF7  F00E         	goto	u7231
  8634   001DEA  EFF9  F00E         	goto	u7230
  8635   001DEE                     u7231:
  8636   001DEE  EF17  F00F         	goto	l6897
  8637   001DF2                     u7230:
  8638   001DF2  C028  F030         	movff	___fladd@b,??___fladd
  8639   001DF6  C029  F031         	movff	___fladd@b+1,??___fladd+1
  8640   001DFA  C02A  F032         	movff	___fladd@b+2,??___fladd+2
  8641   001DFE  C02B  F033         	movff	___fladd@b+3,??___fladd+3
  8642   001E02  3433               	rlcf	(??___fladd+3)^0,w,c
  8643   001E04  3233               	rrcf	(??___fladd+3)^0,f,c
  8644   001E06  3232               	rrcf	(??___fladd+2)^0,f,c
  8645   001E08  3231               	rrcf	(??___fladd+1)^0,f,c
  8646   001E0A  3230               	rrcf	??___fladd^0,f,c
  8647   001E0C  C030  F028         	movff	??___fladd,___fladd@b
  8648   001E10  C031  F029         	movff	??___fladd+1,___fladd@b+1
  8649   001E14  C032  F02A         	movff	??___fladd+2,___fladd@b+2
  8650   001E18  C033  F02B         	movff	??___fladd+3,___fladd@b+3
  8651   001E1C  2836               	incf	___fladd@bexp^0,w,c
  8652   001E1E  B4D8               	btfsc	status,2,c
  8653   001E20  EF14  F00F         	goto	u7241
  8654   001E24  EF16  F00F         	goto	u7240
  8655   001E28                     u7241:
  8656   001E28  EF17  F00F         	goto	l6897
  8657   001E2C                     u7240:
  8658   001E2C  2A36               	incf	___fladd@bexp^0,f,c
  8659   001E2E                     l6897:
  8660   001E2E  2836               	incf	___fladd@bexp^0,w,c
  8661   001E30  B4D8               	btfsc	status,2,c
  8662   001E32  EF1D  F00F         	goto	u7251
  8663   001E36  EF1F  F00F         	goto	u7250
  8664   001E3A                     u7251:
  8665   001E3A  EF27  F00F         	goto	l6901
  8666   001E3E                     u7250:
  8667   001E3E  5036               	movf	___fladd@bexp^0,w,c
  8668   001E40  A4D8               	btfss	status,2,c
  8669   001E42  EF25  F00F         	goto	u7261
  8670   001E46  EF27  F00F         	goto	u7260
  8671   001E4A                     u7261:
  8672   001E4A  EF39  F00F         	goto	l6905
  8673   001E4E                     u7260:
  8674   001E4E                     l6901:
  8675   001E4E  0E00               	movlw	0
  8676   001E50  6E28               	movwf	___fladd@b^0,c
  8677   001E52  0E00               	movlw	0
  8678   001E54  6E29               	movwf	(___fladd@b+1)^0,c
  8679   001E56  0E00               	movlw	0
  8680   001E58  6E2A               	movwf	(___fladd@b+2)^0,c
  8681   001E5A  0E00               	movlw	0
  8682   001E5C  6E2B               	movwf	(___fladd@b+3)^0,c
  8683   001E5E  5036               	movf	___fladd@bexp^0,w,c
  8684   001E60  A4D8               	btfss	status,2,c
  8685   001E62  EF35  F00F         	goto	u7271
  8686   001E66  EF37  F00F         	goto	u7270
  8687   001E6A                     u7271:
  8688   001E6A  EF39  F00F         	goto	l6905
  8689   001E6E                     u7270:
  8690   001E6E  0E00               	movlw	0
  8691   001E70  6E34               	movwf	___fladd@signs^0,c
  8692   001E72                     l6905:
  8693   001E72  A036               	btfss	___fladd@bexp^0,0,c
  8694   001E74  EF3E  F00F         	goto	u7281
  8695   001E78  EF40  F00F         	goto	u7280
  8696   001E7C                     u7281:
  8697   001E7C  EF43  F00F         	goto	l6909
  8698   001E80                     u7280:
  8699   001E80  8E2A               	bsf	(___fladd@b+2)^0,7,c
  8700   001E82  EF44  F00F         	goto	l6911
  8701   001E86                     l6909:
  8702   001E86  9E2A               	bcf	(___fladd@b+2)^0,7,c
  8703   001E88                     l6911:
  8704   001E88  90D8               	bcf	status,0,c
  8705   001E8A  3036               	rrcf	___fladd@bexp^0,w,c
  8706   001E8C  6E2B               	movwf	(___fladd@b+3)^0,c
  8707   001E8E  AE34               	btfss	___fladd@signs^0,7,c
  8708   001E90  EF4C  F00F         	goto	u7291
  8709   001E94  EF4E  F00F         	goto	u7290
  8710   001E98                     u7291:
  8711   001E98  EF4F  F00F         	goto	l6917
  8712   001E9C                     u7290:
  8713   001E9C  8E2B               	bsf	(___fladd@b+3)^0,7,c
  8714   001E9E                     l6917:
  8715   001E9E  C028  F028         	movff	___fladd@b,?___fladd
  8716   001EA2  C029  F029         	movff	___fladd@b+1,?___fladd+1
  8717   001EA6  C02A  F02A         	movff	___fladd@b+2,?___fladd+2
  8718   001EAA  C02B  F02B         	movff	___fladd@b+3,?___fladd+3
  8719   001EAE                     l1166:
  8720   001EAE  0012               	return		;funcret
  8721   001EB0                     __end_of___fladd:
  8722                           	callstack 0
  8723                           
  8724 ;; *************** function ___flmul *****************
  8725 ;; Defined at:
  8726 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcmul.c"
  8727 ;; Parameters:    Size  Location     Type
  8728 ;;  b               4   14[COMRAM] unsigned char 
  8729 ;;  a               4   18[COMRAM] unsigned char 
  8730 ;; Auto vars:     Size  Location     Type
  8731 ;;  prod            4   33[COMRAM] struct .
  8732 ;;  grs             4   28[COMRAM] unsigned long 
  8733 ;;  temp            2   37[COMRAM] struct .
  8734 ;;  bexp            1   32[COMRAM] unsigned char 
  8735 ;;  aexp            1   27[COMRAM] unsigned char 
  8736 ;;  sign            1   26[COMRAM] unsigned char 
  8737 ;; Return value:  Size  Location     Type
  8738 ;;                  4   14[COMRAM] unsigned char 
  8739 ;; Registers used:
  8740 ;;		wreg, status,2, status,0, prodl, prodh
  8741 ;; Tracked objects:
  8742 ;;		On entry : 0/0
  8743 ;;		On exit  : 0/0
  8744 ;;		Unchanged: 0/0
  8745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8746 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8747 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8748 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8749 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8750 ;;Total ram usage:       25 bytes
  8751 ;; Hardware stack levels used: 1
  8752 ;; This function calls:
  8753 ;;		Nothing
  8754 ;; This function is called by:
  8755 ;;		_doMath
  8756 ;;		_evaluatePostfix
  8757 ;;		_efgtoa
  8758 ;; This function uses a non-reentrant model
  8759 ;;
  8760                           
  8761                           	psect	text41
  8762   00232C                     __ptext41:
  8763                           	callstack 0
  8764   00232C                     ___flmul:
  8765                           	callstack 26
  8766   00232C  5012               	movf	(___flmul@b+3)^0,w,c
  8767   00232E  0B80               	andlw	128
  8768   002330  6E1B               	movwf	___flmul@sign^0,c
  8769   002332  5012               	movf	(___flmul@b+3)^0,w,c
  8770   002334  2412               	addwf	(___flmul@b+3)^0,w,c
  8771   002336  6E21               	movwf	___flmul@bexp^0,c
  8772   002338  AE11               	btfss	(___flmul@b+2)^0,7,c
  8773   00233A  EFA1  F011         	goto	u7541
  8774   00233E  EFA3  F011         	goto	u7540
  8775   002342                     u7541:
  8776   002342  EFA4  F011         	goto	l7101
  8777   002346                     u7540:
  8778   002346  8021               	bsf	___flmul@bexp^0,0,c
  8779   002348                     l7101:
  8780   002348  5021               	movf	___flmul@bexp^0,w,c
  8781   00234A  B4D8               	btfsc	status,2,c
  8782   00234C  EFAA  F011         	goto	u7551
  8783   002350  EFAC  F011         	goto	u7550
  8784   002354                     u7551:
  8785   002354  EFBF  F011         	goto	l7109
  8786   002358                     u7550:
  8787   002358  2821               	incf	___flmul@bexp^0,w,c
  8788   00235A  A4D8               	btfss	status,2,c
  8789   00235C  EFB2  F011         	goto	u7561
  8790   002360  EFB4  F011         	goto	u7560
  8791   002364                     u7561:
  8792   002364  EFBC  F011         	goto	l7107
  8793   002368                     u7560:
  8794   002368  0E00               	movlw	0
  8795   00236A  6E0F               	movwf	___flmul@b^0,c
  8796   00236C  0E00               	movlw	0
  8797   00236E  6E10               	movwf	(___flmul@b+1)^0,c
  8798   002370  0E00               	movlw	0
  8799   002372  6E11               	movwf	(___flmul@b+2)^0,c
  8800   002374  0E00               	movlw	0
  8801   002376  6E12               	movwf	(___flmul@b+3)^0,c
  8802   002378                     l7107:
  8803   002378  8E11               	bsf	(___flmul@b+2)^0,7,c
  8804   00237A  EFC7  F011         	goto	l7111
  8805   00237E                     l7109:
  8806   00237E  0E00               	movlw	0
  8807   002380  6E0F               	movwf	___flmul@b^0,c
  8808   002382  0E00               	movlw	0
  8809   002384  6E10               	movwf	(___flmul@b+1)^0,c
  8810   002386  0E00               	movlw	0
  8811   002388  6E11               	movwf	(___flmul@b+2)^0,c
  8812   00238A  0E00               	movlw	0
  8813   00238C  6E12               	movwf	(___flmul@b+3)^0,c
  8814   00238E                     l7111:
  8815   00238E  5016               	movf	(___flmul@a+3)^0,w,c
  8816   002390  0B80               	andlw	128
  8817   002392  1A1B               	xorwf	___flmul@sign^0,f,c
  8818   002394  5016               	movf	(___flmul@a+3)^0,w,c
  8819   002396  2416               	addwf	(___flmul@a+3)^0,w,c
  8820   002398  6E1C               	movwf	___flmul@aexp^0,c
  8821   00239A  AE15               	btfss	(___flmul@a+2)^0,7,c
  8822   00239C  EFD2  F011         	goto	u7571
  8823   0023A0  EFD4  F011         	goto	u7570
  8824   0023A4                     u7571:
  8825   0023A4  EFD5  F011         	goto	l7119
  8826   0023A8                     u7570:
  8827   0023A8  801C               	bsf	___flmul@aexp^0,0,c
  8828   0023AA                     l7119:
  8829   0023AA  501C               	movf	___flmul@aexp^0,w,c
  8830   0023AC  B4D8               	btfsc	status,2,c
  8831   0023AE  EFDB  F011         	goto	u7581
  8832   0023B2  EFDD  F011         	goto	u7580
  8833   0023B6                     u7581:
  8834   0023B6  EFF0  F011         	goto	l7127
  8835   0023BA                     u7580:
  8836   0023BA  281C               	incf	___flmul@aexp^0,w,c
  8837   0023BC  A4D8               	btfss	status,2,c
  8838   0023BE  EFE3  F011         	goto	u7591
  8839   0023C2  EFE5  F011         	goto	u7590
  8840   0023C6                     u7591:
  8841   0023C6  EFED  F011         	goto	l7125
  8842   0023CA                     u7590:
  8843   0023CA  0E00               	movlw	0
  8844   0023CC  6E13               	movwf	___flmul@a^0,c
  8845   0023CE  0E00               	movlw	0
  8846   0023D0  6E14               	movwf	(___flmul@a+1)^0,c
  8847   0023D2  0E00               	movlw	0
  8848   0023D4  6E15               	movwf	(___flmul@a+2)^0,c
  8849   0023D6  0E00               	movlw	0
  8850   0023D8  6E16               	movwf	(___flmul@a+3)^0,c
  8851   0023DA                     l7125:
  8852   0023DA  8E15               	bsf	(___flmul@a+2)^0,7,c
  8853   0023DC  EFF8  F011         	goto	l1243
  8854   0023E0                     l7127:
  8855   0023E0  0E00               	movlw	0
  8856   0023E2  6E13               	movwf	___flmul@a^0,c
  8857   0023E4  0E00               	movlw	0
  8858   0023E6  6E14               	movwf	(___flmul@a+1)^0,c
  8859   0023E8  0E00               	movlw	0
  8860   0023EA  6E15               	movwf	(___flmul@a+2)^0,c
  8861   0023EC  0E00               	movlw	0
  8862   0023EE  6E16               	movwf	(___flmul@a+3)^0,c
  8863   0023F0                     l1243:
  8864   0023F0  501C               	movf	___flmul@aexp^0,w,c
  8865   0023F2  B4D8               	btfsc	status,2,c
  8866   0023F4  EFFE  F011         	goto	u7601
  8867   0023F8  EF00  F012         	goto	u7600
  8868   0023FC                     u7601:
  8869   0023FC  EF08  F012         	goto	l7131
  8870   002400                     u7600:
  8871   002400  5021               	movf	___flmul@bexp^0,w,c
  8872   002402  A4D8               	btfss	status,2,c
  8873   002404  EF06  F012         	goto	u7611
  8874   002408  EF08  F012         	goto	u7610
  8875   00240C                     u7611:
  8876   00240C  EF12  F012         	goto	l7135
  8877   002410                     u7610:
  8878   002410                     l7131:
  8879   002410  0E00               	movlw	0
  8880   002412  6E0F               	movwf	?___flmul^0,c
  8881   002414  0E00               	movlw	0
  8882   002416  6E10               	movwf	(?___flmul+1)^0,c
  8883   002418  0E00               	movlw	0
  8884   00241A  6E11               	movwf	(?___flmul+2)^0,c
  8885   00241C  0E00               	movlw	0
  8886   00241E  6E12               	movwf	(?___flmul+3)^0,c
  8887   002420  EFAA  F013         	goto	l1247
  8888   002424                     l7135:
  8889   002424  5015               	movf	(___flmul@a+2)^0,w,c
  8890   002426  020F               	mulwf	___flmul@b^0,c
  8891   002428  CFF3 F026          	movff	prodl,___flmul@temp
  8892   00242C  CFF4 F027          	movff	prodh,___flmul@temp+1
  8893   002430  5026               	movf	___flmul@temp^0,w,c
  8894   002432  6E1D               	movwf	___flmul@grs^0,c
  8895   002434  6A1E               	clrf	(___flmul@grs+1)^0,c
  8896   002436  6A1F               	clrf	(___flmul@grs+2)^0,c
  8897   002438  6A20               	clrf	(___flmul@grs+3)^0,c
  8898   00243A  5027               	movf	(___flmul@temp+1)^0,w,c
  8899   00243C  6E22               	movwf	___flmul@prod^0,c
  8900   00243E  6A23               	clrf	(___flmul@prod+1)^0,c
  8901   002440  6A24               	clrf	(___flmul@prod+2)^0,c
  8902   002442  6A25               	clrf	(___flmul@prod+3)^0,c
  8903   002444  5014               	movf	(___flmul@a+1)^0,w,c
  8904   002446  0210               	mulwf	(___flmul@b+1)^0,c
  8905   002448  CFF3 F026          	movff	prodl,___flmul@temp
  8906   00244C  CFF4 F027          	movff	prodh,___flmul@temp+1
  8907   002450  5026               	movf	___flmul@temp^0,w,c
  8908   002452  261D               	addwf	___flmul@grs^0,f,c
  8909   002454  0E00               	movlw	0
  8910   002456  221E               	addwfc	(___flmul@grs+1)^0,f,c
  8911   002458  221F               	addwfc	(___flmul@grs+2)^0,f,c
  8912   00245A  2220               	addwfc	(___flmul@grs+3)^0,f,c
  8913   00245C  5027               	movf	(___flmul@temp+1)^0,w,c
  8914   00245E  2622               	addwf	___flmul@prod^0,f,c
  8915   002460  0E00               	movlw	0
  8916   002462  2223               	addwfc	(___flmul@prod+1)^0,f,c
  8917   002464  2224               	addwfc	(___flmul@prod+2)^0,f,c
  8918   002466  2225               	addwfc	(___flmul@prod+3)^0,f,c
  8919   002468  5013               	movf	___flmul@a^0,w,c
  8920   00246A  0211               	mulwf	(___flmul@b+2)^0,c
  8921   00246C  CFF3 F026          	movff	prodl,___flmul@temp
  8922   002470  CFF4 F027          	movff	prodh,___flmul@temp+1
  8923   002474  5026               	movf	___flmul@temp^0,w,c
  8924   002476  261D               	addwf	___flmul@grs^0,f,c
  8925   002478  0E00               	movlw	0
  8926   00247A  221E               	addwfc	(___flmul@grs+1)^0,f,c
  8927   00247C  221F               	addwfc	(___flmul@grs+2)^0,f,c
  8928   00247E  2220               	addwfc	(___flmul@grs+3)^0,f,c
  8929   002480  5027               	movf	(___flmul@temp+1)^0,w,c
  8930   002482  2622               	addwf	___flmul@prod^0,f,c
  8931   002484  0E00               	movlw	0
  8932   002486  2223               	addwfc	(___flmul@prod+1)^0,f,c
  8933   002488  2224               	addwfc	(___flmul@prod+2)^0,f,c
  8934   00248A  2225               	addwfc	(___flmul@prod+3)^0,f,c
  8935   00248C  C01F  F020         	movff	___flmul@grs+2,___flmul@grs+3
  8936   002490  C01E  F01F         	movff	___flmul@grs+1,___flmul@grs+2
  8937   002494  C01D  F01E         	movff	___flmul@grs,___flmul@grs+1
  8938   002498  6A1D               	clrf	___flmul@grs^0,c
  8939   00249A  5013               	movf	___flmul@a^0,w,c
  8940   00249C  0210               	mulwf	(___flmul@b+1)^0,c
  8941   00249E  CFF3 F026          	movff	prodl,___flmul@temp
  8942   0024A2  CFF4 F027          	movff	prodh,___flmul@temp+1
  8943   0024A6  5026               	movf	___flmul@temp^0,w,c
  8944   0024A8  261D               	addwf	___flmul@grs^0,f,c
  8945   0024AA  5027               	movf	(___flmul@temp+1)^0,w,c
  8946   0024AC  221E               	addwfc	(___flmul@grs+1)^0,f,c
  8947   0024AE  0E00               	movlw	0
  8948   0024B0  221F               	addwfc	(___flmul@grs+2)^0,f,c
  8949   0024B2  0E00               	movlw	0
  8950   0024B4  2220               	addwfc	(___flmul@grs+3)^0,f,c
  8951   0024B6  5014               	movf	(___flmul@a+1)^0,w,c
  8952   0024B8  020F               	mulwf	___flmul@b^0,c
  8953   0024BA  CFF3 F026          	movff	prodl,___flmul@temp
  8954   0024BE  CFF4 F027          	movff	prodh,___flmul@temp+1
  8955   0024C2  5026               	movf	___flmul@temp^0,w,c
  8956   0024C4  261D               	addwf	___flmul@grs^0,f,c
  8957   0024C6  5027               	movf	(___flmul@temp+1)^0,w,c
  8958   0024C8  221E               	addwfc	(___flmul@grs+1)^0,f,c
  8959   0024CA  0E00               	movlw	0
  8960   0024CC  221F               	addwfc	(___flmul@grs+2)^0,f,c
  8961   0024CE  0E00               	movlw	0
  8962   0024D0  2220               	addwfc	(___flmul@grs+3)^0,f,c
  8963   0024D2  C01F  F020         	movff	___flmul@grs+2,___flmul@grs+3
  8964   0024D6  C01E  F01F         	movff	___flmul@grs+1,___flmul@grs+2
  8965   0024DA  C01D  F01E         	movff	___flmul@grs,___flmul@grs+1
  8966   0024DE  6A1D               	clrf	___flmul@grs^0,c
  8967   0024E0  5013               	movf	___flmul@a^0,w,c
  8968   0024E2  020F               	mulwf	___flmul@b^0,c
  8969   0024E4  CFF3 F026          	movff	prodl,___flmul@temp
  8970   0024E8  CFF4 F027          	movff	prodh,___flmul@temp+1
  8971   0024EC  5026               	movf	___flmul@temp^0,w,c
  8972   0024EE  261D               	addwf	___flmul@grs^0,f,c
  8973   0024F0  5027               	movf	(___flmul@temp+1)^0,w,c
  8974   0024F2  221E               	addwfc	(___flmul@grs+1)^0,f,c
  8975   0024F4  0E00               	movlw	0
  8976   0024F6  221F               	addwfc	(___flmul@grs+2)^0,f,c
  8977   0024F8  0E00               	movlw	0
  8978   0024FA  2220               	addwfc	(___flmul@grs+3)^0,f,c
  8979   0024FC  5015               	movf	(___flmul@a+2)^0,w,c
  8980   0024FE  0210               	mulwf	(___flmul@b+1)^0,c
  8981   002500  CFF3 F026          	movff	prodl,___flmul@temp
  8982   002504  CFF4 F027          	movff	prodh,___flmul@temp+1
  8983   002508  5026               	movf	___flmul@temp^0,w,c
  8984   00250A  2622               	addwf	___flmul@prod^0,f,c
  8985   00250C  5027               	movf	(___flmul@temp+1)^0,w,c
  8986   00250E  2223               	addwfc	(___flmul@prod+1)^0,f,c
  8987   002510  0E00               	movlw	0
  8988   002512  2224               	addwfc	(___flmul@prod+2)^0,f,c
  8989   002514  0E00               	movlw	0
  8990   002516  2225               	addwfc	(___flmul@prod+3)^0,f,c
  8991   002518  5014               	movf	(___flmul@a+1)^0,w,c
  8992   00251A  0211               	mulwf	(___flmul@b+2)^0,c
  8993   00251C  CFF3 F026          	movff	prodl,___flmul@temp
  8994   002520  CFF4 F027          	movff	prodh,___flmul@temp+1
  8995   002524  5026               	movf	___flmul@temp^0,w,c
  8996   002526  2622               	addwf	___flmul@prod^0,f,c
  8997   002528  5027               	movf	(___flmul@temp+1)^0,w,c
  8998   00252A  2223               	addwfc	(___flmul@prod+1)^0,f,c
  8999   00252C  0E00               	movlw	0
  9000   00252E  2224               	addwfc	(___flmul@prod+2)^0,f,c
  9001   002530  0E00               	movlw	0
  9002   002532  2225               	addwfc	(___flmul@prod+3)^0,f,c
  9003   002534  5015               	movf	(___flmul@a+2)^0,w,c
  9004   002536  0211               	mulwf	(___flmul@b+2)^0,c
  9005   002538  CFF3 F026          	movff	prodl,___flmul@temp
  9006   00253C  CFF4 F027          	movff	prodh,___flmul@temp+1
  9007   002540  5026               	movf	___flmul@temp^0,w,c
  9008   002542  6E17               	movwf	??___flmul^0,c
  9009   002544  5027               	movf	(___flmul@temp+1)^0,w,c
  9010   002546  6E18               	movwf	(??___flmul+1)^0,c
  9011   002548  6A19               	clrf	(??___flmul+2)^0,c
  9012   00254A  6A1A               	clrf	(??___flmul+3)^0,c
  9013   00254C  C019  F01A         	movff	??___flmul+2,??___flmul+3
  9014   002550  C018  F019         	movff	??___flmul+1,??___flmul+2
  9015   002554  C017  F018         	movff	??___flmul,??___flmul+1
  9016   002558  6A17               	clrf	??___flmul^0,c
  9017   00255A  5017               	movf	??___flmul^0,w,c
  9018   00255C  2622               	addwf	___flmul@prod^0,f,c
  9019   00255E  5018               	movf	(??___flmul+1)^0,w,c
  9020   002560  2223               	addwfc	(___flmul@prod+1)^0,f,c
  9021   002562  5019               	movf	(??___flmul+2)^0,w,c
  9022   002564  2224               	addwfc	(___flmul@prod+2)^0,f,c
  9023   002566  501A               	movf	(??___flmul+3)^0,w,c
  9024   002568  2225               	addwfc	(___flmul@prod+3)^0,f,c
  9025   00256A  C01D  F017         	movff	___flmul@grs,??___flmul
  9026   00256E  C01E  F018         	movff	___flmul@grs+1,??___flmul+1
  9027   002572  C01F  F019         	movff	___flmul@grs+2,??___flmul+2
  9028   002576  C020  F01A         	movff	___flmul@grs+3,??___flmul+3
  9029   00257A  0E19               	movlw	25
  9030   00257C  EFC5  F012         	goto	u7620
  9031   002580                     u7625:
  9032   002580  90D8               	bcf	status,0,c
  9033   002582  321A               	rrcf	(??___flmul+3)^0,f,c
  9034   002584  3219               	rrcf	(??___flmul+2)^0,f,c
  9035   002586  3218               	rrcf	(??___flmul+1)^0,f,c
  9036   002588  3217               	rrcf	??___flmul^0,f,c
  9037   00258A                     u7620:
  9038   00258A  2EE8               	decfsz	wreg,f,c
  9039   00258C  EFC0  F012         	goto	u7625
  9040   002590  5017               	movf	??___flmul^0,w,c
  9041   002592  2622               	addwf	___flmul@prod^0,f,c
  9042   002594  5018               	movf	(??___flmul+1)^0,w,c
  9043   002596  2223               	addwfc	(___flmul@prod+1)^0,f,c
  9044   002598  5019               	movf	(??___flmul+2)^0,w,c
  9045   00259A  2224               	addwfc	(___flmul@prod+2)^0,f,c
  9046   00259C  501A               	movf	(??___flmul+3)^0,w,c
  9047   00259E  2225               	addwfc	(___flmul@prod+3)^0,f,c
  9048   0025A0  C01F  F020         	movff	___flmul@grs+2,___flmul@grs+3
  9049   0025A4  C01E  F01F         	movff	___flmul@grs+1,___flmul@grs+2
  9050   0025A8  C01D  F01E         	movff	___flmul@grs,___flmul@grs+1
  9051   0025AC  6A1D               	clrf	___flmul@grs^0,c
  9052   0025AE  501C               	movf	___flmul@aexp^0,w,c
  9053   0025B0  C021  F017         	movff	___flmul@bexp,??___flmul
  9054   0025B4  6A18               	clrf	(??___flmul+1)^0,c
  9055   0025B6  2617               	addwf	??___flmul^0,f,c
  9056   0025B8  0E00               	movlw	0
  9057   0025BA  2218               	addwfc	(??___flmul+1)^0,f,c
  9058   0025BC  0E82               	movlw	130
  9059   0025BE  2417               	addwf	??___flmul^0,w,c
  9060   0025C0  6E26               	movwf	___flmul@temp^0,c
  9061   0025C2  0EFF               	movlw	255
  9062   0025C4  2018               	addwfc	(??___flmul+1)^0,w,c
  9063   0025C6  6E27               	movwf	(___flmul@temp+1)^0,c
  9064   0025C8  EFFB  F012         	goto	l7183
  9065   0025CC                     l7177:
  9066   0025CC  90D8               	bcf	status,0,c
  9067   0025CE  3622               	rlcf	___flmul@prod^0,f,c
  9068   0025D0  3623               	rlcf	(___flmul@prod+1)^0,f,c
  9069   0025D2  3624               	rlcf	(___flmul@prod+2)^0,f,c
  9070   0025D4  3625               	rlcf	(___flmul@prod+3)^0,f,c
  9071   0025D6  AE20               	btfss	(___flmul@grs+3)^0,7,c
  9072   0025D8  EFF0  F012         	goto	u7631
  9073   0025DC  EFF2  F012         	goto	u7630
  9074   0025E0                     u7631:
  9075   0025E0  EFF3  F012         	goto	l1250
  9076   0025E4                     u7630:
  9077   0025E4  8022               	bsf	___flmul@prod^0,0,c
  9078   0025E6                     l1250:
  9079   0025E6  90D8               	bcf	status,0,c
  9080   0025E8  361D               	rlcf	___flmul@grs^0,f,c
  9081   0025EA  361E               	rlcf	(___flmul@grs+1)^0,f,c
  9082   0025EC  361F               	rlcf	(___flmul@grs+2)^0,f,c
  9083   0025EE  3620               	rlcf	(___flmul@grs+3)^0,f,c
  9084   0025F0  0626               	decf	___flmul@temp^0,f,c
  9085   0025F2  A0D8               	btfss	status,0,c
  9086   0025F4  0627               	decf	(___flmul@temp+1)^0,f,c
  9087   0025F6                     l7183:
  9088   0025F6  AE24               	btfss	(___flmul@prod+2)^0,7,c
  9089   0025F8  EF00  F013         	goto	u7641
  9090   0025FC  EF02  F013         	goto	u7640
  9091   002600                     u7641:
  9092   002600  EFE6  F012         	goto	l7177
  9093   002604                     u7640:
  9094   002604  0E00               	movlw	0
  9095   002606  6E1C               	movwf	___flmul@aexp^0,c
  9096   002608  AE20               	btfss	(___flmul@grs+3)^0,7,c
  9097   00260A  EF09  F013         	goto	u7651
  9098   00260E  EF0B  F013         	goto	u7650
  9099   002612                     u7651:
  9100   002612  EF2F  F013         	goto	l1252
  9101   002616                     u7650:
  9102   002616  0EFF               	movlw	255
  9103   002618  141D               	andwf	___flmul@grs^0,w,c
  9104   00261A  6E17               	movwf	??___flmul^0,c
  9105   00261C  0EFF               	movlw	255
  9106   00261E  141E               	andwf	(___flmul@grs+1)^0,w,c
  9107   002620  6E18               	movwf	(??___flmul+1)^0,c
  9108   002622  0EFF               	movlw	255
  9109   002624  141F               	andwf	(___flmul@grs+2)^0,w,c
  9110   002626  6E19               	movwf	(??___flmul+2)^0,c
  9111   002628  0E7F               	movlw	127
  9112   00262A  1420               	andwf	(___flmul@grs+3)^0,w,c
  9113   00262C  6E1A               	movwf	(??___flmul+3)^0,c
  9114   00262E  5017               	movf	??___flmul^0,w,c
  9115   002630  1018               	iorwf	(??___flmul+1)^0,w,c
  9116   002632  1019               	iorwf	(??___flmul+2)^0,w,c
  9117   002634  101A               	iorwf	(??___flmul+3)^0,w,c
  9118   002636  B4D8               	btfsc	status,2,c
  9119   002638  EF20  F013         	goto	u7661
  9120   00263C  EF22  F013         	goto	u7660
  9121   002640                     u7661:
  9122   002640  EF26  F013         	goto	l1253
  9123   002644                     u7660:
  9124   002644                     l7191:
  9125   002644  0E01               	movlw	1
  9126   002646  6E1C               	movwf	___flmul@aexp^0,c
  9127   002648  EF2F  F013         	goto	l1252
  9128   00264C                     l1253:
  9129   00264C  A022               	btfss	___flmul@prod^0,0,c
  9130   00264E  EF2B  F013         	goto	u7671
  9131   002652  EF2D  F013         	goto	u7670
  9132   002656                     u7671:
  9133   002656  EF2F  F013         	goto	l1252
  9134   00265A                     u7670:
  9135   00265A  EF22  F013         	goto	l7191
  9136   00265E                     l1252:
  9137   00265E  501C               	movf	___flmul@aexp^0,w,c
  9138   002660  B4D8               	btfsc	status,2,c
  9139   002662  EF35  F013         	goto	u7681
  9140   002666  EF37  F013         	goto	u7680
  9141   00266A                     u7681:
  9142   00266A  EF5B  F013         	goto	l7203
  9143   00266E                     u7680:
  9144   00266E  0E01               	movlw	1
  9145   002670  2622               	addwf	___flmul@prod^0,f,c
  9146   002672  0E00               	movlw	0
  9147   002674  2223               	addwfc	(___flmul@prod+1)^0,f,c
  9148   002676  2224               	addwfc	(___flmul@prod+2)^0,f,c
  9149   002678  2225               	addwfc	(___flmul@prod+3)^0,f,c
  9150   00267A  A025               	btfss	(___flmul@prod+3)^0,0,c
  9151   00267C  EF42  F013         	goto	u7691
  9152   002680  EF44  F013         	goto	u7690
  9153   002684                     u7691:
  9154   002684  EF5B  F013         	goto	l7203
  9155   002688                     u7690:
  9156   002688  C022  F017         	movff	___flmul@prod,??___flmul
  9157   00268C  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  9158   002690  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  9159   002694  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  9160   002698  341A               	rlcf	(??___flmul+3)^0,w,c
  9161   00269A  321A               	rrcf	(??___flmul+3)^0,f,c
  9162   00269C  3219               	rrcf	(??___flmul+2)^0,f,c
  9163   00269E  3218               	rrcf	(??___flmul+1)^0,f,c
  9164   0026A0  3217               	rrcf	??___flmul^0,f,c
  9165   0026A2  C017  F022         	movff	??___flmul,___flmul@prod
  9166   0026A6  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  9167   0026AA  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  9168   0026AE  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  9169   0026B2  4A26               	infsnz	___flmul@temp^0,f,c
  9170   0026B4  2A27               	incf	(___flmul@temp+1)^0,f,c
  9171   0026B6                     l7203:
  9172   0026B6  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  9173   0026B8  EF66  F013         	goto	u7701
  9174   0026BC  5027               	movf	(___flmul@temp+1)^0,w,c
  9175   0026BE  E108               	bnz	u7700
  9176   0026C0  2826               	incf	___flmul@temp^0,w,c
  9177   0026C2  A0D8               	btfss	status,0,c
  9178   0026C4  EF66  F013         	goto	u7701
  9179   0026C8  EF68  F013         	goto	u7700
  9180   0026CC                     u7701:
  9181   0026CC  EF72  F013         	goto	l7207
  9182   0026D0                     u7700:
  9183   0026D0  0E00               	movlw	0
  9184   0026D2  6E22               	movwf	___flmul@prod^0,c
  9185   0026D4  0E00               	movlw	0
  9186   0026D6  6E23               	movwf	(___flmul@prod+1)^0,c
  9187   0026D8  0E80               	movlw	128
  9188   0026DA  6E24               	movwf	(___flmul@prod+2)^0,c
  9189   0026DC  0E7F               	movlw	127
  9190   0026DE  6E25               	movwf	(___flmul@prod+3)^0,c
  9191   0026E0  EFA0  F013         	goto	l7219
  9192   0026E4                     l7207:
  9193   0026E4  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  9194   0026E6  EF7F  F013         	goto	u7710
  9195   0026EA  5027               	movf	(___flmul@temp+1)^0,w,c
  9196   0026EC  E106               	bnz	u7711
  9197   0026EE  0426               	decf	___flmul@temp^0,w,c
  9198   0026F0  B0D8               	btfsc	status,0,c
  9199   0026F2  EF7D  F013         	goto	u7711
  9200   0026F6  EF7F  F013         	goto	u7710
  9201   0026FA                     u7711:
  9202   0026FA  EF8B  F013         	goto	l1260
  9203   0026FE                     u7710:
  9204   0026FE  0E00               	movlw	0
  9205   002700  6E22               	movwf	___flmul@prod^0,c
  9206   002702  0E00               	movlw	0
  9207   002704  6E23               	movwf	(___flmul@prod+1)^0,c
  9208   002706  0E00               	movlw	0
  9209   002708  6E24               	movwf	(___flmul@prod+2)^0,c
  9210   00270A  0E00               	movlw	0
  9211   00270C  6E25               	movwf	(___flmul@prod+3)^0,c
  9212   00270E  0E00               	movlw	0
  9213   002710  6E1B               	movwf	___flmul@sign^0,c
  9214   002712  EFA0  F013         	goto	l7219
  9215   002716                     l1260:
  9216   002716  C026  F021         	movff	___flmul@temp,___flmul@bexp
  9217   00271A  0EFF               	movlw	255
  9218   00271C  1622               	andwf	___flmul@prod^0,f,c
  9219   00271E  0EFF               	movlw	255
  9220   002720  1623               	andwf	(___flmul@prod+1)^0,f,c
  9221   002722  0E7F               	movlw	127
  9222   002724  1624               	andwf	(___flmul@prod+2)^0,f,c
  9223   002726  0E00               	movlw	0
  9224   002728  1625               	andwf	(___flmul@prod+3)^0,f,c
  9225   00272A  A021               	btfss	___flmul@bexp^0,0,c
  9226   00272C  EF9A  F013         	goto	u7721
  9227   002730  EF9C  F013         	goto	u7720
  9228   002734                     u7721:
  9229   002734  EF9D  F013         	goto	l7217
  9230   002738                     u7720:
  9231   002738  8E24               	bsf	(___flmul@prod+2)^0,7,c
  9232   00273A                     l7217:
  9233   00273A  90D8               	bcf	status,0,c
  9234   00273C  3021               	rrcf	___flmul@bexp^0,w,c
  9235   00273E  6E25               	movwf	(___flmul@prod+3)^0,c
  9236   002740                     l7219:
  9237   002740  501B               	movf	___flmul@sign^0,w,c
  9238   002742  1225               	iorwf	(___flmul@prod+3)^0,f,c
  9239   002744  C022  F00F         	movff	___flmul@prod,?___flmul
  9240   002748  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  9241   00274C  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  9242   002750  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  9243   002754                     l1247:
  9244   002754  0012               	return		;funcret
  9245   002756                     __end_of___flmul:
  9246                           	callstack 0
  9247                           
  9248 ;; *************** function ___fldiv *****************
  9249 ;; Defined at:
  9250 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcdiv.c"
  9251 ;; Parameters:    Size  Location     Type
  9252 ;;  b               4    0[COMRAM] unsigned char 
  9253 ;;  a               4    4[COMRAM] unsigned char 
  9254 ;; Auto vars:     Size  Location     Type
  9255 ;;  grs             4   19[COMRAM] unsigned long 
  9256 ;;  rem             4   12[COMRAM] unsigned long 
  9257 ;;  new_exp         2   17[COMRAM] short 
  9258 ;;  aexp            1   24[COMRAM] unsigned char 
  9259 ;;  bexp            1   23[COMRAM] unsigned char 
  9260 ;;  sign            1   16[COMRAM] unsigned char 
  9261 ;; Return value:  Size  Location     Type
  9262 ;;                  4    0[COMRAM] unsigned char 
  9263 ;; Registers used:
  9264 ;;		wreg, status,2, status,0
  9265 ;; Tracked objects:
  9266 ;;		On entry : 0/0
  9267 ;;		On exit  : 0/0
  9268 ;;		Unchanged: 0/0
  9269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9270 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9271 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9272 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9273 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9274 ;;Total ram usage:       25 bytes
  9275 ;; Hardware stack levels used: 1
  9276 ;; This function calls:
  9277 ;;		Nothing
  9278 ;; This function is called by:
  9279 ;;		_doMath
  9280 ;;		_evaluatePostfix
  9281 ;;		_efgtoa
  9282 ;; This function uses a non-reentrant model
  9283 ;;
  9284                           
  9285                           	psect	text42
  9286   002756                     __ptext42:
  9287                           	callstack 0
  9288   002756                     ___fldiv:
  9289                           	callstack 26
  9290   002756  5004               	movf	(___fldiv@b+3)^0,w,c
  9291   002758  0B80               	andlw	128
  9292   00275A  6E11               	movwf	___fldiv@sign^0,c
  9293   00275C  5004               	movf	(___fldiv@b+3)^0,w,c
  9294   00275E  2404               	addwf	(___fldiv@b+3)^0,w,c
  9295   002760  6E18               	movwf	___fldiv@bexp^0,c
  9296   002762  AE03               	btfss	(___fldiv@b+2)^0,7,c
  9297   002764  EFB6  F013         	goto	u7311
  9298   002768  EFB8  F013         	goto	u7310
  9299   00276C                     u7311:
  9300   00276C  EFB9  F013         	goto	l6963
  9301   002770                     u7310:
  9302   002770  8018               	bsf	___fldiv@bexp^0,0,c
  9303   002772                     l6963:
  9304   002772  5018               	movf	___fldiv@bexp^0,w,c
  9305   002774  B4D8               	btfsc	status,2,c
  9306   002776  EFBF  F013         	goto	u7321
  9307   00277A  EFC1  F013         	goto	u7320
  9308   00277E                     u7321:
  9309   00277E  EFD6  F013         	goto	l6973
  9310   002782                     u7320:
  9311   002782  2818               	incf	___fldiv@bexp^0,w,c
  9312   002784  A4D8               	btfss	status,2,c
  9313   002786  EFC7  F013         	goto	u7331
  9314   00278A  EFC9  F013         	goto	u7330
  9315   00278E                     u7331:
  9316   00278E  EFD1  F013         	goto	l6969
  9317   002792                     u7330:
  9318   002792  0E00               	movlw	0
  9319   002794  6E01               	movwf	___fldiv@b^0,c
  9320   002796  0E00               	movlw	0
  9321   002798  6E02               	movwf	(___fldiv@b+1)^0,c
  9322   00279A  0E00               	movlw	0
  9323   00279C  6E03               	movwf	(___fldiv@b+2)^0,c
  9324   00279E  0E00               	movlw	0
  9325   0027A0  6E04               	movwf	(___fldiv@b+3)^0,c
  9326   0027A2                     l6969:
  9327   0027A2  8E03               	bsf	(___fldiv@b+2)^0,7,c
  9328   0027A4  0E00               	movlw	0
  9329   0027A6  6E04               	movwf	(___fldiv@b+3)^0,c
  9330   0027A8  EFDE  F013         	goto	l6975
  9331   0027AC                     l6973:
  9332   0027AC  0E00               	movlw	0
  9333   0027AE  6E01               	movwf	___fldiv@b^0,c
  9334   0027B0  0E00               	movlw	0
  9335   0027B2  6E02               	movwf	(___fldiv@b+1)^0,c
  9336   0027B4  0E00               	movlw	0
  9337   0027B6  6E03               	movwf	(___fldiv@b+2)^0,c
  9338   0027B8  0E00               	movlw	0
  9339   0027BA  6E04               	movwf	(___fldiv@b+3)^0,c
  9340   0027BC                     l6975:
  9341   0027BC  5008               	movf	(___fldiv@a+3)^0,w,c
  9342   0027BE  0B80               	andlw	128
  9343   0027C0  1A11               	xorwf	___fldiv@sign^0,f,c
  9344   0027C2  5008               	movf	(___fldiv@a+3)^0,w,c
  9345   0027C4  2408               	addwf	(___fldiv@a+3)^0,w,c
  9346   0027C6  6E19               	movwf	___fldiv@aexp^0,c
  9347   0027C8  AE07               	btfss	(___fldiv@a+2)^0,7,c
  9348   0027CA  EFE9  F013         	goto	u7341
  9349   0027CE  EFEB  F013         	goto	u7340
  9350   0027D2                     u7341:
  9351   0027D2  EFEC  F013         	goto	l6983
  9352   0027D6                     u7340:
  9353   0027D6  8019               	bsf	___fldiv@aexp^0,0,c
  9354   0027D8                     l6983:
  9355   0027D8  5019               	movf	___fldiv@aexp^0,w,c
  9356   0027DA  B4D8               	btfsc	status,2,c
  9357   0027DC  EFF2  F013         	goto	u7351
  9358   0027E0  EFF4  F013         	goto	u7350
  9359   0027E4                     u7351:
  9360   0027E4  EF09  F014         	goto	l6993
  9361   0027E8                     u7350:
  9362   0027E8  2819               	incf	___fldiv@aexp^0,w,c
  9363   0027EA  A4D8               	btfss	status,2,c
  9364   0027EC  EFFA  F013         	goto	u7361
  9365   0027F0  EFFC  F013         	goto	u7360
  9366   0027F4                     u7361:
  9367   0027F4  EF04  F014         	goto	l6989
  9368   0027F8                     u7360:
  9369   0027F8  0E00               	movlw	0
  9370   0027FA  6E05               	movwf	___fldiv@a^0,c
  9371   0027FC  0E00               	movlw	0
  9372   0027FE  6E06               	movwf	(___fldiv@a+1)^0,c
  9373   002800  0E00               	movlw	0
  9374   002802  6E07               	movwf	(___fldiv@a+2)^0,c
  9375   002804  0E00               	movlw	0
  9376   002806  6E08               	movwf	(___fldiv@a+3)^0,c
  9377   002808                     l6989:
  9378   002808  8E07               	bsf	(___fldiv@a+2)^0,7,c
  9379   00280A  0E00               	movlw	0
  9380   00280C  6E08               	movwf	(___fldiv@a+3)^0,c
  9381   00280E  EF11  F014         	goto	l6995
  9382   002812                     l6993:
  9383   002812  0E00               	movlw	0
  9384   002814  6E05               	movwf	___fldiv@a^0,c
  9385   002816  0E00               	movlw	0
  9386   002818  6E06               	movwf	(___fldiv@a+1)^0,c
  9387   00281A  0E00               	movlw	0
  9388   00281C  6E07               	movwf	(___fldiv@a+2)^0,c
  9389   00281E  0E00               	movlw	0
  9390   002820  6E08               	movwf	(___fldiv@a+3)^0,c
  9391   002822                     l6995:
  9392   002822  5005               	movf	___fldiv@a^0,w,c
  9393   002824  1006               	iorwf	(___fldiv@a+1)^0,w,c
  9394   002826  1007               	iorwf	(___fldiv@a+2)^0,w,c
  9395   002828  1008               	iorwf	(___fldiv@a+3)^0,w,c
  9396   00282A  A4D8               	btfss	status,2,c
  9397   00282C  EF1A  F014         	goto	u7371
  9398   002830  EF1C  F014         	goto	u7370
  9399   002834                     u7371:
  9400   002834  EF34  F014         	goto	l7007
  9401   002838                     u7370:
  9402   002838  0E00               	movlw	0
  9403   00283A  6E01               	movwf	___fldiv@b^0,c
  9404   00283C  0E00               	movlw	0
  9405   00283E  6E02               	movwf	(___fldiv@b+1)^0,c
  9406   002840  0E00               	movlw	0
  9407   002842  6E03               	movwf	(___fldiv@b+2)^0,c
  9408   002844  0E00               	movlw	0
  9409   002846  6E04               	movwf	(___fldiv@b+3)^0,c
  9410   002848  0E80               	movlw	128
  9411   00284A  1203               	iorwf	(___fldiv@b+2)^0,f,c
  9412   00284C  0E7F               	movlw	127
  9413   00284E  1204               	iorwf	(___fldiv@b+3)^0,f,c
  9414   002850                     l7001:
  9415   002850  5011               	movf	___fldiv@sign^0,w,c
  9416   002852  1204               	iorwf	(___fldiv@b+3)^0,f,c
  9417   002854  C001  F001         	movff	___fldiv@b,?___fldiv
  9418   002858  C002  F002         	movff	___fldiv@b+1,?___fldiv+1
  9419   00285C  C003  F003         	movff	___fldiv@b+2,?___fldiv+2
  9420   002860  C004  F004         	movff	___fldiv@b+3,?___fldiv+3
  9421   002864  EF77  F015         	goto	l1211
  9422   002868                     l7007:
  9423   002868  5018               	movf	___fldiv@bexp^0,w,c
  9424   00286A  A4D8               	btfss	status,2,c
  9425   00286C  EF3A  F014         	goto	u7381
  9426   002870  EF3C  F014         	goto	u7380
  9427   002874                     u7381:
  9428   002874  EF46  F014         	goto	l7015
  9429   002878                     u7380:
  9430   002878  0E00               	movlw	0
  9431   00287A  6E01               	movwf	?___fldiv^0,c
  9432   00287C  0E00               	movlw	0
  9433   00287E  6E02               	movwf	(?___fldiv+1)^0,c
  9434   002880  0E00               	movlw	0
  9435   002882  6E03               	movwf	(?___fldiv+2)^0,c
  9436   002884  0E00               	movlw	0
  9437   002886  6E04               	movwf	(?___fldiv+3)^0,c
  9438   002888  EF77  F015         	goto	l1211
  9439   00288C                     l7015:
  9440   00288C  5019               	movf	___fldiv@aexp^0,w,c
  9441   00288E  C018  F009         	movff	___fldiv@bexp,??___fldiv
  9442   002892  6A0A               	clrf	(??___fldiv+1)^0,c
  9443   002894  5E09               	subwf	??___fldiv^0,f,c
  9444   002896  0E00               	movlw	0
  9445   002898  5A0A               	subwfb	(??___fldiv+1)^0,f,c
  9446   00289A  0E7F               	movlw	127
  9447   00289C  2409               	addwf	??___fldiv^0,w,c
  9448   00289E  6E12               	movwf	___fldiv@new_exp^0,c
  9449   0028A0  0E00               	movlw	0
  9450   0028A2  200A               	addwfc	(??___fldiv+1)^0,w,c
  9451   0028A4  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  9452   0028A6  C001  F00D         	movff	___fldiv@b,___fldiv@rem
  9453   0028AA  C002  F00E         	movff	___fldiv@b+1,___fldiv@rem+1
  9454   0028AE  C003  F00F         	movff	___fldiv@b+2,___fldiv@rem+2
  9455   0028B2  C004  F010         	movff	___fldiv@b+3,___fldiv@rem+3
  9456   0028B6  0E00               	movlw	0
  9457   0028B8  6E01               	movwf	___fldiv@b^0,c
  9458   0028BA  0E00               	movlw	0
  9459   0028BC  6E02               	movwf	(___fldiv@b+1)^0,c
  9460   0028BE  0E00               	movlw	0
  9461   0028C0  6E03               	movwf	(___fldiv@b+2)^0,c
  9462   0028C2  0E00               	movlw	0
  9463   0028C4  6E04               	movwf	(___fldiv@b+3)^0,c
  9464   0028C6  0E00               	movlw	0
  9465   0028C8  6E14               	movwf	___fldiv@grs^0,c
  9466   0028CA  0E00               	movlw	0
  9467   0028CC  6E15               	movwf	(___fldiv@grs+1)^0,c
  9468   0028CE  0E00               	movlw	0
  9469   0028D0  6E16               	movwf	(___fldiv@grs+2)^0,c
  9470   0028D2  0E00               	movlw	0
  9471   0028D4  6E17               	movwf	(___fldiv@grs+3)^0,c
  9472   0028D6  0E00               	movlw	0
  9473   0028D8  6E19               	movwf	___fldiv@aexp^0,c
  9474   0028DA  EFA7  F014         	goto	l1213
  9475   0028DE                     l7025:
  9476   0028DE  5019               	movf	___fldiv@aexp^0,w,c
  9477   0028E0  B4D8               	btfsc	status,2,c
  9478   0028E2  EF75  F014         	goto	u7391
  9479   0028E6  EF77  F014         	goto	u7390
  9480   0028EA                     u7391:
  9481   0028EA  EF8E  F014         	goto	l7033
  9482   0028EE                     u7390:
  9483   0028EE  90D8               	bcf	status,0,c
  9484   0028F0  360D               	rlcf	___fldiv@rem^0,f,c
  9485   0028F2  360E               	rlcf	(___fldiv@rem+1)^0,f,c
  9486   0028F4  360F               	rlcf	(___fldiv@rem+2)^0,f,c
  9487   0028F6  3610               	rlcf	(___fldiv@rem+3)^0,f,c
  9488   0028F8  90D8               	bcf	status,0,c
  9489   0028FA  3601               	rlcf	___fldiv@b^0,f,c
  9490   0028FC  3602               	rlcf	(___fldiv@b+1)^0,f,c
  9491   0028FE  3603               	rlcf	(___fldiv@b+2)^0,f,c
  9492   002900  3604               	rlcf	(___fldiv@b+3)^0,f,c
  9493   002902  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  9494   002904  EF86  F014         	goto	u7401
  9495   002908  EF88  F014         	goto	u7400
  9496   00290C                     u7401:
  9497   00290C  EF89  F014         	goto	l1216
  9498   002910                     u7400:
  9499   002910  8001               	bsf	___fldiv@b^0,0,c
  9500   002912                     l1216:
  9501   002912  90D8               	bcf	status,0,c
  9502   002914  3614               	rlcf	___fldiv@grs^0,f,c
  9503   002916  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  9504   002918  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  9505   00291A  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  9506   00291C                     l7033:
  9507   00291C  5005               	movf	___fldiv@a^0,w,c
  9508   00291E  5C0D               	subwf	___fldiv@rem^0,w,c
  9509   002920  5006               	movf	(___fldiv@a+1)^0,w,c
  9510   002922  580E               	subwfb	(___fldiv@rem+1)^0,w,c
  9511   002924  5007               	movf	(___fldiv@a+2)^0,w,c
  9512   002926  580F               	subwfb	(___fldiv@rem+2)^0,w,c
  9513   002928  5008               	movf	(___fldiv@a+3)^0,w,c
  9514   00292A  5810               	subwfb	(___fldiv@rem+3)^0,w,c
  9515   00292C  A0D8               	btfss	status,0,c
  9516   00292E  EF9B  F014         	goto	u7411
  9517   002932  EF9D  F014         	goto	u7410
  9518   002936                     u7411:
  9519   002936  EFA6  F014         	goto	l7039
  9520   00293A                     u7410:
  9521   00293A  8C17               	bsf	(___fldiv@grs+3)^0,6,c
  9522   00293C  5005               	movf	___fldiv@a^0,w,c
  9523   00293E  5E0D               	subwf	___fldiv@rem^0,f,c
  9524   002940  5006               	movf	(___fldiv@a+1)^0,w,c
  9525   002942  5A0E               	subwfb	(___fldiv@rem+1)^0,f,c
  9526   002944  5007               	movf	(___fldiv@a+2)^0,w,c
  9527   002946  5A0F               	subwfb	(___fldiv@rem+2)^0,f,c
  9528   002948  5008               	movf	(___fldiv@a+3)^0,w,c
  9529   00294A  5A10               	subwfb	(___fldiv@rem+3)^0,f,c
  9530   00294C                     l7039:
  9531   00294C  2A19               	incf	___fldiv@aexp^0,f,c
  9532   00294E                     l1213:
  9533   00294E  0E19               	movlw	25
  9534   002950  6419               	cpfsgt	___fldiv@aexp^0,c
  9535   002952  EFAD  F014         	goto	u7421
  9536   002956  EFAF  F014         	goto	u7420
  9537   00295A                     u7421:
  9538   00295A  EF6F  F014         	goto	l7025
  9539   00295E                     u7420:
  9540   00295E  500D               	movf	___fldiv@rem^0,w,c
  9541   002960  100E               	iorwf	(___fldiv@rem+1)^0,w,c
  9542   002962  100F               	iorwf	(___fldiv@rem+2)^0,w,c
  9543   002964  1010               	iorwf	(___fldiv@rem+3)^0,w,c
  9544   002966  B4D8               	btfsc	status,2,c
  9545   002968  EFB8  F014         	goto	u7431
  9546   00296C  EFBA  F014         	goto	u7430
  9547   002970                     u7431:
  9548   002970  EFD2  F014         	goto	l7051
  9549   002974                     u7430:
  9550   002974  8014               	bsf	___fldiv@grs^0,0,c
  9551   002976  EFD2  F014         	goto	l7051
  9552   00297A                     l7045:
  9553   00297A  90D8               	bcf	status,0,c
  9554   00297C  3601               	rlcf	___fldiv@b^0,f,c
  9555   00297E  3602               	rlcf	(___fldiv@b+1)^0,f,c
  9556   002980  3603               	rlcf	(___fldiv@b+2)^0,f,c
  9557   002982  3604               	rlcf	(___fldiv@b+3)^0,f,c
  9558   002984  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  9559   002986  EFC7  F014         	goto	u7441
  9560   00298A  EFC9  F014         	goto	u7440
  9561   00298E                     u7441:
  9562   00298E  EFCA  F014         	goto	l1222
  9563   002992                     u7440:
  9564   002992  8001               	bsf	___fldiv@b^0,0,c
  9565   002994                     l1222:
  9566   002994  90D8               	bcf	status,0,c
  9567   002996  3614               	rlcf	___fldiv@grs^0,f,c
  9568   002998  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  9569   00299A  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  9570   00299C  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  9571   00299E  0612               	decf	___fldiv@new_exp^0,f,c
  9572   0029A0  A0D8               	btfss	status,0,c
  9573   0029A2  0613               	decf	(___fldiv@new_exp+1)^0,f,c
  9574   0029A4                     l7051:
  9575   0029A4  AE03               	btfss	(___fldiv@b+2)^0,7,c
  9576   0029A6  EFD7  F014         	goto	u7451
  9577   0029AA  EFD9  F014         	goto	u7450
  9578   0029AE                     u7451:
  9579   0029AE  EFBD  F014         	goto	l7045
  9580   0029B2                     u7450:
  9581   0029B2  0E00               	movlw	0
  9582   0029B4  6E19               	movwf	___fldiv@aexp^0,c
  9583   0029B6  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  9584   0029B8  EFE0  F014         	goto	u7461
  9585   0029BC  EFE2  F014         	goto	u7460
  9586   0029C0                     u7461:
  9587   0029C0  EF06  F015         	goto	l1224
  9588   0029C4                     u7460:
  9589   0029C4  0EFF               	movlw	255
  9590   0029C6  1414               	andwf	___fldiv@grs^0,w,c
  9591   0029C8  6E09               	movwf	??___fldiv^0,c
  9592   0029CA  0EFF               	movlw	255
  9593   0029CC  1415               	andwf	(___fldiv@grs+1)^0,w,c
  9594   0029CE  6E0A               	movwf	(??___fldiv+1)^0,c
  9595   0029D0  0EFF               	movlw	255
  9596   0029D2  1416               	andwf	(___fldiv@grs+2)^0,w,c
  9597   0029D4  6E0B               	movwf	(??___fldiv+2)^0,c
  9598   0029D6  0E7F               	movlw	127
  9599   0029D8  1417               	andwf	(___fldiv@grs+3)^0,w,c
  9600   0029DA  6E0C               	movwf	(??___fldiv+3)^0,c
  9601   0029DC  5009               	movf	??___fldiv^0,w,c
  9602   0029DE  100A               	iorwf	(??___fldiv+1)^0,w,c
  9603   0029E0  100B               	iorwf	(??___fldiv+2)^0,w,c
  9604   0029E2  100C               	iorwf	(??___fldiv+3)^0,w,c
  9605   0029E4  B4D8               	btfsc	status,2,c
  9606   0029E6  EFF7  F014         	goto	u7471
  9607   0029EA  EFF9  F014         	goto	u7470
  9608   0029EE                     u7471:
  9609   0029EE  EFFD  F014         	goto	l1225
  9610   0029F2                     u7470:
  9611   0029F2                     l7059:
  9612   0029F2  0E01               	movlw	1
  9613   0029F4  6E19               	movwf	___fldiv@aexp^0,c
  9614   0029F6  EF06  F015         	goto	l1224
  9615   0029FA                     l1225:
  9616   0029FA  A001               	btfss	___fldiv@b^0,0,c
  9617   0029FC  EF02  F015         	goto	u7481
  9618   002A00  EF04  F015         	goto	u7480
  9619   002A04                     u7481:
  9620   002A04  EF06  F015         	goto	l1224
  9621   002A08                     u7480:
  9622   002A08  EFF9  F014         	goto	l7059
  9623   002A0C                     l1224:
  9624   002A0C  5019               	movf	___fldiv@aexp^0,w,c
  9625   002A0E  B4D8               	btfsc	status,2,c
  9626   002A10  EF0C  F015         	goto	u7491
  9627   002A14  EF0E  F015         	goto	u7490
  9628   002A18                     u7491:
  9629   002A18  EF32  F015         	goto	l7071
  9630   002A1C                     u7490:
  9631   002A1C  0E01               	movlw	1
  9632   002A1E  2601               	addwf	___fldiv@b^0,f,c
  9633   002A20  0E00               	movlw	0
  9634   002A22  2202               	addwfc	(___fldiv@b+1)^0,f,c
  9635   002A24  2203               	addwfc	(___fldiv@b+2)^0,f,c
  9636   002A26  2204               	addwfc	(___fldiv@b+3)^0,f,c
  9637   002A28  A004               	btfss	(___fldiv@b+3)^0,0,c
  9638   002A2A  EF19  F015         	goto	u7501
  9639   002A2E  EF1B  F015         	goto	u7500
  9640   002A32                     u7501:
  9641   002A32  EF32  F015         	goto	l7071
  9642   002A36                     u7500:
  9643   002A36  C001  F009         	movff	___fldiv@b,??___fldiv
  9644   002A3A  C002  F00A         	movff	___fldiv@b+1,??___fldiv+1
  9645   002A3E  C003  F00B         	movff	___fldiv@b+2,??___fldiv+2
  9646   002A42  C004  F00C         	movff	___fldiv@b+3,??___fldiv+3
  9647   002A46  340C               	rlcf	(??___fldiv+3)^0,w,c
  9648   002A48  320C               	rrcf	(??___fldiv+3)^0,f,c
  9649   002A4A  320B               	rrcf	(??___fldiv+2)^0,f,c
  9650   002A4C  320A               	rrcf	(??___fldiv+1)^0,f,c
  9651   002A4E  3209               	rrcf	??___fldiv^0,f,c
  9652   002A50  C009  F001         	movff	??___fldiv,___fldiv@b
  9653   002A54  C00A  F002         	movff	??___fldiv+1,___fldiv@b+1
  9654   002A58  C00B  F003         	movff	??___fldiv+2,___fldiv@b+2
  9655   002A5C  C00C  F004         	movff	??___fldiv+3,___fldiv@b+3
  9656   002A60  4A12               	infsnz	___fldiv@new_exp^0,f,c
  9657   002A62  2A13               	incf	(___fldiv@new_exp+1)^0,f,c
  9658   002A64                     l7071:
  9659   002A64  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9660   002A66  EF3D  F015         	goto	u7511
  9661   002A6A  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  9662   002A6C  E108               	bnz	u7510
  9663   002A6E  2812               	incf	___fldiv@new_exp^0,w,c
  9664   002A70  A0D8               	btfss	status,0,c
  9665   002A72  EF3D  F015         	goto	u7511
  9666   002A76  EF3F  F015         	goto	u7510
  9667   002A7A                     u7511:
  9668   002A7A  EF4A  F015         	goto	l7075
  9669   002A7E                     u7510:
  9670   002A7E  0E00               	movlw	0
  9671   002A80  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  9672   002A82  6812               	setf	___fldiv@new_exp^0,c
  9673   002A84  0E00               	movlw	0
  9674   002A86  6E01               	movwf	___fldiv@b^0,c
  9675   002A88  0E00               	movlw	0
  9676   002A8A  6E02               	movwf	(___fldiv@b+1)^0,c
  9677   002A8C  0E00               	movlw	0
  9678   002A8E  6E03               	movwf	(___fldiv@b+2)^0,c
  9679   002A90  0E00               	movlw	0
  9680   002A92  6E04               	movwf	(___fldiv@b+3)^0,c
  9681   002A94                     l7075:
  9682   002A94  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9683   002A96  EF57  F015         	goto	u7520
  9684   002A9A  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  9685   002A9C  E106               	bnz	u7521
  9686   002A9E  0412               	decf	___fldiv@new_exp^0,w,c
  9687   002AA0  B0D8               	btfsc	status,0,c
  9688   002AA2  EF55  F015         	goto	u7521
  9689   002AA6  EF57  F015         	goto	u7520
  9690   002AAA                     u7521:
  9691   002AAA  EF65  F015         	goto	l7079
  9692   002AAE                     u7520:
  9693   002AAE  0E00               	movlw	0
  9694   002AB0  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  9695   002AB2  0E00               	movlw	0
  9696   002AB4  6E12               	movwf	___fldiv@new_exp^0,c
  9697   002AB6  0E00               	movlw	0
  9698   002AB8  6E01               	movwf	___fldiv@b^0,c
  9699   002ABA  0E00               	movlw	0
  9700   002ABC  6E02               	movwf	(___fldiv@b+1)^0,c
  9701   002ABE  0E00               	movlw	0
  9702   002AC0  6E03               	movwf	(___fldiv@b+2)^0,c
  9703   002AC2  0E00               	movlw	0
  9704   002AC4  6E04               	movwf	(___fldiv@b+3)^0,c
  9705   002AC6  0E00               	movlw	0
  9706   002AC8  6E11               	movwf	___fldiv@sign^0,c
  9707   002ACA                     l7079:
  9708   002ACA  C012  F018         	movff	___fldiv@new_exp,___fldiv@bexp
  9709   002ACE  A018               	btfss	___fldiv@bexp^0,0,c
  9710   002AD0  EF6C  F015         	goto	u7531
  9711   002AD4  EF6E  F015         	goto	u7530
  9712   002AD8                     u7531:
  9713   002AD8  EF71  F015         	goto	l7085
  9714   002ADC                     u7530:
  9715   002ADC  8E03               	bsf	(___fldiv@b+2)^0,7,c
  9716   002ADE  EF72  F015         	goto	l7087
  9717   002AE2                     l7085:
  9718   002AE2  9E03               	bcf	(___fldiv@b+2)^0,7,c
  9719   002AE4                     l7087:
  9720   002AE4  90D8               	bcf	status,0,c
  9721   002AE6  3018               	rrcf	___fldiv@bexp^0,w,c
  9722   002AE8  6E04               	movwf	(___fldiv@b+3)^0,c
  9723   002AEA  EF28  F014         	goto	l7001
  9724   002AEE                     l1211:
  9725   002AEE  0012               	return		;funcret
  9726   002AF0                     __end_of___fldiv:
  9727                           	callstack 0
  9728                           
  9729 ;; *************** function _check_digit *****************
  9730 ;; Defined at:
  9731 ;;		line 45 in file "Algorithms/Infix_to_postfix/infix_to_post.c"
  9732 ;; Parameters:    Size  Location     Type
  9733 ;;  c               1    wreg     unsigned char 
  9734 ;; Auto vars:     Size  Location     Type
  9735 ;;  c               1    2[COMRAM] unsigned char 
  9736 ;; Return value:  Size  Location     Type
  9737 ;;                  2    0[COMRAM] int 
  9738 ;; Registers used:
  9739 ;;		wreg, status,2, status,0
  9740 ;; Tracked objects:
  9741 ;;		On entry : 0/0
  9742 ;;		On exit  : 0/0
  9743 ;;		Unchanged: 0/0
  9744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9745 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9746 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9748 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9749 ;;Total ram usage:        3 bytes
  9750 ;; Hardware stack levels used: 1
  9751 ;; This function calls:
  9752 ;;		Nothing
  9753 ;; This function is called by:
  9754 ;;		_infixToPostfix
  9755 ;;		_evaluatePostfix
  9756 ;; This function uses a non-reentrant model
  9757 ;;
  9758                           
  9759                           	psect	text43
  9760   0049A6                     __ptext43:
  9761                           	callstack 0
  9762   0049A6                     _check_digit:
  9763                           	callstack 29
  9764                           
  9765                           ;incstack = 0
  9766                           ;check_digit@c stored from wreg
  9767   0049A6  6E03               	movwf	check_digit@c^0,c
  9768   0049A8                     
  9769                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 46:  if ((c>='0') && (c<='9')) return 1;
  9770   0049A8  0E2F               	movlw	47
  9771   0049AA  6403               	cpfsgt	check_digit@c^0,c
  9772   0049AC  EFDA  F024         	goto	u5441
  9773   0049B0  EFDC  F024         	goto	u5440
  9774   0049B4                     u5441:
  9775   0049B4  EFEA  F024         	goto	l5407
  9776   0049B8                     u5440:
  9777   0049B8  0E3A               	movlw	58
  9778   0049BA  6003               	cpfslt	check_digit@c^0,c
  9779   0049BC  EFE2  F024         	goto	u5451
  9780   0049C0  EFE4  F024         	goto	u5450
  9781   0049C4                     u5451:
  9782   0049C4  EFEA  F024         	goto	l5407
  9783   0049C8                     u5450:
  9784   0049C8  0E00               	movlw	0
  9785   0049CA  6E02               	movwf	(?_check_digit+1)^0,c
  9786   0049CC  0E01               	movlw	1
  9787   0049CE  6E01               	movwf	?_check_digit^0,c
  9788   0049D0  EFEE  F024         	goto	l566
  9789   0049D4                     l5407:
  9790   0049D4  0E00               	movlw	0
  9791   0049D6  6E02               	movwf	(?_check_digit+1)^0,c
  9792   0049D8  0E00               	movlw	0
  9793   0049DA  6E01               	movwf	?_check_digit^0,c
  9794   0049DC                     l566:
  9795   0049DC  0012               	return		;funcret
  9796   0049DE                     __end_of_check_digit:
  9797                           	callstack 0
  9798                           
  9799 ;; *************** function ___xxtofl *****************
  9800 ;; Defined at:
  9801 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\xxtofl.c"
  9802 ;; Parameters:    Size  Location     Type
  9803 ;;  sign            1    wreg     unsigned char 
  9804 ;;  val             4    0[COMRAM] long 
  9805 ;; Auto vars:     Size  Location     Type
  9806 ;;  sign            1    8[COMRAM] unsigned char 
  9807 ;;  arg             4   10[COMRAM] unsigned long 
  9808 ;;  exp             1    9[COMRAM] unsigned char 
  9809 ;; Return value:  Size  Location     Type
  9810 ;;                  4    0[COMRAM] unsigned char 
  9811 ;; Registers used:
  9812 ;;		wreg, status,2, status,0
  9813 ;; Tracked objects:
  9814 ;;		On entry : 0/0
  9815 ;;		On exit  : 0/0
  9816 ;;		Unchanged: 0/0
  9817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9818 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9819 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9820 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9821 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9822 ;;Total ram usage:       14 bytes
  9823 ;; Hardware stack levels used: 1
  9824 ;; This function calls:
  9825 ;;		Nothing
  9826 ;; This function is called by:
  9827 ;;		_evaluatePostfix
  9828 ;; This function uses a non-reentrant model
  9829 ;;
  9830                           
  9831                           	psect	text44
  9832   003494                     __ptext44:
  9833                           	callstack 0
  9834   003494                     ___xxtofl:
  9835                           	callstack 29
  9836                           
  9837                           ;incstack = 0
  9838                           ;___xxtofl@sign stored from wreg
  9839   003494  6E09               	movwf	___xxtofl@sign^0,c
  9840   003496  5009               	movf	___xxtofl@sign^0,w,c
  9841   003498  B4D8               	btfsc	status,2,c
  9842   00349A  EF51  F01A         	goto	u5541
  9843   00349E  EF53  F01A         	goto	u5540
  9844   0034A2                     u5541:
  9845   0034A2  EF75  F01A         	goto	l1284
  9846   0034A6                     u5540:
  9847   0034A6  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  9848   0034A8  EF5A  F01A         	goto	u5550
  9849   0034AC  EF58  F01A         	goto	u5551
  9850   0034B0                     u5551:
  9851   0034B0  EF75  F01A         	goto	l1284
  9852   0034B4                     u5550:
  9853   0034B4  C001  F005         	movff	___xxtofl@val,??___xxtofl
  9854   0034B8  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  9855   0034BC  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  9856   0034C0  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  9857   0034C4  1E05               	comf	??___xxtofl^0,f,c
  9858   0034C6  1E06               	comf	(??___xxtofl+1)^0,f,c
  9859   0034C8  1E07               	comf	(??___xxtofl+2)^0,f,c
  9860   0034CA  1E08               	comf	(??___xxtofl+3)^0,f,c
  9861   0034CC  2A05               	incf	??___xxtofl^0,f,c
  9862   0034CE  0E00               	movlw	0
  9863   0034D0  2206               	addwfc	(??___xxtofl+1)^0,f,c
  9864   0034D2  2207               	addwfc	(??___xxtofl+2)^0,f,c
  9865   0034D4  2208               	addwfc	(??___xxtofl+3)^0,f,c
  9866   0034D6  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  9867   0034DA  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  9868   0034DE  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  9869   0034E2  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  9870   0034E6  EF7D  F01A         	goto	l5471
  9871   0034EA                     l1284:
  9872   0034EA  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  9873   0034EE  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  9874   0034F2  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  9875   0034F6  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  9876   0034FA                     l5471:
  9877   0034FA  5001               	movf	___xxtofl@val^0,w,c
  9878   0034FC  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  9879   0034FE  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  9880   003500  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  9881   003502  A4D8               	btfss	status,2,c
  9882   003504  EF86  F01A         	goto	u5561
  9883   003508  EF88  F01A         	goto	u5560
  9884   00350C                     u5561:
  9885   00350C  EF92  F01A         	goto	l5477
  9886   003510                     u5560:
  9887   003510  0E00               	movlw	0
  9888   003512  6E01               	movwf	?___xxtofl^0,c
  9889   003514  0E00               	movlw	0
  9890   003516  6E02               	movwf	(?___xxtofl+1)^0,c
  9891   003518  0E00               	movlw	0
  9892   00351A  6E03               	movwf	(?___xxtofl+2)^0,c
  9893   00351C  0E00               	movlw	0
  9894   00351E  6E04               	movwf	(?___xxtofl+3)^0,c
  9895   003520  EF23  F01B         	goto	l1287
  9896   003524                     l5477:
  9897   003524  0E96               	movlw	150
  9898   003526  6E0A               	movwf	___xxtofl@exp^0,c
  9899   003528  EF9C  F01A         	goto	l5481
  9900   00352C                     l5479:
  9901   00352C  2A0A               	incf	___xxtofl@exp^0,f,c
  9902   00352E  90D8               	bcf	status,0,c
  9903   003530  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  9904   003532  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  9905   003534  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  9906   003536  320B               	rrcf	___xxtofl@arg^0,f,c
  9907   003538                     l5481:
  9908   003538  0E00               	movlw	0
  9909   00353A  140B               	andwf	___xxtofl@arg^0,w,c
  9910   00353C  6E05               	movwf	??___xxtofl^0,c
  9911   00353E  0E00               	movlw	0
  9912   003540  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  9913   003542  6E06               	movwf	(??___xxtofl+1)^0,c
  9914   003544  0E00               	movlw	0
  9915   003546  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  9916   003548  6E07               	movwf	(??___xxtofl+2)^0,c
  9917   00354A  0EFE               	movlw	254
  9918   00354C  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  9919   00354E  6E08               	movwf	(??___xxtofl+3)^0,c
  9920   003550  5005               	movf	??___xxtofl^0,w,c
  9921   003552  1006               	iorwf	(??___xxtofl+1)^0,w,c
  9922   003554  1007               	iorwf	(??___xxtofl+2)^0,w,c
  9923   003556  1008               	iorwf	(??___xxtofl+3)^0,w,c
  9924   003558  A4D8               	btfss	status,2,c
  9925   00355A  EFB1  F01A         	goto	u5571
  9926   00355E  EFB3  F01A         	goto	u5570
  9927   003562                     u5571:
  9928   003562  EF96  F01A         	goto	l5479
  9929   003566                     u5570:
  9930   003566  EFC1  F01A         	goto	l1291
  9931   00356A                     l5483:
  9932   00356A  2A0A               	incf	___xxtofl@exp^0,f,c
  9933   00356C  0E01               	movlw	1
  9934   00356E  260B               	addwf	___xxtofl@arg^0,f,c
  9935   003570  0E00               	movlw	0
  9936   003572  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  9937   003574  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  9938   003576  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  9939   003578  90D8               	bcf	status,0,c
  9940   00357A  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  9941   00357C  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  9942   00357E  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  9943   003580  320B               	rrcf	___xxtofl@arg^0,f,c
  9944   003582                     l1291:
  9945   003582  0E00               	movlw	0
  9946   003584  140B               	andwf	___xxtofl@arg^0,w,c
  9947   003586  6E05               	movwf	??___xxtofl^0,c
  9948   003588  0E00               	movlw	0
  9949   00358A  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  9950   00358C  6E06               	movwf	(??___xxtofl+1)^0,c
  9951   00358E  0E00               	movlw	0
  9952   003590  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  9953   003592  6E07               	movwf	(??___xxtofl+2)^0,c
  9954   003594  0EFF               	movlw	255
  9955   003596  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  9956   003598  6E08               	movwf	(??___xxtofl+3)^0,c
  9957   00359A  5005               	movf	??___xxtofl^0,w,c
  9958   00359C  1006               	iorwf	(??___xxtofl+1)^0,w,c
  9959   00359E  1007               	iorwf	(??___xxtofl+2)^0,w,c
  9960   0035A0  1008               	iorwf	(??___xxtofl+3)^0,w,c
  9961   0035A2  A4D8               	btfss	status,2,c
  9962   0035A4  EFD6  F01A         	goto	u5581
  9963   0035A8  EFD8  F01A         	goto	u5580
  9964   0035AC                     u5581:
  9965   0035AC  EFB5  F01A         	goto	l5483
  9966   0035B0                     u5580:
  9967   0035B0  EFE0  F01A         	goto	l5491
  9968   0035B4                     l5489:
  9969   0035B4  060A               	decf	___xxtofl@exp^0,f,c
  9970   0035B6  90D8               	bcf	status,0,c
  9971   0035B8  360B               	rlcf	___xxtofl@arg^0,f,c
  9972   0035BA  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  9973   0035BC  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  9974   0035BE  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  9975   0035C0                     l5491:
  9976   0035C0  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  9977   0035C2  EFE5  F01A         	goto	u5591
  9978   0035C6  EFE7  F01A         	goto	u5590
  9979   0035CA                     u5591:
  9980   0035CA  EFEF  F01A         	goto	l1298
  9981   0035CE                     u5590:
  9982   0035CE  0E02               	movlw	2
  9983   0035D0  600A               	cpfslt	___xxtofl@exp^0,c
  9984   0035D2  EFED  F01A         	goto	u5601
  9985   0035D6  EFEF  F01A         	goto	u5600
  9986   0035DA                     u5601:
  9987   0035DA  EFDA  F01A         	goto	l5489
  9988   0035DE                     u5600:
  9989   0035DE                     l1298:
  9990   0035DE  B00A               	btfsc	___xxtofl@exp^0,0,c
  9991   0035E0  EFF4  F01A         	goto	u5611
  9992   0035E4  EFF6  F01A         	goto	u5610
  9993   0035E8                     u5611:
  9994   0035E8  EFF7  F01A         	goto	l5497
  9995   0035EC                     u5610:
  9996   0035EC  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  9997   0035EE                     l5497:
  9998   0035EE  90D8               	bcf	status,0,c
  9999   0035F0  320A               	rrcf	___xxtofl@exp^0,f,c
 10000   0035F2  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
 10001   0035F6  6A06               	clrf	(??___xxtofl+1)^0,c
 10002   0035F8  6A07               	clrf	(??___xxtofl+2)^0,c
 10003   0035FA  6A08               	clrf	(??___xxtofl+3)^0,c
 10004   0035FC  C005  F008         	movff	??___xxtofl,??___xxtofl+3
 10005   003600  6A07               	clrf	(??___xxtofl+2)^0,c
 10006   003602  6A06               	clrf	(??___xxtofl+1)^0,c
 10007   003604  6A05               	clrf	??___xxtofl^0,c
 10008   003606  5005               	movf	??___xxtofl^0,w,c
 10009   003608  120B               	iorwf	___xxtofl@arg^0,f,c
 10010   00360A  5006               	movf	(??___xxtofl+1)^0,w,c
 10011   00360C  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
 10012   00360E  5007               	movf	(??___xxtofl+2)^0,w,c
 10013   003610  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
 10014   003612  5008               	movf	(??___xxtofl+3)^0,w,c
 10015   003614  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
 10016   003616  5009               	movf	___xxtofl@sign^0,w,c
 10017   003618  B4D8               	btfsc	status,2,c
 10018   00361A  EF11  F01B         	goto	u5621
 10019   00361E  EF13  F01B         	goto	u5620
 10020   003622                     u5621:
 10021   003622  EF1B  F01B         	goto	l5507
 10022   003626                     u5620:
 10023   003626  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 10024   003628  EF1A  F01B         	goto	u5630
 10025   00362C  EF18  F01B         	goto	u5631
 10026   003630                     u5631:
 10027   003630  EF1B  F01B         	goto	l5507
 10028   003634                     u5630:
 10029   003634  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
 10030   003636                     l5507:
 10031   003636  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
 10032   00363A  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
 10033   00363E  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
 10034   003642  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
 10035   003646                     l1287:
 10036   003646  0012               	return		;funcret
 10037   003648                     __end_of___xxtofl:
 10038                           	callstack 0
 10039                           
 10040 ;; *************** function _calculation_start *****************
 10041 ;; Defined at:
 10042 ;;		line 137 in file "application.c"
 10043 ;; Parameters:    Size  Location     Type
 10044 ;;  value           1   32[COMRAM] PTR unsigned char 
 10045 ;;		 -> val(1), 
 10046 ;; Auto vars:     Size  Location     Type
 10047 ;;  i               2   35[COMRAM] int 
 10048 ;;  ret             1   34[COMRAM] unsigned char 
 10049 ;; Return value:  Size  Location     Type
 10050 ;;                  1    wreg      unsigned char 
 10051 ;; Registers used:
 10052 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10053 ;; Tracked objects:
 10054 ;;		On entry : 0/0
 10055 ;;		On exit  : 0/0
 10056 ;;		Unchanged: 0/0
 10057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10058 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10059 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10060 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10061 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10062 ;;Total ram usage:        5 bytes
 10063 ;; Hardware stack levels used: 1
 10064 ;; Hardware stack levels required when called: 5
 10065 ;; This function calls:
 10066 ;;		_lcd_4bit_send_char_data
 10067 ;;		_lcd_4bit_send_command
 10068 ;;		_lcd_4bit_send_string_pos
 10069 ;; This function is called by:
 10070 ;;		_main
 10071 ;; This function uses a non-reentrant model
 10072 ;;
 10073                           
 10074                           	psect	text45
 10075   0043B4                     __ptext45:
 10076                           	callstack 0
 10077   0043B4                     _calculation_start:
 10078                           	callstack 25
 10079   0043B4                     
 10080                           ;application.c: 139:     *value = '#';
 10081   0043B4  5021               	movf	calculation_start@value^0,w,c
 10082   0043B6  6ED9               	movwf	fsr2l,c
 10083   0043B8  6ADA               	clrf	fsr2h,c
 10084   0043BA  0E23               	movlw	35
 10085   0043BC  6EDF               	movwf	indf2,c
 10086   0043BE  0E9F               	movlw	low _my_lcd
 10087   0043C0  6E1A               	movwf	lcd_4bit_send_string_pos@lcd^0,c
 10088   0043C2  0E01               	movlw	high _my_lcd
 10089   0043C4  6E1B               	movwf	(lcd_4bit_send_string_pos@lcd+1)^0,c
 10090   0043C6  0E01               	movlw	1
 10091   0043C8  6E1C               	movwf	lcd_4bit_send_string_pos@row^0,c
 10092   0043CA  0E01               	movlw	1
 10093   0043CC  6E1D               	movwf	lcd_4bit_send_string_pos@column^0,c
 10094   0043CE  0E19               	movlw	low STR_5
 10095   0043D0  6E1E               	movwf	lcd_4bit_send_string_pos@str^0,c
 10096   0043D2  501E               	movf	lcd_4bit_send_string_pos@str^0,w,c
 10097   0043D4  A4D8               	btfss	status,2,c
 10098   0043D6  0E10               	movlw	high __smallconst
 10099   0043D8  6E1F               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
 10100   0043DA  EC8A  F021         	call	_lcd_4bit_send_string_pos	;wreg free
 10101   0043DE                     
 10102                           ;application.c: 141:     _delay((unsigned long)((100)*(4000000UL/4000.0)));
 10103   0043DE  0E82               	movlw	130
 10104   0043E0  6E22               	movwf	??_calculation_start^0,c
 10105   0043E2  0EDE               	movlw	222
 10106   0043E4                     u9937:
 10107   0043E4  2EE8               	decfsz	wreg,f,c
 10108   0043E6  D7FE               	bra	u9937
 10109   0043E8  2E22               	decfsz	??_calculation_start^0,f,c
 10110   0043EA  D7FC               	bra	u9937
 10111   0043EC                     
 10112                           ;application.c: 142:     for (int i = 0; i < 6; i++) {
 10113   0043EC  0E00               	movlw	0
 10114   0043EE  6E25               	movwf	(calculation_start@i+1)^0,c
 10115   0043F0  0E00               	movlw	0
 10116   0043F2  6E24               	movwf	calculation_start@i^0,c
 10117   0043F4                     l8273:
 10118   0043F4  0E9F               	movlw	low _my_lcd
 10119   0043F6  6E0F               	movwf	lcd_4bit_send_char_data@lcd^0,c
 10120   0043F8  0E01               	movlw	high _my_lcd
 10121   0043FA  6E10               	movwf	(lcd_4bit_send_char_data@lcd+1)^0,c
 10122   0043FC  0E2E               	movlw	46
 10123   0043FE  6E11               	movwf	lcd_4bit_send_char_data@data^0,c
 10124   004400  EC62  F022         	call	_lcd_4bit_send_char_data	;wreg free
 10125   004404                     
 10126                           ;application.c: 144:         _delay((unsigned long)((50)*(4000000UL/4000.0)));
 10127   004404  0E41               	movlw	65
 10128   004406  6E22               	movwf	??_calculation_start^0,c
 10129   004408  0EEE               	movlw	238
 10130   00440A                     u9947:
 10131   00440A  2EE8               	decfsz	wreg,f,c
 10132   00440C  D7FE               	bra	u9947
 10133   00440E  2E22               	decfsz	??_calculation_start^0,f,c
 10134   004410  D7FC               	bra	u9947
 10135   004412  D000               	nop2	
 10136   004414                     
 10137                           ;application.c: 145:     }
 10138   004414  4A24               	infsnz	calculation_start@i^0,f,c
 10139   004416  2A25               	incf	(calculation_start@i+1)^0,f,c
 10140   004418  BE25               	btfsc	(calculation_start@i+1)^0,7,c
 10141   00441A  EF18  F022         	goto	u9151
 10142   00441E  5025               	movf	(calculation_start@i+1)^0,w,c
 10143   004420  E109               	bnz	u9150
 10144   004422  0E06               	movlw	6
 10145   004424  5C24               	subwf	calculation_start@i^0,w,c
 10146   004426  A0D8               	btfss	status,0,c
 10147   004428  EF18  F022         	goto	u9151
 10148   00442C  EF1A  F022         	goto	u9150
 10149   004430                     u9151:
 10150   004430  EFFA  F021         	goto	l8273
 10151   004434                     u9150:
 10152   004434                     
 10153                           ;application.c: 146:     ret = lcd_4bit_send_command(&my_lcd, 0X01);
 10154   004434  0E9F               	movlw	low _my_lcd
 10155   004436  6E0F               	movwf	lcd_4bit_send_command@lcd^0,c
 10156   004438  0E01               	movlw	high _my_lcd
 10157   00443A  6E10               	movwf	(lcd_4bit_send_command@lcd+1)^0,c
 10158   00443C  0E01               	movlw	1
 10159   00443E  6E11               	movwf	lcd_4bit_send_command@command^0,c
 10160   004440  EC29  F022         	call	_lcd_4bit_send_command	;wreg free
 10161   004444  6E23               	movwf	calculation_start@ret^0,c
 10162   004446                     
 10163                           ;application.c: 147:     calcState = STATE_INITIAL;
 10164   004446  0E00               	movlw	0
 10165   004448  0100               	movlb	0	; () banked
 10166   00444A  6FF3               	movwf	_calcState& (0+255),b
 10167   00444C                     
 10168                           ; BSR set to: 0
 10169                           ;application.c: 148:     start_flag++;
 10170   00444C  2BF7               	incf	_start_flag& (0+255),f,b
 10171   00444E                     
 10172                           ; BSR set to: 0
 10173                           ;application.c: 149:     return ret;
 10174   00444E  5023               	movf	calculation_start@ret^0,w,c
 10175   004450                     
 10176                           ; BSR set to: 0
 10177   004450  0012               	return		;funcret
 10178   004452                     __end_of_calculation_start:
 10179                           	callstack 0
 10180                           
 10181 ;; *************** function _lcd_4bit_send_string_pos *****************
 10182 ;; Defined at:
 10183 ;;		line 162 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
 10184 ;; Parameters:    Size  Location     Type
 10185 ;;  lcd             2   25[COMRAM] PTR const struct .
 10186 ;;		 -> my_lcd(6), 
 10187 ;;  row             1   27[COMRAM] unsigned char 
 10188 ;;  column          1   28[COMRAM] unsigned char 
 10189 ;;  str             2   29[COMRAM] PTR unsigned char 
 10190 ;;		 -> STR_5(6), arr(11), 
 10191 ;; Auto vars:     Size  Location     Type
 10192 ;;  ret             1   31[COMRAM] unsigned char 
 10193 ;; Return value:  Size  Location     Type
 10194 ;;                  1    wreg      unsigned char 
 10195 ;; Registers used:
 10196 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10197 ;; Tracked objects:
 10198 ;;		On entry : 0/0
 10199 ;;		On exit  : 0/0
 10200 ;;		Unchanged: 0/0
 10201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10202 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10203 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10205 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10206 ;;Total ram usage:        7 bytes
 10207 ;; Hardware stack levels used: 1
 10208 ;; Hardware stack levels required when called: 4
 10209 ;; This function calls:
 10210 ;;		_lcd_4bit_send_char_data
 10211 ;;		_lcd_4bit_set_cursor
 10212 ;; This function is called by:
 10213 ;;		_main
 10214 ;;		_calculation_start
 10215 ;; This function uses a non-reentrant model
 10216 ;;
 10217                           
 10218                           	psect	text46
 10219   004314                     __ptext46:
 10220                           	callstack 0
 10221   004314                     _lcd_4bit_send_string_pos:
 10222                           	callstack 26
 10223   004314                     
 10224                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 164:     if(((void*)0) == lcd){
 10225   004314  501A               	movf	lcd_4bit_send_string_pos@lcd^0,w,c
 10226   004316  101B               	iorwf	(lcd_4bit_send_string_pos@lcd+1)^0,w,c
 10227   004318  A4D8               	btfss	status,2,c
 10228   00431A  EF91  F021         	goto	u8781
 10229   00431E  EF93  F021         	goto	u8780
 10230   004322                     u8781:
 10231   004322  EF97  F021         	goto	l7923
 10232   004326                     u8780:
 10233   004326                     
 10234                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 165:         ret = (Std_ReturnType)0x00;
 10235   004326  0E00               	movlw	0
 10236   004328  6E20               	movwf	lcd_4bit_send_string_pos@ret^0,c
 10237                           
 10238                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 166:     }
 10239   00432A  EFD8  F021         	goto	l7931
 10240   00432E                     l7923:
 10241                           
 10242                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 168:         ret = lcd_4bit_set_cursor(lcd, row, colum
      +                          n);
 10243   00432E  C01A  F013         	movff	lcd_4bit_send_string_pos@lcd,lcd_4bit_set_cursor@lcd
 10244   004332  C01B  F014         	movff	lcd_4bit_send_string_pos@lcd+1,lcd_4bit_set_cursor@lcd+1
 10245   004336  C01C  F015         	movff	lcd_4bit_send_string_pos@row,lcd_4bit_set_cursor@row
 10246   00433A  C01D  F016         	movff	lcd_4bit_send_string_pos@column,lcd_4bit_set_cursor@coulmn
 10247   00433E  ECE3  F020         	call	_lcd_4bit_set_cursor	;wreg free
 10248   004342  6E20               	movwf	lcd_4bit_send_string_pos@ret^0,c
 10249                           
 10250                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 169:         while(*str){
 10251   004344  EFBF  F021         	goto	l7929
 10252   004348                     l7925:
 10253                           
 10254                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 170:             ret = lcd_4bit_send_char_data(lcd, *s
      +                          tr++);
 10255   004348  C01A  F00F         	movff	lcd_4bit_send_string_pos@lcd,lcd_4bit_send_char_data@lcd
 10256   00434C  C01B  F010         	movff	lcd_4bit_send_string_pos@lcd+1,lcd_4bit_send_char_data@lcd+1
 10257   004350  C01E  FFF6         	movff	lcd_4bit_send_string_pos@str,tblptrl
 10258   004354  C01F  FFF7         	movff	lcd_4bit_send_string_pos@str+1,tblptrh
 10259   004358  0E00               	movlw	low (__smallconst shr (0+16))
 10260   00435A  6EF8               	movwf	tblptru,c
 10261   00435C  0E0F               	movlw	(high __ramtop+-1)
 10262   00435E  64F7               	cpfsgt	tblptrh,c
 10263   004360  D003               	bra	u8797
 10264   004362  0008               	tblrd		*
 10265   004364  50F5               	movf	tablat,w,c
 10266   004366  D005               	bra	u8790
 10267   004368                     u8797:
 10268   004368  CFF6 FFE9          	movff	tblptrl,fsr0l
 10269   00436C  CFF7 FFEA          	movff	tblptrh,fsr0h
 10270   004370  50EF               	movf	indf0,w,c
 10271   004372                     u8790:
 10272   004372  6E11               	movwf	lcd_4bit_send_char_data@data^0,c
 10273   004374  EC62  F022         	call	_lcd_4bit_send_char_data	;wreg free
 10274   004378  6E20               	movwf	lcd_4bit_send_string_pos@ret^0,c
 10275   00437A  4A1E               	infsnz	lcd_4bit_send_string_pos@str^0,f,c
 10276   00437C  2A1F               	incf	(lcd_4bit_send_string_pos@str+1)^0,f,c
 10277   00437E                     l7929:
 10278                           
 10279                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 169:         while(*str){
 10280   00437E  C01E  FFF6         	movff	lcd_4bit_send_string_pos@str,tblptrl
 10281   004382  C01F  FFF7         	movff	lcd_4bit_send_string_pos@str+1,tblptrh
 10282   004386  0E00               	movlw	low (__smallconst shr (0+16))
 10283   004388  6EF8               	movwf	tblptru,c
 10284   00438A  0E0F               	movlw	(high __ramtop+-1)
 10285   00438C  64F7               	cpfsgt	tblptrh,c
 10286   00438E  D003               	bra	u8807
 10287   004390  0008               	tblrd		*
 10288   004392  50F5               	movf	tablat,w,c
 10289   004394  D005               	bra	u8800
 10290   004396                     u8807:
 10291   004396  CFF6 FFE9          	movff	tblptrl,fsr0l
 10292   00439A  CFF7 FFEA          	movff	tblptrh,fsr0h
 10293   00439E  50EF               	movf	indf0,w,c
 10294   0043A0                     u8800:
 10295   0043A0  0900               	iorlw	0
 10296   0043A2  A4D8               	btfss	status,2,c
 10297   0043A4  EFD6  F021         	goto	u8811
 10298   0043A8  EFD8  F021         	goto	u8810
 10299   0043AC                     u8811:
 10300   0043AC  EFA4  F021         	goto	l7925
 10301   0043B0                     u8810:
 10302   0043B0                     l7931:
 10303                           
 10304                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 173:     return ret;
 10305   0043B0  5020               	movf	lcd_4bit_send_string_pos@ret^0,w,c
 10306   0043B2  0012               	return		;funcret
 10307   0043B4                     __end_of_lcd_4bit_send_string_pos:
 10308                           	callstack 0
 10309                           
 10310 ;; *************** function _lcd_4bit_set_cursor *****************
 10311 ;; Defined at:
 10312 ;;		line 527 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
 10313 ;; Parameters:    Size  Location     Type
 10314 ;;  lcd             2   18[COMRAM] PTR const struct .
 10315 ;;		 -> my_lcd(6), 
 10316 ;;  row             1   20[COMRAM] unsigned char 
 10317 ;;  coulmn          1   21[COMRAM] unsigned char 
 10318 ;; Auto vars:     Size  Location     Type
 10319 ;;  ret             1   24[COMRAM] unsigned char 
 10320 ;; Return value:  Size  Location     Type
 10321 ;;                  1    wreg      unsigned char 
 10322 ;; Registers used:
 10323 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10324 ;; Tracked objects:
 10325 ;;		On entry : 0/0
 10326 ;;		On exit  : 0/0
 10327 ;;		Unchanged: 0/0
 10328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10329 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10330 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10331 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10332 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10333 ;;Total ram usage:        7 bytes
 10334 ;; Hardware stack levels used: 1
 10335 ;; Hardware stack levels required when called: 3
 10336 ;; This function calls:
 10337 ;;		_lcd_4bit_send_command
 10338 ;; This function is called by:
 10339 ;;		_lcd_4bit_send_char_data_pos
 10340 ;;		_lcd_4bit_send_string_pos
 10341 ;; This function uses a non-reentrant model
 10342 ;;
 10343                           
 10344                           	psect	text47
 10345   0041C6                     __ptext47:
 10346                           	callstack 0
 10347   0041C6                     _lcd_4bit_set_cursor:
 10348                           	callstack 26
 10349   0041C6                     
 10350                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 528:     Std_ReturnType ret = (Std_ReturnType)0x01;
 10351   0041C6  0E01               	movlw	1
 10352   0041C8  6E19               	movwf	lcd_4bit_set_cursor@ret^0,c
 10353   0041CA                     
 10354                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 529:     coulmn--;
 10355   0041CA  0616               	decf	lcd_4bit_set_cursor@coulmn^0,f,c
 10356                           
 10357                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 530:     switch(row){
 10358   0041CC  EF18  F021         	goto	l7807
 10359   0041D0                     l7799:
 10360   0041D0  C013  F00F         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
 10361   0041D4  C014  F010         	movff	lcd_4bit_set_cursor@lcd+1,lcd_4bit_send_command@lcd+1
 10362   0041D8  5016               	movf	lcd_4bit_set_cursor@coulmn^0,w,c
 10363   0041DA  0F80               	addlw	128
 10364   0041DC  6E11               	movwf	lcd_4bit_send_command@command^0,c
 10365   0041DE  EC29  F022         	call	_lcd_4bit_send_command	;wreg free
 10366   0041E2  6E19               	movwf	lcd_4bit_set_cursor@ret^0,c
 10367   0041E4  EF35  F021         	goto	l7809
 10368   0041E8                     l7801:
 10369   0041E8  C013  F00F         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
 10370   0041EC  C014  F010         	movff	lcd_4bit_set_cursor@lcd+1,lcd_4bit_send_command@lcd+1
 10371   0041F0  5016               	movf	lcd_4bit_set_cursor@coulmn^0,w,c
 10372   0041F2  0FC0               	addlw	192
 10373   0041F4  6E11               	movwf	lcd_4bit_send_command@command^0,c
 10374   0041F6  EC29  F022         	call	_lcd_4bit_send_command	;wreg free
 10375   0041FA  6E19               	movwf	lcd_4bit_set_cursor@ret^0,c
 10376   0041FC  EF35  F021         	goto	l7809
 10377   004200                     l7803:
 10378   004200  C013  F00F         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
 10379   004204  C014  F010         	movff	lcd_4bit_set_cursor@lcd+1,lcd_4bit_send_command@lcd+1
 10380   004208  5016               	movf	lcd_4bit_set_cursor@coulmn^0,w,c
 10381   00420A  0F94               	addlw	148
 10382   00420C  6E11               	movwf	lcd_4bit_send_command@command^0,c
 10383   00420E  EC29  F022         	call	_lcd_4bit_send_command	;wreg free
 10384   004212  6E19               	movwf	lcd_4bit_set_cursor@ret^0,c
 10385   004214  EF35  F021         	goto	l7809
 10386   004218                     l7805:
 10387   004218  C013  F00F         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
 10388   00421C  C014  F010         	movff	lcd_4bit_set_cursor@lcd+1,lcd_4bit_send_command@lcd+1
 10389   004220  5016               	movf	lcd_4bit_set_cursor@coulmn^0,w,c
 10390   004222  0FD4               	addlw	212
 10391   004224  6E11               	movwf	lcd_4bit_send_command@command^0,c
 10392   004226  EC29  F022         	call	_lcd_4bit_send_command	;wreg free
 10393   00422A  6E19               	movwf	lcd_4bit_set_cursor@ret^0,c
 10394   00422C  EF35  F021         	goto	l7809
 10395   004230                     l7807:
 10396   004230  5015               	movf	lcd_4bit_set_cursor@row^0,w,c
 10397   004232  6E17               	movwf	??_lcd_4bit_set_cursor^0,c
 10398   004234  6A18               	clrf	(??_lcd_4bit_set_cursor+1)^0,c
 10399                           
 10400                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10401                           ; Switch size 1, requested type "simple"
 10402                           ; Number of cases is 1, Range of values is 0 to 0
 10403                           ; switch strategies available:
 10404                           ; Name         Instructions Cycles
 10405                           ; simple_byte            4     3 (average)
 10406                           ;	Chosen strategy is simple_byte
 10407   004236  5018               	movf	(??_lcd_4bit_set_cursor+1)^0,w,c
 10408   004238  0A00               	xorlw	0	; case 0
 10409   00423A  B4D8               	btfsc	status,2,c
 10410   00423C  EF22  F021         	goto	l9085
 10411   004240  EF35  F021         	goto	l7809
 10412   004244                     l9085:
 10413                           
 10414                           ; Switch size 1, requested type "simple"
 10415                           ; Number of cases is 4, Range of values is 1 to 4
 10416                           ; switch strategies available:
 10417                           ; Name         Instructions Cycles
 10418                           ; simple_byte           13     7 (average)
 10419                           ;	Chosen strategy is simple_byte
 10420   004244  5017               	movf	??_lcd_4bit_set_cursor^0,w,c
 10421   004246  0A01               	xorlw	1	; case 1
 10422   004248  B4D8               	btfsc	status,2,c
 10423   00424A  EFE8  F020         	goto	l7799
 10424   00424E  0A03               	xorlw	3	; case 2
 10425   004250  B4D8               	btfsc	status,2,c
 10426   004252  EFF4  F020         	goto	l7801
 10427   004256  0A01               	xorlw	1	; case 3
 10428   004258  B4D8               	btfsc	status,2,c
 10429   00425A  EF00  F021         	goto	l7803
 10430   00425E  0A07               	xorlw	7	; case 4
 10431   004260  B4D8               	btfsc	status,2,c
 10432   004262  EF0C  F021         	goto	l7805
 10433   004266  EF35  F021         	goto	l7809
 10434   00426A                     l7809:
 10435                           
 10436                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 537:     return ret;
 10437   00426A  5019               	movf	lcd_4bit_set_cursor@ret^0,w,c
 10438   00426C  0012               	return		;funcret
 10439   00426E                     __end_of_lcd_4bit_set_cursor:
 10440                           	callstack 0
 10441                           
 10442 ;; *************** function _lcd_4bit_send_command *****************
 10443 ;; Defined at:
 10444 ;;		line 59 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
 10445 ;; Parameters:    Size  Location     Type
 10446 ;;  lcd             2   14[COMRAM] PTR const struct .
 10447 ;;		 -> my_lcd(6), 
 10448 ;;  command         1   16[COMRAM] unsigned char 
 10449 ;; Auto vars:     Size  Location     Type
 10450 ;;  ret             1   17[COMRAM] unsigned char 
 10451 ;; Return value:  Size  Location     Type
 10452 ;;                  1    wreg      unsigned char 
 10453 ;; Registers used:
 10454 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10455 ;; Tracked objects:
 10456 ;;		On entry : 0/0
 10457 ;;		On exit  : 0/0
 10458 ;;		Unchanged: 0/0
 10459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10460 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10461 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10463 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10464 ;;Total ram usage:        4 bytes
 10465 ;; Hardware stack levels used: 1
 10466 ;; Hardware stack levels required when called: 2
 10467 ;; This function calls:
 10468 ;;		_gpio_pin_write_logic
 10469 ;;		_lcd_4bit_send_enable_signal
 10470 ;;		_lcd_send_4bits
 10471 ;; This function is called by:
 10472 ;;		_lcd_4bit_set_cursor
 10473 ;;		_main
 10474 ;;		_calculation_start
 10475 ;;		_lcd_4bit_intialize
 10476 ;;		_lcd_4bit_send_custom_char
 10477 ;; This function uses a non-reentrant model
 10478 ;;
 10479                           
 10480                           	psect	text48
 10481   004452                     __ptext48:
 10482                           	callstack 0
 10483   004452                     _lcd_4bit_send_command:
 10484                           	callstack 26
 10485   004452                     
 10486                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 61:     if(((void*)0) == lcd){
 10487   004452  500F               	movf	lcd_4bit_send_command@lcd^0,w,c
 10488   004454  1010               	iorwf	(lcd_4bit_send_command@lcd+1)^0,w,c
 10489   004456  A4D8               	btfss	status,2,c
 10490   004458  EF30  F022         	goto	u8241
 10491   00445C  EF32  F022         	goto	u8240
 10492   004460                     u8241:
 10493   004460  EF36  F022         	goto	l7497
 10494   004464                     u8240:
 10495   004464                     
 10496                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 62:         ret = (Std_ReturnType)0x00;
 10497   004464  0E00               	movlw	0
 10498   004466  6E12               	movwf	lcd_4bit_send_command@ret^0,c
 10499                           
 10500                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 63:     }
 10501   004468  EF60  F022         	goto	l7499
 10502   00446C                     l7497:
 10503                           
 10504                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 67:         ret = gpio_pin_write_logic(&(lcd->lcd_rs),
      +                           GPIO_LOW);
 10505   00446C  C00F  F001         	movff	lcd_4bit_send_command@lcd,gpio_pin_write_logic@_pin_config
 10506   004470  C010  F002         	movff	lcd_4bit_send_command@lcd+1,gpio_pin_write_logic@_pin_config+1
 10507   004474  0E00               	movlw	0
 10508   004476  6E03               	movwf	gpio_pin_write_logic@logic^0,c
 10509   004478  EC7F  F01C         	call	_gpio_pin_write_logic	;wreg free
 10510   00447C  6E12               	movwf	lcd_4bit_send_command@ret^0,c
 10511                           
 10512                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 69:         ret = lcd_send_4bits(lcd, command >> 4);
 10513   00447E  C00F  F00B         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
 10514   004482  C010  F00C         	movff	lcd_4bit_send_command@lcd+1,lcd_send_4bits@lcd+1
 10515   004486  3811               	swapf	lcd_4bit_send_command@command^0,w,c
 10516   004488  0B0F               	andlw	15
 10517   00448A  6E0D               	movwf	lcd_send_4bits@_data_command^0,c
 10518   00448C  ECD1  F022         	call	_lcd_send_4bits	;wreg free
 10519   004490  6E12               	movwf	lcd_4bit_send_command@ret^0,c
 10520                           
 10521                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 71:         ret = lcd_4bit_send_enable_signal(lcd);
 10522   004492  C00F  F00B         	movff	lcd_4bit_send_command@lcd,lcd_4bit_send_enable_signal@lcd
 10523   004496  C010  F00C         	movff	lcd_4bit_send_command@lcd+1,lcd_4bit_send_enable_signal@lcd+1
 10524   00449A  EC5A  F025         	call	_lcd_4bit_send_enable_signal	;wreg free
 10525   00449E  6E12               	movwf	lcd_4bit_send_command@ret^0,c
 10526                           
 10527                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 73:         ret = lcd_send_4bits(lcd, command);
 10528   0044A0  C00F  F00B         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
 10529   0044A4  C010  F00C         	movff	lcd_4bit_send_command@lcd+1,lcd_send_4bits@lcd+1
 10530   0044A8  C011  F00D         	movff	lcd_4bit_send_command@command,lcd_send_4bits@_data_command
 10531   0044AC  ECD1  F022         	call	_lcd_send_4bits	;wreg free
 10532   0044B0  6E12               	movwf	lcd_4bit_send_command@ret^0,c
 10533                           
 10534                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 75:         ret = lcd_4bit_send_enable_signal(lcd);
 10535   0044B2  C00F  F00B         	movff	lcd_4bit_send_command@lcd,lcd_4bit_send_enable_signal@lcd
 10536   0044B6  C010  F00C         	movff	lcd_4bit_send_command@lcd+1,lcd_4bit_send_enable_signal@lcd+1
 10537   0044BA  EC5A  F025         	call	_lcd_4bit_send_enable_signal	;wreg free
 10538   0044BE  6E12               	movwf	lcd_4bit_send_command@ret^0,c
 10539   0044C0                     l7499:
 10540                           
 10541                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 77:     return ret;
 10542   0044C0  5012               	movf	lcd_4bit_send_command@ret^0,w,c
 10543   0044C2  0012               	return		;funcret
 10544   0044C4                     __end_of_lcd_4bit_send_command:
 10545                           	callstack 0
 10546                           
 10547 ;; *************** function _lcd_4bit_send_char_data *****************
 10548 ;; Defined at:
 10549 ;;		line 88 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
 10550 ;; Parameters:    Size  Location     Type
 10551 ;;  lcd             2   14[COMRAM] PTR const struct .
 10552 ;;		 -> my_lcd(6), 
 10553 ;;  data            1   16[COMRAM] unsigned char 
 10554 ;; Auto vars:     Size  Location     Type
 10555 ;;  ret             1   17[COMRAM] unsigned char 
 10556 ;; Return value:  Size  Location     Type
 10557 ;;                  1    wreg      unsigned char 
 10558 ;; Registers used:
 10559 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10560 ;; Tracked objects:
 10561 ;;		On entry : 0/0
 10562 ;;		On exit  : 0/0
 10563 ;;		Unchanged: 0/0
 10564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10565 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10566 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10568 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10569 ;;Total ram usage:        4 bytes
 10570 ;; Hardware stack levels used: 1
 10571 ;; Hardware stack levels required when called: 2
 10572 ;; This function calls:
 10573 ;;		_gpio_pin_write_logic
 10574 ;;		_lcd_4bit_send_enable_signal
 10575 ;;		_lcd_send_4bits
 10576 ;; This function is called by:
 10577 ;;		_lcd_4bit_send_char_data_pos
 10578 ;;		_lcd_4bit_send_string_pos
 10579 ;;		_main
 10580 ;;		_calculation_start
 10581 ;;		_lcd_4bit_send_string
 10582 ;;		_lcd_4bit_send_custom_char
 10583 ;; This function uses a non-reentrant model
 10584 ;;
 10585                           
 10586                           	psect	text49
 10587   0044C4                     __ptext49:
 10588                           	callstack 0
 10589   0044C4                     _lcd_4bit_send_char_data:
 10590                           	callstack 27
 10591   0044C4                     
 10592                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 90:     if(((void*)0) == lcd){
 10593   0044C4  500F               	movf	lcd_4bit_send_char_data@lcd^0,w,c
 10594   0044C6  1010               	iorwf	(lcd_4bit_send_char_data@lcd+1)^0,w,c
 10595   0044C8  A4D8               	btfss	status,2,c
 10596   0044CA  EF69  F022         	goto	u8681
 10597   0044CE  EF6B  F022         	goto	u8680
 10598   0044D2                     u8681:
 10599   0044D2  EF6F  F022         	goto	l7789
 10600   0044D6                     u8680:
 10601   0044D6                     
 10602                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 91:         ret = (Std_ReturnType)0x00;
 10603   0044D6  0E00               	movlw	0
 10604   0044D8  6E12               	movwf	lcd_4bit_send_char_data@ret^0,c
 10605                           
 10606                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 92:     }
 10607   0044DA  EF99  F022         	goto	l7791
 10608   0044DE                     l7789:
 10609                           
 10610                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 96:         ret = gpio_pin_write_logic(&(lcd->lcd_rs),
      +                           GPIO_HIGH);
 10611   0044DE  C00F  F001         	movff	lcd_4bit_send_char_data@lcd,gpio_pin_write_logic@_pin_config
 10612   0044E2  C010  F002         	movff	lcd_4bit_send_char_data@lcd+1,gpio_pin_write_logic@_pin_config+1
 10613   0044E6  0E01               	movlw	1
 10614   0044E8  6E03               	movwf	gpio_pin_write_logic@logic^0,c
 10615   0044EA  EC7F  F01C         	call	_gpio_pin_write_logic	;wreg free
 10616   0044EE  6E12               	movwf	lcd_4bit_send_char_data@ret^0,c
 10617                           
 10618                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 98:         ret = lcd_send_4bits(lcd, data >> 4);
 10619   0044F0  C00F  F00B         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bits@lcd
 10620   0044F4  C010  F00C         	movff	lcd_4bit_send_char_data@lcd+1,lcd_send_4bits@lcd+1
 10621   0044F8  3811               	swapf	lcd_4bit_send_char_data@data^0,w,c
 10622   0044FA  0B0F               	andlw	15
 10623   0044FC  6E0D               	movwf	lcd_send_4bits@_data_command^0,c
 10624   0044FE  ECD1  F022         	call	_lcd_send_4bits	;wreg free
 10625   004502  6E12               	movwf	lcd_4bit_send_char_data@ret^0,c
 10626                           
 10627                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 100:         ret = lcd_4bit_send_enable_signal(lcd);
 10628   004504  C00F  F00B         	movff	lcd_4bit_send_char_data@lcd,lcd_4bit_send_enable_signal@lcd
 10629   004508  C010  F00C         	movff	lcd_4bit_send_char_data@lcd+1,lcd_4bit_send_enable_signal@lcd+1
 10630   00450C  EC5A  F025         	call	_lcd_4bit_send_enable_signal	;wreg free
 10631   004510  6E12               	movwf	lcd_4bit_send_char_data@ret^0,c
 10632                           
 10633                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 102:         ret = lcd_send_4bits(lcd, data);
 10634   004512  C00F  F00B         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bits@lcd
 10635   004516  C010  F00C         	movff	lcd_4bit_send_char_data@lcd+1,lcd_send_4bits@lcd+1
 10636   00451A  C011  F00D         	movff	lcd_4bit_send_char_data@data,lcd_send_4bits@_data_command
 10637   00451E  ECD1  F022         	call	_lcd_send_4bits	;wreg free
 10638   004522  6E12               	movwf	lcd_4bit_send_char_data@ret^0,c
 10639                           
 10640                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 104:         ret = lcd_4bit_send_enable_signal(lcd);
 10641   004524  C00F  F00B         	movff	lcd_4bit_send_char_data@lcd,lcd_4bit_send_enable_signal@lcd
 10642   004528  C010  F00C         	movff	lcd_4bit_send_char_data@lcd+1,lcd_4bit_send_enable_signal@lcd+1
 10643   00452C  EC5A  F025         	call	_lcd_4bit_send_enable_signal	;wreg free
 10644   004530  6E12               	movwf	lcd_4bit_send_char_data@ret^0,c
 10645   004532                     l7791:
 10646                           
 10647                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 106:     return ret;
 10648   004532  5012               	movf	lcd_4bit_send_char_data@ret^0,w,c
 10649   004534  0012               	return		;funcret
 10650   004536                     __end_of_lcd_4bit_send_char_data:
 10651                           	callstack 0
 10652                           
 10653 ;; *************** function _lcd_send_4bits *****************
 10654 ;; Defined at:
 10655 ;;		line 457 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
 10656 ;; Parameters:    Size  Location     Type
 10657 ;;  lcd             2   10[COMRAM] PTR const struct .
 10658 ;;		 -> my_lcd(6), 
 10659 ;;  _data_comman    1   12[COMRAM] unsigned char 
 10660 ;; Auto vars:     Size  Location     Type
 10661 ;;  ret             1   13[COMRAM] unsigned char 
 10662 ;; Return value:  Size  Location     Type
 10663 ;;                  1    wreg      unsigned char 
 10664 ;; Registers used:
 10665 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10666 ;; Tracked objects:
 10667 ;;		On entry : 0/0
 10668 ;;		On exit  : 0/0
 10669 ;;		Unchanged: 0/0
 10670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10671 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10672 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10674 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10675 ;;Total ram usage:        4 bytes
 10676 ;; Hardware stack levels used: 1
 10677 ;; Hardware stack levels required when called: 1
 10678 ;; This function calls:
 10679 ;;		_gpio_pin_write_logic
 10680 ;; This function is called by:
 10681 ;;		_lcd_4bit_send_command
 10682 ;;		_lcd_4bit_send_char_data
 10683 ;; This function uses a non-reentrant model
 10684 ;;
 10685                           
 10686                           	psect	text50
 10687   0045A2                     __ptext50:
 10688                           	callstack 0
 10689   0045A2                     _lcd_send_4bits:
 10690                           	callstack 26
 10691   0045A2  0E02               	movlw	2
 10692   0045A4  240B               	addwf	lcd_send_4bits@lcd^0,w,c
 10693   0045A6  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
 10694   0045A8  0E00               	movlw	0
 10695   0045AA  200C               	addwfc	(lcd_send_4bits@lcd+1)^0,w,c
 10696   0045AC  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
 10697   0045AE  500D               	movf	lcd_send_4bits@_data_command^0,w,c
 10698   0045B0  0B01               	andlw	1
 10699   0045B2  6E03               	movwf	gpio_pin_write_logic@logic^0,c
 10700   0045B4  EC7F  F01C         	call	_gpio_pin_write_logic	;wreg free
 10701   0045B8  0E03               	movlw	3
 10702   0045BA  240B               	addwf	lcd_send_4bits@lcd^0,w,c
 10703   0045BC  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
 10704   0045BE  0E00               	movlw	0
 10705   0045C0  200C               	addwfc	(lcd_send_4bits@lcd+1)^0,w,c
 10706   0045C2  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
 10707   0045C4  90D8               	bcf	status,0,c
 10708   0045C6  300D               	rrcf	lcd_send_4bits@_data_command^0,w,c
 10709   0045C8  0B01               	andlw	1
 10710   0045CA  6E03               	movwf	gpio_pin_write_logic@logic^0,c
 10711   0045CC  EC7F  F01C         	call	_gpio_pin_write_logic	;wreg free
 10712   0045D0  0E04               	movlw	4
 10713   0045D2  240B               	addwf	lcd_send_4bits@lcd^0,w,c
 10714   0045D4  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
 10715   0045D6  0E00               	movlw	0
 10716   0045D8  200C               	addwfc	(lcd_send_4bits@lcd+1)^0,w,c
 10717   0045DA  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
 10718   0045DC  400D               	rrncf	lcd_send_4bits@_data_command^0,w,c
 10719   0045DE  42E8               	rrncf	wreg,f,c
 10720   0045E0  0B3F               	andlw	63
 10721   0045E2  0B01               	andlw	1
 10722   0045E4  6E03               	movwf	gpio_pin_write_logic@logic^0,c
 10723   0045E6  EC7F  F01C         	call	_gpio_pin_write_logic	;wreg free
 10724   0045EA                     
 10725                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 462:     ret = gpio_pin_write_logic(&(lcd->lcd_data[3]
      +                          ), (_data_command >> 3) & (uint8)0x01);
 10726   0045EA  0E05               	movlw	5
 10727   0045EC  240B               	addwf	lcd_send_4bits@lcd^0,w,c
 10728   0045EE  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
 10729   0045F0  0E00               	movlw	0
 10730   0045F2  200C               	addwfc	(lcd_send_4bits@lcd+1)^0,w,c
 10731   0045F4  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
 10732   0045F6  380D               	swapf	lcd_send_4bits@_data_command^0,w,c
 10733   0045F8  46E8               	rlncf	wreg,f,c
 10734   0045FA  0B1F               	andlw	31
 10735   0045FC  0B01               	andlw	1
 10736   0045FE  6E03               	movwf	gpio_pin_write_logic@logic^0,c
 10737   004600  EC7F  F01C         	call	_gpio_pin_write_logic	;wreg free
 10738   004604  6E0E               	movwf	lcd_send_4bits@ret^0,c
 10739                           
 10740                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 463:     return ret;
 10741   004606  500E               	movf	lcd_send_4bits@ret^0,w,c
 10742   004608  0012               	return		;funcret
 10743   00460A                     __end_of_lcd_send_4bits:
 10744                           	callstack 0
 10745                           
 10746 ;; *************** function _lcd_4bit_send_enable_signal *****************
 10747 ;; Defined at:
 10748 ;;		line 473 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
 10749 ;; Parameters:    Size  Location     Type
 10750 ;;  lcd             2   10[COMRAM] PTR const struct .
 10751 ;;		 -> my_lcd(6), 
 10752 ;; Auto vars:     Size  Location     Type
 10753 ;;  ret             1   12[COMRAM] unsigned char 
 10754 ;; Return value:  Size  Location     Type
 10755 ;;                  1    wreg      unsigned char 
 10756 ;; Registers used:
 10757 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10758 ;; Tracked objects:
 10759 ;;		On entry : 0/0
 10760 ;;		On exit  : 0/0
 10761 ;;		Unchanged: 0/0
 10762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10763 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10764 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10766 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10767 ;;Total ram usage:        3 bytes
 10768 ;; Hardware stack levels used: 1
 10769 ;; Hardware stack levels required when called: 1
 10770 ;; This function calls:
 10771 ;;		_gpio_pin_write_logic
 10772 ;; This function is called by:
 10773 ;;		_lcd_4bit_send_command
 10774 ;;		_lcd_4bit_send_char_data
 10775 ;; This function uses a non-reentrant model
 10776 ;;
 10777                           
 10778                           	psect	text51
 10779   004AB4                     __ptext51:
 10780                           	callstack 0
 10781   004AB4                     _lcd_4bit_send_enable_signal:
 10782                           	callstack 26
 10783   004AB4  0E01               	movlw	1
 10784   004AB6  240B               	addwf	lcd_4bit_send_enable_signal@lcd^0,w,c
 10785   004AB8  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
 10786   004ABA  0E00               	movlw	0
 10787   004ABC  200C               	addwfc	(lcd_4bit_send_enable_signal@lcd+1)^0,w,c
 10788   004ABE  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
 10789   004AC0  0E01               	movlw	1
 10790   004AC2  6E03               	movwf	gpio_pin_write_logic@logic^0,c
 10791   004AC4  EC7F  F01C         	call	_gpio_pin_write_logic	;wreg free
 10792   004AC8                     
 10793                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 476:     _delay((unsigned long)((5)*(4000000UL/4000000
      +                          .0)));
 10794   004AC8  D000               	nop2		;2 cycle nop
 10795   004ACA  D000               	nop2		;2 cycle nop
 10796   004ACC  0000               	nop	
 10797   004ACE                     
 10798                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 477:     ret = gpio_pin_write_logic(&(lcd->lcd_en), GP
      +                          IO_LOW);
 10799   004ACE  0E01               	movlw	1
 10800   004AD0  240B               	addwf	lcd_4bit_send_enable_signal@lcd^0,w,c
 10801   004AD2  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
 10802   004AD4  0E00               	movlw	0
 10803   004AD6  200C               	addwfc	(lcd_4bit_send_enable_signal@lcd+1)^0,w,c
 10804   004AD8  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
 10805   004ADA  0E00               	movlw	0
 10806   004ADC  6E03               	movwf	gpio_pin_write_logic@logic^0,c
 10807   004ADE  EC7F  F01C         	call	_gpio_pin_write_logic	;wreg free
 10808   004AE2  6E0D               	movwf	lcd_4bit_send_enable_signal@ret^0,c
 10809                           
 10810                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 478:     return ret;
 10811   004AE4  500D               	movf	lcd_4bit_send_enable_signal@ret^0,w,c
 10812   004AE6  0012               	return		;funcret
 10813   004AE8                     __end_of_lcd_4bit_send_enable_signal:
 10814                           	callstack 0
 10815                           
 10816 ;; *************** function _gpio_pin_write_logic *****************
 10817 ;; Defined at:
 10818 ;;		line 75 in file "MCAL_Layer/GPIO/hal_gpio.c"
 10819 ;; Parameters:    Size  Location     Type
 10820 ;;  _pin_config     2    0[COMRAM] PTR const struct .
 10821 ;;		 -> pad1$keypad_row_pins(4), pad1(10), my_lcd$lcd_data(4), my_lcd(6), 
 10822 ;;		 -> relay_turn_off@pin_obj(1), relay_turn_on@pin_obj(1), relay_initialize@pin_obj(1), led_turn_off@pin_obj(1), 
 10823 ;;		 -> led_turn_on@pin_obj(1), led_initialize@pin_obj(1), 
 10824 ;;  logic           1    2[COMRAM] enum E2978
 10825 ;; Auto vars:     Size  Location     Type
 10826 ;;  ret             1    9[COMRAM] unsigned char 
 10827 ;; Return value:  Size  Location     Type
 10828 ;;                  1    wreg      unsigned char 
 10829 ;; Registers used:
 10830 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10831 ;; Tracked objects:
 10832 ;;		On entry : 0/0
 10833 ;;		On exit  : 0/0
 10834 ;;		Unchanged: 0/0
 10835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10836 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10837 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10838 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10839 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10840 ;;Total ram usage:       10 bytes
 10841 ;; Hardware stack levels used: 1
 10842 ;; This function calls:
 10843 ;;		Nothing
 10844 ;; This function is called by:
 10845 ;;		_lcd_4bit_send_command
 10846 ;;		_lcd_4bit_send_char_data
 10847 ;;		_lcd_send_4bits
 10848 ;;		_lcd_4bit_send_enable_signal
 10849 ;;		_keypad_get_value
 10850 ;;		_seven_segement_write_number
 10851 ;;		_lcd_8bit_send_command
 10852 ;;		_lcd_8bit_send_char_data
 10853 ;;		_lcd_8bit_send_enable_signal
 10854 ;;		_dc_motor_move_right
 10855 ;;		_dc_motor_move_left
 10856 ;;		_dc_motor_stop
 10857 ;;		_led_turn_on
 10858 ;;		_led_turn_off
 10859 ;;		_relay_turn_on
 10860 ;;		_relay_turn_off
 10861 ;;		_gpio_pin_intialize
 10862 ;; This function uses a non-reentrant model
 10863 ;;
 10864                           
 10865                           	psect	text52
 10866   0038FE                     __ptext52:
 10867                           	callstack 0
 10868   0038FE                     _gpio_pin_write_logic:
 10869                           	callstack 26
 10870   0038FE                     
 10871                           ;MCAL_Layer/GPIO/hal_gpio.c: 76:     Std_ReturnType ret = (Std_ReturnType)0x01;
 10872   0038FE  0E01               	movlw	1
 10873   003900  6E0A               	movwf	gpio_pin_write_logic@ret^0,c
 10874   003902                     
 10875                           ;MCAL_Layer/GPIO/hal_gpio.c: 77:     if(((void*)0) == _pin_config || _pin_config->pin > 
      +                          8 -1){
 10876   003902  5001               	movf	gpio_pin_write_logic@_pin_config^0,w,c
 10877   003904  1002               	iorwf	(gpio_pin_write_logic@_pin_config+1)^0,w,c
 10878   003906  B4D8               	btfsc	status,2,c
 10879   003908  EF88  F01C         	goto	u6871
 10880   00390C  EF8A  F01C         	goto	u6870
 10881   003910                     u6871:
 10882   003910  EF9B  F01C         	goto	l6701
 10883   003914                     u6870:
 10884   003914  C001  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
 10885   003918  C002  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
 10886   00391C  30DF               	rrcf	223,w,c
 10887   00391E  32E8               	rrcf	wreg,f,c
 10888   003920  32E8               	rrcf	wreg,f,c
 10889   003922  0B07               	andlw	7
 10890   003924  6E04               	movwf	??_gpio_pin_write_logic^0,c
 10891   003926  0E07               	movlw	7
 10892   003928  6404               	cpfsgt	??_gpio_pin_write_logic^0,c
 10893   00392A  EF99  F01C         	goto	u6881
 10894   00392E  EF9B  F01C         	goto	u6880
 10895   003932                     u6881:
 10896   003932  EFFE  F01C         	goto	l6709
 10897   003936                     u6880:
 10898   003936                     l6701:
 10899                           
 10900                           ;MCAL_Layer/GPIO/hal_gpio.c: 78:         ret = (Std_ReturnType)0x00;
 10901   003936  0E00               	movlw	0
 10902   003938  6E0A               	movwf	gpio_pin_write_logic@ret^0,c
 10903                           
 10904                           ;MCAL_Layer/GPIO/hal_gpio.c: 79:     }
 10905   00393A  EF13  F01D         	goto	l6711
 10906   00393E                     l6703:
 10907                           
 10908                           ;MCAL_Layer/GPIO/hal_gpio.c: 83:                 (*lat_registers[_pin_config->port] &= ~
      +                          ((uint8)1 << _pin_config->pin));
 10909   00393E  C001  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
 10910   003942  C002  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
 10911   003946  30DF               	rrcf	223,w,c
 10912   003948  32E8               	rrcf	wreg,f,c
 10913   00394A  32E8               	rrcf	wreg,f,c
 10914   00394C  0B07               	andlw	7
 10915   00394E  6E04               	movwf	??_gpio_pin_write_logic^0,c
 10916   003950  0E01               	movlw	1
 10917   003952  6E05               	movwf	(??_gpio_pin_write_logic+1)^0,c
 10918   003954  2A04               	incf	??_gpio_pin_write_logic^0,f,c
 10919   003956  EFAF  F01C         	goto	u6894
 10920   00395A                     u6895:
 10921   00395A  90D8               	bcf	status,0,c
 10922   00395C  3605               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
 10923   00395E                     u6894:
 10924   00395E  2E04               	decfsz	??_gpio_pin_write_logic^0,f,c
 10925   003960  EFAD  F01C         	goto	u6895
 10926   003964  5005               	movf	(??_gpio_pin_write_logic+1)^0,w,c
 10927   003966  0AFF               	xorlw	255
 10928   003968  6E06               	movwf	(??_gpio_pin_write_logic+2)^0,c
 10929   00396A  C001  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
 10930   00396E  C002  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
 10931   003972  50DF               	movf	223,w,c
 10932   003974  0B07               	andlw	7
 10933   003976  6E07               	movwf	(??_gpio_pin_write_logic+3)^0,c
 10934   003978  5007               	movf	(??_gpio_pin_write_logic+3)^0,w,c
 10935   00397A  0D02               	mullw	2
 10936   00397C  0E79               	movlw	low _lat_registers
 10937   00397E  24F3               	addwf	243,w,c
 10938   003980  6ED9               	movwf	fsr2l,c
 10939   003982  0E01               	movlw	high _lat_registers
 10940   003984  20F4               	addwfc	prodh,w,c
 10941   003986  6EDA               	movwf	fsr2h,c
 10942   003988  CFDE F008          	movff	postinc2,??_gpio_pin_write_logic+4
 10943   00398C  CFDD F009          	movff	postdec2,??_gpio_pin_write_logic+5
 10944   003990  C008  FFD9         	movff	??_gpio_pin_write_logic+4,fsr2l
 10945   003994  C009  FFDA         	movff	??_gpio_pin_write_logic+5,fsr2h
 10946   003998  5006               	movf	(??_gpio_pin_write_logic+2)^0,w,c
 10947   00399A  16DF               	andwf	indf2,f,c
 10948                           
 10949                           ;MCAL_Layer/GPIO/hal_gpio.c: 84:                 break;
 10950   00399C  EF13  F01D         	goto	l6711
 10951   0039A0                     l6705:
 10952                           
 10953                           ;MCAL_Layer/GPIO/hal_gpio.c: 86:                 (*lat_registers[_pin_config->port] |= (
      +                          (uint8)1 << _pin_config->pin));
 10954   0039A0  C001  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
 10955   0039A4  C002  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
 10956   0039A8  30DF               	rrcf	223,w,c
 10957   0039AA  32E8               	rrcf	wreg,f,c
 10958   0039AC  32E8               	rrcf	wreg,f,c
 10959   0039AE  0B07               	andlw	7
 10960   0039B0  6E04               	movwf	??_gpio_pin_write_logic^0,c
 10961   0039B2  0E01               	movlw	1
 10962   0039B4  6E05               	movwf	(??_gpio_pin_write_logic+1)^0,c
 10963   0039B6  2A04               	incf	??_gpio_pin_write_logic^0,f,c
 10964   0039B8  EFE0  F01C         	goto	u6904
 10965   0039BC                     u6905:
 10966   0039BC  90D8               	bcf	status,0,c
 10967   0039BE  3605               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
 10968   0039C0                     u6904:
 10969   0039C0  2E04               	decfsz	??_gpio_pin_write_logic^0,f,c
 10970   0039C2  EFDE  F01C         	goto	u6905
 10971   0039C6  C001  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
 10972   0039CA  C002  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
 10973   0039CE  50DF               	movf	223,w,c
 10974   0039D0  0B07               	andlw	7
 10975   0039D2  6E06               	movwf	(??_gpio_pin_write_logic+2)^0,c
 10976   0039D4  5006               	movf	(??_gpio_pin_write_logic+2)^0,w,c
 10977   0039D6  0D02               	mullw	2
 10978   0039D8  0E79               	movlw	low _lat_registers
 10979   0039DA  24F3               	addwf	243,w,c
 10980   0039DC  6ED9               	movwf	fsr2l,c
 10981   0039DE  0E01               	movlw	high _lat_registers
 10982   0039E0  20F4               	addwfc	prodh,w,c
 10983   0039E2  6EDA               	movwf	fsr2h,c
 10984   0039E4  CFDE F007          	movff	postinc2,??_gpio_pin_write_logic+3
 10985   0039E8  CFDD F008          	movff	postdec2,??_gpio_pin_write_logic+4
 10986   0039EC  C007  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
 10987   0039F0  C008  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
 10988   0039F4  5005               	movf	(??_gpio_pin_write_logic+1)^0,w,c
 10989   0039F6  12DF               	iorwf	indf2,f,c
 10990                           
 10991                           ;MCAL_Layer/GPIO/hal_gpio.c: 87:                 break;
 10992   0039F8  EF13  F01D         	goto	l6711
 10993   0039FC                     l6709:
 10994   0039FC  5003               	movf	gpio_pin_write_logic@logic^0,w,c
 10995   0039FE  6E04               	movwf	??_gpio_pin_write_logic^0,c
 10996   003A00  6A05               	clrf	(??_gpio_pin_write_logic+1)^0,c
 10997                           
 10998                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10999                           ; Switch size 1, requested type "simple"
 11000                           ; Number of cases is 1, Range of values is 0 to 0
 11001                           ; switch strategies available:
 11002                           ; Name         Instructions Cycles
 11003                           ; simple_byte            4     3 (average)
 11004                           ;	Chosen strategy is simple_byte
 11005   003A02  5005               	movf	(??_gpio_pin_write_logic+1)^0,w,c
 11006   003A04  0A00               	xorlw	0	; case 0
 11007   003A06  B4D8               	btfsc	status,2,c
 11008   003A08  EF08  F01D         	goto	l9087
 11009   003A0C  EF9B  F01C         	goto	l6701
 11010   003A10                     l9087:
 11011                           
 11012                           ; Switch size 1, requested type "simple"
 11013                           ; Number of cases is 2, Range of values is 0 to 1
 11014                           ; switch strategies available:
 11015                           ; Name         Instructions Cycles
 11016                           ; simple_byte            7     4 (average)
 11017                           ;	Chosen strategy is simple_byte
 11018   003A10  5004               	movf	??_gpio_pin_write_logic^0,w,c
 11019   003A12  0A00               	xorlw	0	; case 0
 11020   003A14  B4D8               	btfsc	status,2,c
 11021   003A16  EF9F  F01C         	goto	l6703
 11022   003A1A  0A01               	xorlw	1	; case 1
 11023   003A1C  B4D8               	btfsc	status,2,c
 11024   003A1E  EFD0  F01C         	goto	l6705
 11025   003A22  EF9B  F01C         	goto	l6701
 11026   003A26                     l6711:
 11027                           
 11028                           ;MCAL_Layer/GPIO/hal_gpio.c: 91:     return ret;
 11029   003A26  500A               	movf	gpio_pin_write_logic@ret^0,w,c
 11030   003A28  0012               	return		;funcret
 11031   003A2A                     __end_of_gpio_pin_write_logic:
 11032                           	callstack 0
 11033                           
 11034 ;; *************** function _application_initialize *****************
 11035 ;; Defined at:
 11036 ;;		line 132 in file "application.c"
 11037 ;; Parameters:    Size  Location     Type
 11038 ;;		None
 11039 ;; Auto vars:     Size  Location     Type
 11040 ;;  ret             1    0        unsigned char 
 11041 ;; Return value:  Size  Location     Type
 11042 ;;                  1    wreg      void 
 11043 ;; Registers used:
 11044 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, bsr, status,2, status,0, pcl, pclath, pclatu, btemp, b
      +temp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, 
      +btemp+14, btemp+15, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, 
      +btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, cs
      +tack
 11045 ;; Tracked objects:
 11046 ;;		On entry : 0/0
 11047 ;;		On exit  : 0/0
 11048 ;;		Unchanged: 0/0
 11049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11053 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11054 ;;Total ram usage:        0 bytes
 11055 ;; Hardware stack levels used: 1
 11056 ;; Hardware stack levels required when called: 1
 11057 ;; This function calls:
 11058 ;;		_ecu_layer_initialize
 11059 ;; This function is called by:
 11060 ;;		_main
 11061 ;; This function uses a non-reentrant model
 11062 ;;
 11063                           
 11064                           	psect	text53
 11065   004B82                     __ptext53:
 11066                           	callstack 0
 11067   004B82                     _application_initialize:
 11068                           	callstack 29
 11069   004B82                     
 11070                           ;application.c: 134:     ecu_layer_initialize();
 11071   004B82  EC00  F000         	call	_ecu_layer_initialize	;wreg free
 11072   004B86  0012               	return		;funcret
 11073   004B88                     __end_of_application_initialize:
 11074                           	callstack 0
 11075                           
 11076                           	psect	rparam
 11077   000000                     
 11078                           	psect	idloc
 11079                           
 11080                           ;Config register IDLOC0 @ 0x200000
 11081                           ;	unspecified, using default values
 11082   200000                     	org	2097152
 11083   200000  FF                 	db	255
 11084                           
 11085                           ;Config register IDLOC1 @ 0x200001
 11086                           ;	unspecified, using default values
 11087   200001                     	org	2097153
 11088   200001  FF                 	db	255
 11089                           
 11090                           ;Config register IDLOC2 @ 0x200002
 11091                           ;	unspecified, using default values
 11092   200002                     	org	2097154
 11093   200002  FF                 	db	255
 11094                           
 11095                           ;Config register IDLOC3 @ 0x200003
 11096                           ;	unspecified, using default values
 11097   200003                     	org	2097155
 11098   200003  FF                 	db	255
 11099                           
 11100                           ;Config register IDLOC4 @ 0x200004
 11101                           ;	unspecified, using default values
 11102   200004                     	org	2097156
 11103   200004  FF                 	db	255
 11104                           
 11105                           ;Config register IDLOC5 @ 0x200005
 11106                           ;	unspecified, using default values
 11107   200005                     	org	2097157
 11108   200005  FF                 	db	255
 11109                           
 11110                           ;Config register IDLOC6 @ 0x200006
 11111                           ;	unspecified, using default values
 11112   200006                     	org	2097158
 11113   200006  FF                 	db	255
 11114                           
 11115                           ;Config register IDLOC7 @ 0x200007
 11116                           ;	unspecified, using default values
 11117   200007                     	org	2097159
 11118   200007  FF                 	db	255
 11119                           
 11120                           	psect	config
 11121                           
 11122                           ; Padding undefined space
 11123   300000                     	org	3145728
 11124   300000  FF                 	db	255
 11125                           
 11126                           ;Config register CONFIG1H @ 0x300001
 11127                           ;	Oscillator Selection bits
 11128                           ;	OSC = HS, HS oscillator
 11129                           ;	Fail-Safe Clock Monitor Enable bit
 11130                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 11131                           ;	Internal/External Oscillator Switchover bit
 11132                           ;	IESO = OFF, Oscillator Switchover mode disabled
 11133   300001                     	org	3145729
 11134   300001  02                 	db	2
 11135                           
 11136                           ;Config register CONFIG2L @ 0x300002
 11137                           ;	Power-up Timer Enable bit
 11138                           ;	PWRT = OFF, PWRT disabled
 11139                           ;	Brown-out Reset Enable bits
 11140                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
 11141                           ;	Brown Out Reset Voltage bits
 11142                           ;	BORV = 1, 
 11143   300002                     	org	3145730
 11144   300002  09                 	db	9
 11145                           
 11146                           ;Config register CONFIG2H @ 0x300003
 11147                           ;	Watchdog Timer Enable bit
 11148                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 11149                           ;	Watchdog Timer Postscale Select bits
 11150                           ;	WDTPS = 512, 1:512
 11151   300003                     	org	3145731
 11152   300003  12                 	db	18
 11153                           
 11154                           ; Padding undefined space
 11155   300004                     	org	3145732
 11156   300004  FF                 	db	255
 11157                           
 11158                           ;Config register CONFIG3H @ 0x300005
 11159                           ;	CCP2 MUX bit
 11160                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
 11161                           ;	PORTB A/D Enable bit
 11162                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
 11163                           ;	Low-Power Timer1 Oscillator Enable bit
 11164                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 11165                           ;	MCLR Pin Enable bit
 11166                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 11167   300005                     	org	3145733
 11168   300005  81                 	db	129
 11169                           
 11170                           ;Config register CONFIG4L @ 0x300006
 11171                           ;	Stack Full/Underflow Reset Enable bit
 11172                           ;	STVREN = ON, Stack full/underflow will cause Reset
 11173                           ;	Single-Supply ICSP Enable bit
 11174                           ;	LVP = OFF, Single-Supply ICSP disabled
 11175                           ;	Extended Instruction Set Enable bit
 11176                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 11177                           ;	Background Debugger Enable bit
 11178                           ;	DEBUG = 0x1, unprogrammed default
 11179   300006                     	org	3145734
 11180   300006  81                 	db	129
 11181                           
 11182                           ; Padding undefined space
 11183   300007                     	org	3145735
 11184   300007  FF                 	db	255
 11185                           
 11186                           ;Config register CONFIG5L @ 0x300008
 11187                           ;	Code Protection bit
 11188                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
 11189                           ;	Code Protection bit
 11190                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
 11191                           ;	Code Protection bit
 11192                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
 11193                           ;	Code Protection bit
 11194                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
 11195   300008                     	org	3145736
 11196   300008  0F                 	db	15
 11197                           
 11198                           ;Config register CONFIG5H @ 0x300009
 11199                           ;	Boot Block Code Protection bit
 11200                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 11201                           ;	Data EEPROM Code Protection bit
 11202                           ;	CPD = OFF, Data EEPROM not code-protected
 11203   300009                     	org	3145737
 11204   300009  C0                 	db	192
 11205                           
 11206                           ;Config register CONFIG6L @ 0x30000A
 11207                           ;	Write Protection bit
 11208                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 11209                           ;	Write Protection bit
 11210                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 11211                           ;	Write Protection bit
 11212                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 11213                           ;	Write Protection bit
 11214                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
 11215   30000A                     	org	3145738
 11216   30000A  0F                 	db	15
 11217                           
 11218                           ;Config register CONFIG6H @ 0x30000B
 11219                           ;	Configuration Register Write Protection bit
 11220                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 11221                           ;	Boot Block Write Protection bit
 11222                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 11223                           ;	Data EEPROM Write Protection bit
 11224                           ;	WRTD = OFF, Data EEPROM not write-protected
 11225   30000B                     	org	3145739
 11226   30000B  E0                 	db	224
 11227                           
 11228                           ;Config register CONFIG7L @ 0x30000C
 11229                           ;	Table Read Protection bit
 11230                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 11231                           ;	Table Read Protection bit
 11232                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 11233                           ;	Table Read Protection bit
 11234                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 11235                           ;	Table Read Protection bit
 11236                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 11237   30000C                     	org	3145740
 11238   30000C  0F                 	db	15
 11239                           
 11240                           ;Config register CONFIG7H @ 0x30000D
 11241                           ;	Boot Block Table Read Protection bit
 11242                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 11243   30000D                     	org	3145741
 11244   30000D  40                 	db	64
 11245                           tosu	equ	0xFFF
 11246                           tosh	equ	0xFFE
 11247                           tosl	equ	0xFFD
 11248                           stkptr	equ	0xFFC
 11249                           pclatu	equ	0xFFB
 11250                           pclath	equ	0xFFA
 11251                           pcl	equ	0xFF9
 11252                           tblptru	equ	0xFF8
 11253                           tblptrh	equ	0xFF7
 11254                           tblptrl	equ	0xFF6
 11255                           tablat	equ	0xFF5
 11256                           prodh	equ	0xFF4
 11257                           prodl	equ	0xFF3
 11258                           indf0	equ	0xFEF
 11259                           postinc0	equ	0xFEE
 11260                           postdec0	equ	0xFED
 11261                           preinc0	equ	0xFEC
 11262                           plusw0	equ	0xFEB
 11263                           fsr0h	equ	0xFEA
 11264                           fsr0l	equ	0xFE9
 11265                           wreg	equ	0xFE8
 11266                           indf1	equ	0xFE7
 11267                           postinc1	equ	0xFE6
 11268                           postdec1	equ	0xFE5
 11269                           preinc1	equ	0xFE4
 11270                           plusw1	equ	0xFE3
 11271                           fsr1h	equ	0xFE2
 11272                           fsr1l	equ	0xFE1
 11273                           bsr	equ	0xFE0
 11274                           indf2	equ	0xFDF
 11275                           postinc2	equ	0xFDE
 11276                           postdec2	equ	0xFDD
 11277                           preinc2	equ	0xFDC
 11278                           plusw2	equ	0xFDB
 11279                           fsr2h	equ	0xFDA
 11280                           fsr2l	equ	0xFD9
 11281                           status	equ	0xFD8

Data Sizes:
    Strings     22
    Constant    24
    Data        55
    BSS         331
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    126     127
    BANK0           128    108     128
    BANK1           256      0     165
    BANK2           256      0     200
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    calculation_start@value	PTR unsigned char  size(1) Largest target is 1
		 -> val(BANK0[1]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    evaluatePostfix@postfix	PTR const unsigned char  size(2) Largest target is 100
		 -> postfix(BANK2[100]), 

    evaluatePostfix@result	PTR float  size(2) Largest target is 4
		 -> result(BANK1[4]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    gpio_pin_read_logic@_pin_config	PTR const struct . size(2) Largest target is 10
		 -> pad1(BANK1[10]), pad1$keypad_columns_pins(BANK1[6]), 

    gpio_pin_read_logic@logic	PTR enum E2978 size(1) Largest target is 1
		 -> button_read_state@Pin_Logic_Status(COMRAM[1]), keypad_get_value@column_logic(COMRAM[1]), 

    gpio_pin_write_logic@_pin_config	PTR const struct . size(2) Largest target is 10
		 -> led_initialize@pin_obj(COMRAM[1]), led_turn_off@pin_obj(COMRAM[1]), led_turn_on@pin_obj(COMRAM[1]), my_lcd(BANK1[6]), 
		 -> my_lcd$lcd_data(BANK1[4]), pad1(BANK1[10]), pad1$keypad_row_pins(BANK1[4]), relay_initialize@pin_obj(COMRAM[1]), 
		 -> relay_turn_off@pin_obj(COMRAM[1]), relay_turn_on@pin_obj(COMRAM[1]), 

    infixToPostfix@infix	PTR const unsigned char  size(2) Largest target is 100
		 -> infix(BANK2[100]), 

    infixToPostfix@postfix	PTR unsigned char  size(2) Largest target is 100
		 -> postfix(BANK2[100]), 

    initialize@stack	PTR struct . size(1) Largest target is 102
		 -> infixToPostfix@operatorStack(COMRAM[102]), 

    initialize_t@stack	PTR struct . size(1) Largest target is 82
		 -> evaluatePostfix@operandStack(BANK0[82]), 

    keypad_get_value@_keypad_obj	PTR const struct . size(2) Largest target is 10
		 -> pad1(BANK1[10]), 

    keypad_get_value@value	PTR unsigned char  size(1) Largest target is 1
		 -> val(BANK0[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), 

    lcd_4bit_send_char_data@lcd	PTR const struct . size(2) Largest target is 6
		 -> my_lcd(BANK1[6]), 

    lcd_4bit_send_char_data_pos@lcd	PTR const struct . size(2) Largest target is 6
		 -> my_lcd(BANK1[6]), 

    lcd_4bit_send_command@lcd	PTR const struct . size(2) Largest target is 6
		 -> my_lcd(BANK1[6]), 

    lcd_4bit_send_enable_signal@lcd	PTR const struct . size(2) Largest target is 6
		 -> my_lcd(BANK1[6]), 

    lcd_4bit_send_string_pos@lcd	PTR const struct . size(2) Largest target is 6
		 -> my_lcd(BANK1[6]), 

    lcd_4bit_send_string_pos@str	PTR unsigned char  size(2) Largest target is 11
		 -> arr(BANK1[11]), STR_5(CODE[6]), 

    lcd_4bit_set_cursor@lcd	PTR const struct . size(2) Largest target is 6
		 -> my_lcd(BANK1[6]), 

    lcd_send_4bits@lcd	PTR const struct . size(2) Largest target is 6
		 -> my_lcd(BANK1[6]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memset@dest	PTR void  size(2) Largest target is 100
		 -> arr(BANK1[11]), infix(BANK2[100]), postfix(BANK2[100]), 

    memset@p	PTR unsigned char  size(2) Largest target is 100
		 -> arr(BANK1[11]), infix(BANK2[100]), postfix(BANK2[100]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    pop@stack	PTR struct . size(1) Largest target is 102
		 -> infixToPostfix@operatorStack(COMRAM[102]), 

    pop_t@stack	PTR struct . size(1) Largest target is 82
		 -> evaluatePostfix@operandStack(BANK0[82]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), 
		 -> PORTE(BITBIGSFRll[1]), 

    push@stack	PTR struct . size(1) Largest target is 102
		 -> infixToPostfix@operatorStack(COMRAM[102]), 

    push_t@stack	PTR struct . size(1) Largest target is 82
		 -> evaluatePostfix@operandStack(BANK0[82]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(BANK0[1]), 

    S1376$buffer	PTR unsigned char  size(2) Largest target is 0

    S1376$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sp__memset	PTR void  size(2) Largest target is 100
		 -> arr(BANK1[11]), infix(BANK2[100]), postfix(BANK2[100]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), STR_4(CODE[5]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 11
		 -> arr(BANK1[11]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_6(CODE[4]), STR_9(CODE[4]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 11
		 -> arr(BANK1[11]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 11
		 -> arr(BANK1[11]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRll[1]), TRISB(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), 
		 -> TRISE(BITBIGSFRh[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), STR_4(CODE[5]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(BANK0[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), STR_4(CODE[5]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), STR_4(CODE[5]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 


Critical Paths under _main in COMRAM

    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _read_prec_or_width->___wmul
    _efgtoa->___flsub
    _floorf->___fldiv
    ___flge->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    _lcd_4bit_send_char_data_pos->_lcd_4bit_set_cursor
    _keypad_get_value->_gpio_pin_write_logic
    _infixToPostfix->_push
    _evaluatePostfix->_push_t
    _push_t->_doMath
    _doMath->___flsub
    ___flsub->___fladd
    ___fladd->___flmul
    ___flmul->___xxtofl
    _calculation_start->_lcd_4bit_send_string_pos
    _lcd_4bit_send_string_pos->_lcd_4bit_set_cursor
    _lcd_4bit_set_cursor->_lcd_4bit_send_command
    _lcd_4bit_send_command->_lcd_send_4bits
    _lcd_4bit_send_char_data->_lcd_send_4bits
    _lcd_send_4bits->_gpio_pin_write_logic
    _lcd_4bit_send_enable_signal->_gpio_pin_write_logic

Critical Paths under _main in BANK0

    _main->_evaluatePostfix
    _sprintf->_vfprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0  301091
                                            103 BANK0      5     5      0
             _application_initialize
                  _calculation_start
                    _evaluatePostfix
                     _infixToPostfix
                   _keypad_get_value
            _lcd_4bit_send_char_data
        _lcd_4bit_send_char_data_pos
              _lcd_4bit_send_command
           _lcd_4bit_send_string_pos
                             _memset
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _strlen                                               4     2      2     400
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             22    15      7   37981
                                              4 BANK0     20    13      7
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             4     1      3   36937
                                              0 BANK0      4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           12     9      3   36440
                                            115 COMRAM    11     8      3
                               _dtoa
                             _efgtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   5     3      2    1402
                                              6 COMRAM     5     3      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     962
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              53    47      6   27444
                                             63 COMRAM    52    46      6
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               6     3      3     463
                                              0 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     478
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _labs                                                 8     4      4     363
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     669
                                             25 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     375
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     607
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     155
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     986
                                             39 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     770
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                12     9      3    5479
                                             22 COMRAM    12     9      3
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  8     3      5    3309
                                             14 COMRAM     8     3      5
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                6     3      3    1177
                                              8 COMRAM     6     3      3
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     857
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     613
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     625
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _memset                                               8     2      6    2837
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_send_char_data_pos                          6     1      5   45071
                                             25 COMRAM     6     1      5
            _lcd_4bit_send_char_data
                _lcd_4bit_set_cursor
 ---------------------------------------------------------------------------------
 (1) _keypad_get_value                                    10     7      3    7268
                                             10 COMRAM    10     7      3
                _gpio_pin_read_logic
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_read_logic                                  9     6      3     583
                                              0 COMRAM     9     6      3
 ---------------------------------------------------------------------------------
 (1) _infixToPostfix                                     114   110      4    1919
                                              4 COMRAM   114   110      4
                        _check_digit
                         _initialize
                                _pop
                         _precedence
                               _push
 ---------------------------------------------------------------------------------
 (2) _push                                                 4     2      2     218
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _precedence                                           3     1      2      88
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _pop                                                  3     2      1     196
                                              0 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (2) _initialize                                           1     0      1      98
                                              0 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (1) _evaluatePostfix                                    110   106      4   29851
                                             79 COMRAM     7     3      4
                                              0 BANK0    103   103      0
                            ___fladd
                            ___fldiv
                            ___flmul
                           ___xxtofl
                        _check_digit
                             _doMath
                       _initialize_t
                              _pop_t
                             _push_t
 ---------------------------------------------------------------------------------
 (2) _push_t                                               7     2      5     370
                                             72 COMRAM     7     2      5
                             _doMath (ARG)
 ---------------------------------------------------------------------------------
 (2) _pop_t                                                6     2      4     272
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _initialize_t                                         1     0      1      98
                                              0 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (2) _doMath                                               9     1      8   16297
                                             63 COMRAM     9     1      8
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    4727
                                             55 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    3982
                                             39 COMRAM    16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3953
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    3083
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (2) _check_digit                                          3     1      2      44
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) _calculation_start                                    5     4      1   87871
                                             32 COMRAM     5     4      1
            _lcd_4bit_send_char_data
              _lcd_4bit_send_command
           _lcd_4bit_send_string_pos
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_send_string_pos                             7     1      6   44745
                                             25 COMRAM     7     1      6
            _lcd_4bit_send_char_data
                _lcd_4bit_set_cursor
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_set_cursor                                  7     3      4   23395
                                             18 COMRAM     7     3      4
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_send_command                                4     1      3   22527
                                             14 COMRAM     4     1      3
               _gpio_pin_write_logic
        _lcd_4bit_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_send_char_data                              4     1      3   20367
                                             14 COMRAM     4     1      3
               _gpio_pin_write_logic
        _lcd_4bit_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (4) _lcd_send_4bits                                       4     1      3    6851
                                             10 COMRAM     4     1      3
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _lcd_4bit_send_enable_signal                          3     1      2    6299
                                             10 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_write_logic                                10     7      3    5837
                                              0 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (1) _application_initialize                               1     1      0       1
               _ecu_layer_initialize
 ---------------------------------------------------------------------------------
 (2) _ecu_layer_initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _application_initialize
     _ecu_layer_initialize
   _calculation_start
     _lcd_4bit_send_char_data
       _gpio_pin_write_logic
       _lcd_4bit_send_enable_signal
         _gpio_pin_write_logic
       _lcd_send_4bits
         _gpio_pin_write_logic
     _lcd_4bit_send_command
       _gpio_pin_write_logic
       _lcd_4bit_send_enable_signal
       _lcd_send_4bits
     _lcd_4bit_send_string_pos
       _lcd_4bit_send_char_data
       _lcd_4bit_set_cursor
         _lcd_4bit_send_command
       _strlen (ARG)
   _evaluatePostfix
     ___fladd
       ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___fldiv
     ___flmul
     ___xxtofl
     _check_digit
     _doMath
       ___fladd
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
         ___flmul (ARG)
     _initialize_t
     _pop_t
     _push_t
       _doMath (ARG)
   _infixToPostfix
     _check_digit
     _initialize
     _pop
     _precedence
     _push
   _keypad_get_value
     _gpio_pin_read_logic
     _gpio_pin_write_logic
   _lcd_4bit_send_char_data
   _lcd_4bit_send_char_data_pos
     _lcd_4bit_send_char_data
     _lcd_4bit_set_cursor
   _lcd_4bit_send_command
   _lcd_4bit_send_string_pos
   _memset
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
           _strcpy
         _fputc
         _read_prec_or_width
           ___wmul
   _strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      C8       9       78.1%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      A5       7       64.5%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     6C      80       5      100.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     7E      7F       1      100.0%
BITBIGSFRh          69      0       0      36        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BITBIGSFRll          4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     26C      39        0.0%
DATA                 0      0     26C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Dec 26 20:06:04 2023

                       ___fldiv@aexp 0019                         ___fldiv@bexp 0018  
                       ___fldiv@sign 0011                      ?_lcd_send_4bits 000B  
                                 l74 44C2                                   l84 47BC  
                                 l79 4534                         ___awdiv@sign 0006  
                                 _op 00F0                  ___wmul@multiplicand 0003  
                                l100 43B2                                  l400 406A  
                                l171 4608                                  l174 4AE6  
                                l256 3B30                                  l197 426C  
                                l550 4A7E                                  l544 4450  
                                l608 3492                                  l393 3A28  
                                l553 49A4                                  l529 21EC  
                                l626 2E2C                                  l562 4B58  
                                l539 4B86                                  l547 4B80  
                                l580 38FC                                  l556 4B6C  
                                l573 45A0                                  l629 4B0C  
                                l566 49DC                                  l583 38EC  
                                l559 4B32                                  l903 4934  
                                l860 3EFC                                  l926 3C36  
                                l873 411A                                  l894 3CF4  
                                l888 41C4                                  l899 3D3A  
                                _abs 4A80                                  _arr 0160  
                                _pad 460A                                  _val 00FE  
                                _pop 4B34                                  _pos 00FF  
__end_of_lcd_4bit_send_enable_signal 4AE8          _lcd_4bit_send_enable_signal 4AB4  
                       ___awmod@sign 0006                  led_initialize@F3058 007F  
                                prod 0FF3                relay_initialize@F3052 00FA  
                                wreg 0FE8  evaluatePostfix@fractionalMultiplier 008A  
                       ___flmul@aexp 001C                         ___flmul@bexp 0021  
        lcd_send_4bits@_data_command 000D                         ___flmul@sign 001B  
                       ___flmul@temp 0026                         ___flmul@prod 0022  
                       ___fltol@exp1 000A                                 l1211 2AEE  
                               ?_abs 0007                                 l1213 294E  
                               l1222 2994                                 l1224 2A0C  
                               l1216 2912                                 l1225 29FA  
                               l1313 4842                                 l1250 25E6  
                               l1306 496C                                 l1243 23F0  
                               l1260 2716                                 l1252 265E  
                               l1420 430A                                 l1253 264C  
                               l1157 1BDE                                 l1174 1CF8  
                               l1166 1EAE                                 l1158 1BCC  
                               l1510 3FB6                                 l1342 4620  
                               l1350 3678                                 l1247 2754  
                               l1183 1DC8                                 l1159 1B92  
                               l1184 1DB6                                 l1352 3680  
                               l1408 17DC                                 l1424 4312  
                               l1432 30B0                                 l1521 4B88  
                               l1353 36C6                                 l1346 466E  
                               l1291 3582                                 l1284 34EA  
                               l1364 37C0                                 l1380 11F0  
                               l1533 4A48                                 l1518 48C2  
                               l1454 4882                                 l1287 3646  
                               l1199 4802                                 l1527 48FC  
                               l1375 19EE                                 l1472 4AB2  
                               l1464 3E38                                 l1481 3206  
                               l1298 35DE                                 l1378 13A2  
                               l1492 4726                                 l1469 4A9A  
                               l1478 32C2                                 l1498 4776  
                               l5401 49C8                                 l7001 2850  
                               l7011 2878                                 l7003 2854  
                               l5411 4538                                 l5501 3616  
                               l7021 28C6                                 l7101 2348  
                               l5421 457A                                 l5413 454A  
                               ?_pad 000F                                 l5503 3626  
                               l5407 49D4                                 l7031 2910  
                               l7023 28D6                                 l7015 288C  
                               l7007 2868                                 l7111 238E  
                               l7103 2358                                 l5423 458C  
                               l5415 455C                                 l5505 3634  
                               l7041 295E                                 l7033 291C  
                               l7025 28DE                                 l7017 28A6  
                               l7009 2878                                 l7201 26B2  
                               l7121 23BA                                 l7113 2394  
                               l7105 2368                                 l8001 38EC  
                               l5507 3636                                 l7043 2974  
                               l7051 29A4                                 l7035 293A  
                               l7027 28EE                                 l7019 28B6  
                               l7211 271A                                 l7203 26B6  
                               l7131 2410                                 l7123 23CA  
                               l7115 239A                                 l7107 2378  
                               l5427 4598                                 l5419 4568  
                               l8011 4878                                 l7053 29B2  
                               l7045 297A                                 l7037 293C  
                               l7029 2902                                 l7221 2744  
                               l7213 272A                                 l7205 26D0  
                               l7141 2450                                 l7125 23DA  
                               l7117 23A8                                 l7109 237E  
                               l5381 4B6E                                 l7301 40F4  
                               l8005 4844                                 l5471 34FA  
                               l7063 2A1C                                 l7071 2A64  
                               l7055 29B6                                 l7047 2984  
                               l7039 294C                                 l7215 2738  
                               l7207 26E4                                 l7151 249A  
                               l7143 245C                                 l7135 2424  
                               l7127 23E0                                 l7119 23AA  
                               l5383 4A4A                                 l5391 4B0E  
                               l7231 3E3A                                 l7303 40FA  
                               l7311 411C                                 l8007 484C  
                               l5481 3538                                 l5473 3510  
                               l5465 3496                                 l7081 2ACE  
                               l7073 2A7E                                 l7065 2A28  
                               l7057 29C4                                 l7049 2992  
                               l7217 273A                                 l7209 26FE  
                               l7161 24EC                                 l7153 24A6  
                               l7145 2474                                 l7137 2430  
                               l7129 2400                                 l7225 47BE  
                               l5385 496E                                 l5393 4B34  
                               l7241 3E66                                 l7233 3E3E  
                               l7305 410A                                 l7401 460A  
                               l7321 41BC                                 l7313 414A  
                               l8009 485C                                 l5491 35C0  
                               l5483 356A                                 l5467 34A6  
                               l7083 2ADC                                 l7075 2A94  
                               l7067 2A36                                 l7059 29F2  
                               l7219 2740                                 l7171 256A  
                               l7163 24FC                                 l7155 24B6  
                               l7147 2480                                 l7139 243A  
                               l7227 47CE                                 l8211 3A5C  
                               l7251 3E94                                 l7243 3E6E  
                               l7235 3E4C                                 l7307 4112  
                               l7411 465E                                 l7403 4618  
                               l7323 41C2                                 l7315 415A  
                               l7331 3C76                                 l6701 3936  
                               l5493 35CE                                 l5485 356C  
                               l5477 3524                                 l5469 34B4  
                               l5397 49A8                                 l7085 2AE2  
                               l7077 2AAE                                 l7069 2A60  
                               l7181 25E4                                 l7173 25A0  
                               l7165 2518                                 l7157 24C2  
                               l7149 248C                                 l5389 4B5A  
                               l8301 32C4                                 l8213 3A64  
                               l8205 3A2A                                 l7261 3ECE  
                               l7253 3E9C                                 l7245 3E72  
                               l7237 3E54                                 l7413 4A80  
                               l7405 462C                                 l7317 4188  
                               l7341 3CE2                                 l7333 3CA4  
                               l7421 3D9A                                 l6703 393E  
                               l6711 3A26                                 l5495 35EC  
                               l5487 3578                                 l5479 352C  
                               l5399 49B8                                 l7087 2AE4  
                               l7079 2ACA                                 l7191 2644  
                               l7183 25F6                                 l7175 25AE  
                               l7167 2524                                 l7159 24D2  
                               l7095 232C                                 l8311 3302  
                               l8303 32CC                                 l8231 3A92  
                               l8207 3A3A                                 l8151 4936  
                               l7271 3EF4                                 l7263 3ED0  
                               l7255 3EAA                                 l7247 3E7A  
                               l7239 3E58                                 l7415 4A8E  
                               l7407 463C                                 l7511 369E  
                               l7503 3648                                 l7319 4198  
                               l7343 3D32                                 l7335 3CB4  
                               l7327 3C38                                 l7351 4914  
                               l7431 3DEC                                 l7423 3DC2  
                               l6705 39A0                                 l5497 35EE  
                               l5489 35B4                                 l7185 2604  
                               l7177 25CC                                 l7169 2540  
                               l7097 2338                                 l6801 1B5E  
                               l6721 19FC                                 l8321 3358  
                               l8313 330A                                 l8305 32D4  
                               l8241 3AB8                                 l8233 3AA6  
                               l8225 3A6C                                 l8209 3A4C  
                               l8153 4942                                 l7265 3ED6  
                               l7257 3EB0                                 l7249 3E8C  
                               l7281 4086                                 l7409 4640  
                               l7521 36D8                                 l7513 36AE  
                               l7505 366C                                 l7345 3D38  
                               l7337 3CC2                                 l7329 3C66  
                               l7353 4924                                 l7425 3DCE  
                               l7417 3D3C                                 l7441 48CC  
                               l8161 4812                                 l5499 35F2  
                               l7195 266E                                 l7187 2608  
                               l7179 25D6                                 l7099 2346  
                               l6811 1BB0                                 l6803 1B7A  
                               l6731 1A3C                                 l6723 1A0A  
                               l8331 33B6                                 l8315 3322  
                               l8323 335C                                 l8307 32E0  
                               l8251 3B1C                                 l8243 3ADA  
                               l8235 3AB4                                 l8227 3A80  
                               l8219 3A68                                 l8091 4792  
                               l8155 494E                                 l7259 3EC6  
                               l7267 3EDC                                 l7291 40BA  
                               l7283 408A                                 l7275 406C  
                               l7523 36DE                                 l7531 3738  
                               l7515 36BA                                 l7507 3688  
                               l7339 3CD4                                 l7371 3B9C  
                               l7363 3B5C                                 l7435 3E30  
                               l7419 3D5C                                 l7451 30B2  
                               l7443 46D2                                 l8163 481A  
                               l5765 4B82                                 l6709 39FC  
                               l8261 43B4                                 l7197 267A  
                               l7189 2616                                 l6901 1E4E  
                               l6821 1BFC                                 l6813 1BBE  
                               l6805 1B8A                                 l6741 1A6E  
                               l6733 1A3E                                 l6725 1A0C  
                               l8333 33D0                                 l8325 3380  
                               l8317 3338                                 l8309 32F0  
                               l8253 3B1E                                 l8245 3AEA  
                               l8229 3A82                                 l8093 47BA  
                               l8085 4778                                 l8157 4952  
                               l7269 3EEC                                 l7293 40C2  
                               l7285 4098                                 l7277 4070  
                               l7541 3794                                 l7533 3752  
                               l7525 3710                                 l7517 36C2  
                               l7509 3698                                 l7349 48FE  
                               l7381 3BCC                                 l7373 3BAA  
                               l7365 3B86                                 l7357 3B32  
                               l7429 3DDA                                 l7453 30D2  
                               l7445 46E0                                 l7701 1728  
                               l7621 12A6                                 l7613 1200  
                               l8165 4822                                 l5767 4B82  
                               l8263 43BE                                 l7199 2688  
                               l6911 1E88                                 l6903 1E6E  
                               l6831 1C3C                                 l6815 1BC0  
                               l6807 1BA0                                 l6751 1A96  
                               l6743 1A70                                 l6727 1A1C  
                               l6735 1A46                                 l6719 19F0  
                               l8351 3484                                 l8327 339E  
                               l8319 3354                                 l8335 33D4  
                               l8343 3432                                 l8247 3B0A  
                               l8255 3B2E                                 l8087 4778  
                               l7295 40D0                                 l7287 40A0  
                               l7279 407E                                 l7543 37A4  
                               l7535 3764                                 l7527 3716  
                               l7519 36CE                                 l7391 3BF6  
                               l7383 3BD6                                 l7367 3B88  
                               l7359 3B48                                 l7471 327A  
                               l7463 31BA                                 l7455 3128  
                               l7447 46F4                                 l7439 48C4  
                               l7711 17EC                                 l7703 1730  
                               l7623 12E2                                 l7615 1204  
                               l7607 11A2                                 l7551 1044  
                               l8167 4832                                 l8159 4804  
                               l7801 41E8                                 l8281 4434  
                               l8273 43F4                                 l8265 43DE  
                               l6913 1E8E                                 l6905 1E72  
                               l6841 1C66                                 l6833 1C48  
                               l6825 1C10                                 l6817 1BCA  
                               l6809 1BAC                                 l6761 1AD0  
                               l6753 1AA6                                 l6745 1A76  
                               l6737 1A56                                 l6729 1A2C  
                               l8361 2B2E                                 l8353 2AF0  
                               l8345 3452                                 l8337 33E8  
                               l8329 33AE                                 l8249 3B0C  
                               l8089 478A                                 l7297 40E6  
                               l7289 40B2                                 l6681 3EFE  
                               l6921 4884                                 l7537 377E  
                               l7529 371C                                 l7393 3C06  
                               l7369 3B98                                 l7473 32A2  
                               l7465 31F6                                 l7457 313C  
                               l7481 473C                                 l7721 181C  
                               l7713 17FA                                 l7705 173C  
                               l7641 13CE                                 l7625 12F6  
                               l7633 1370                                 l7617 1238  
                               l7609 11BA                                 l7561 108A  
                               l7553 1052                                 l9081 3008  
                               l6931 45A2                                 l7491 4452  
                               l7803 4200                                 l8283 4446  
                               l8275 4404                                 l8267 43EC  
                               l8259 43B4                                 l6915 1E9C  
                               l6907 1E80                                 l6851 1CD8  
                               l6835 1C4C                                 l6827 1C20  
                               l6819 1BEC                                 l6843 1C6C  
                               l6771 1AFC                                 l6763 1AE2  
                               l6755 1AB6                                 l6747 1A84  
                               l6739 1A5C                                 l8371 2BA2  
                               l8363 2B42                                 l8355 2AF8  
                               l8347 346C                                 l8339 3422  
                               l7299 40EE                                 l6691 3F76  
                               l6683 3F0E                                 l6923 4890  
                               l7539 378E                                 l7395 3C16  
                               l7379 3BC2                                 l7475 32B2  
                               l7459 314A                                 l7467 322A  
                               l7483 4748                                 l7731 184E  
                               l7723 182C                                 l7715 180A  
                               l7707 17B4                                 l7651 1412  
                               l7643 13D6                                 l7635 13AA  
                               l7627 132A                                 l7619 1274  
                               l7563 109A                                 l7571 10C2  
                               l7555 1056                                 l7547 1030  
                               l9083 3074                                 l8291 4A14  
                               l6941 4AB4                                 l6933 45B8  
                               l7493 4452                                 l9085 4244  
                               l7805 4218                                 l8285 444C  
                               l8277 4414                                 l6917 1E9E  
                               l6909 1E86                                 l6861 1D32  
                               l6845 1C92                                 l6853 1CE8  
                               l6837 1C5A                                 l6829 1C2E  
                               l6781 1B10                                 l6773 1B00  
                               l6765 1AF0                                 l6757 1AB8  
                               l6749 1A86                                 l8373 2BB4  
                               l8365 2B70                                 l8381 2CFE  
                               l8357 2B06                                 l8349 3470  
                               l7901 3FB8                                 l6685 3F1E  
                               l6925 489E                                 l7397 3C26  
                               l7389 3BEA                                 l7469 3266  
                               l7485 474C                                 l7741 18F6  
                               l7733 1860                                 l7725 1830  
                               l7717 180E                                 l7709 17D4  
                               l7661 1458                                 l7653 1424  
                               l7645 13DA                                 l7637 13BA  
                               l7629 1330                                 l7581 110A  
                               l7573 10E8                                 l7565 10AA  
                               l7557 107A                                 l7549 1034  
                               l7821 2E58                                 l8293 4A20  
                               l9077 2238                                 l9087 3A10  
                               l6695 38FE                                 l6943 4AB4  
                               l6935 45D0                                 l7495 4464  
                               l7807 4230                                 l8287 444E  
                               l8279 4418                                 l6871 1D62  
                               l6863 1D3C                                 l6855 1D0E  
                               l6847 1CC6                                 l6839 1C5C  
                               l6791 1B24                                 l6783 1B14  
                               l6775 1B04                                 l6767 1AF4  
                               l6759 1AC0                                 l8391 2D70  
                               l8383 2D22                                 l8375 2C40  
                               l8367 2B90                                 l8359 2B16  
                               l7911 4008                                 l7903 3FBC  
                               l6687 3F28                                 l6927 48A2  
                               l7487 4758                                 l7479 4728  
                               l7751 1942                                 l7743 18FC  
                               l7735 1864                                 l7727 1836  
                               l7719 1814                                 l7671 156A  
                               l7663 14BC                                 l7647 13EC  
                               l7655 142C                                 l7639 13C6  
                               l7591 1168                                 l7583 111E  
                               l7575 10F8                                 l7567 10B6  
                               l7559 1082                                 l6951 4AE8  
                               l9079 2F66                                 l7831 2EA8  
                               l7823 2E66                                 l8295 4A24  
                               l6697 3902                                 l6945 4AC8  
                               l6937 45EA                                 l6929 45A2  
                               l7497 446C                                 l7809 426A  
                               l7921 4326                                 l6961 2770  
                               l6881 1D8A                                 l6873 1D66  
                               l6865 1D4A                                 l6857 1D1E  
                               l6849 1CC8                                 l6793 1B28  
                               l6785 1B18                                 l6777 1B08  
                               l6769 1AF8                                 l8393 2D7A  
                               l8385 2D42                                 l8377 2CC6  
                               l8369 2B98                                 l7913 4068  
                               l7905 3FCE                                 l6689 3F44  
                               l7489 475C                                 l7761 19B4  
                               l7753 1950                                 l7737 186A  
                               l7729 183C                                 l7745 1900  
                               l7681 1624                                 l7673 159E  
                               l7665 1514                                 l7657 1434  
                               l7649 13FA                                 l7593 1178  
                               l7585 1126                                 l7577 10FC  
                               l7569 10BE                                 l6953 4B04  
                               l7841 2F0C                                 l7833 2EB2  
                               l7825 2E6A                                 l7817 2E2E  
                               l8297 4A3C                                 l8801 1EE8  
                               l6699 3914                                 l6947 4ACE  
                               l7499 44C0                                 l7931 43B0  
                               l7923 432E                                 l6971 27A4  
                               l6963 2772                                 l6891 1DE4  
                               l6883 1D98                                 l6875 1D76  
                               l6867 1D4C                                 l6795 1B2C  
                               l6787 1B1C                                 l6779 1B0C  
                               l8387 2D5A                                 l7907 3FDE  
                               l7763 19CA                                 l7755 1980  
                               l7747 191E                                 l7739 18C2  
                               l7691 16F6                                 l7683 1634  
                               l7675 15D0                                 l7667 1548  
                               l7659 1444                                 l7595 117C  
                               l7579 1102                                 l7771 4276  
                               l7851 2F42                                 l7835 2ECE  
                               l7827 2E8C                                 l7819 2E50  
                               l8811 1F2A                                 l8803 1EF4  
                               l7925 4348                                 l7917 4314  
                               l6981 27D6                                 l6965 2782  
                               l6973 27AC                                 l6957 2756  
                               l6893 1DF2                                 l6885 1DAE  
                               l6869 1D5A                                 l6877 1D78  
                               l6789 1B20                                 l6797 1B30  
                               l8389 2D5E                                 l8397 2DEE  
                               l7909 4000                                 l7765 19D2  
                               l7757 198C                                 l7749 193A  
                               l7693 1708                                 l7685 1668  
                               l7677 15E4                                 l7669 154C  
                               l7597 1182                                 l7589 1142  
                               l7773 4298                                 l7781 42E4  
                               l7861 2FA4                                 l7853 2F4A  
                               l7845 2F20                                 l7837 2EEA  
                               l7829 2E94                                 l8901 21C8  
                               l8821 1F70                                 l8813 1F46  
                               l8805 1F06                                 ?_pop 0001  
                               l7791 4532                                 l7783 44C4  
                               l7927 437A                                 l7919 4314  
                               l6991 280A                                 l6983 27D8  
                               l6975 27BC                                 l6967 2792  
                               l6959 2762                                 l6895 1E2C  
                               l6879 1D86                                 l6799 1B34  
                               l8399 2E0C                                 l7759 19A4  
                               l7687 16BE                                 l7695 170C  
                               l7679 1616                                 l7599 118A  
                               l7775 42A0                                 l7871 302C  
                               l7863 2FCC                                 l7847 2F2A  
                               l7839 2F02                                 l8911 2206  
                               l8903 21D8                                 l8831 1F90  
                               l8823 1F74                                 l8815 1F62  
                               l8807 1F16                                 l7785 44C4  
                               l7929 437E                                 l6985 27E8  
                               l6993 2812                                 l6977 27C2  
                               l6969 27A2                                 l6889 1DD8  
                               l6897 1E2E                                 l7697 171C  
                               l7689 16C2                                 l7777 42BC  
                               l7769 426E                                 l7849 2F3C  
                               l7857 2F52                                 l8913 220E  
                               l8921 2266                                 l8841 1FE2  
                               l8833 1FAE                                 l8817 1F68  
                               l8809 1F1A                                 l8825 1F86  
                               l7787 44D6                                 l7795 41C6  
                               l6995 2822                                 l6987 27F8  
                               l6979 27C8                                 l6899 1E3E  
                               l7971 37C4                                 l7699 1724  
                               l7779 42DC                                 l7867 2FF4  
                               l7859 2F84                                 l7883 308E  
                               l8931 22BA                                 l8923 227E  
                               l8915 221C                                 l8907 21F0  
                               l8851 2040                                 l8843 1FF4  
                               l8835 1FB2                                 l8819 1F6C  
                               l7789 44DE                                 l7797 41CA  
                               l6997 2838                                 l6989 2808  
                               l7981 3820                                 l7973 37D6  
                               l7877 3056                                 l7869 301E  
                               l8933 22CE                                 l8925 2282  
                               l8909 2200                                 l8861 208A  
                               l8853 2046                                 l8845 1FF8  
                               l8837 1FB6                                 l7799 41D0  
                               l6999 2848                                 l7879 3082  
                               l8935 22F0                                 l8927 2294  
                               l8919 2224                                 l8871 20FA  
                               l8855 204E                                 l8863 208C  
                               l8847 2008                                 l8839 1FD2  
                               l8791 1EB0                                 l8929 22A6  
                               l8937 231A                                 l8881 214C  
                               l8873 210A                                 l8865 20B6  
                               l8857 206A                                 l8849 2024  
                               l8793 1EB0                                 l7995 38A2  
                               l7987 3858                                 l7979 380E  
                               l8939 2320                                 l8891 2192  
                               l8883 2168                                 l8875 211C  
                               l8867 20E4                                 l8859 2086  
                               l8795 1EB4                                 l7997 38B4  
                               l7989 386A                                 l8885 2184  
                               l8893 2196                                 l8877 212C  
                               l8869 20EA                                 l8797 1EC4  
                               l8895 21A6                                 l8887 218A  
                               l8879 213C                                 l8799 1ED8  
                               STR_1 102C                                 l8897 21BE  
                               l8889 218E                                 STR_4 101F  
                               l8899 21C2                                 STR_5 1019  
                               STR_6 1024                                 STR_9 1028  
                               _LATA 0F89                                 _LATB 0F8A  
                               _LATC 0F8B                                 _LATD 0F8C  
                               _LATE 0F8D                                 u7000 1B5E  
                               u7001 1B5A                                 u7010 1B76  
                               u7011 1B70                                 u7100 1C5A  
                               u7020 1B78                                 u7101 1C56  
                               u7110 1C92                                 u7030 1BA0  
                               u7111 1C8E                                 u7031 1B9C  
                               u5600 35DE                                 u5440 49B8  
                               u7200 1DAE                                 u7120 1CD8  
                               u7040 1BBE                                 u8000 3C16  
                               u5601 35DA                                 u5441 49B4  
                               u7201 1DAA                                 u7121 1CD4  
                               u7041 1BBA                                 u8001 3C12  
                               u5610 35EC                                 u5450 49C8  
                               u7210 1DC4                                 u7130 1D0E  
                               u7050 1BDE                                 u8010 4618  
                               u5611 35E8                                 u5451 49C4  
                               u7211 1DC0                                 u7131 1D0A  
                               u7051 1BDA                                 u8011 4614  
                               u5620 3626                                 u5540 34A6  
                               u7220 1DD8                                 u7140 1D1E  
                               u7060 1BEC                                 u5460 454A  
                               u7300 48C2                                 u8020 465E  
                               u8100 3E28                                 u5621 3622  
                               u5541 34A2                                 u7221 1DD4  
                               u7141 1D1A                                 u7061 1BE8  
                               u5461 4546                                 u7301 48BE  
                               u8021 465A                                 u5630 3634  
                               u5550 34B4                                 u7310 2770  
                               u7230 1DF2                                 u7150 1D4A  
                               u7070 1BFC                                 u5470 455C  
                               u8030 4A8E                                 u8110 48FC  
                               u5631 3630                                 u5551 34B0  
                               u7311 276C                                 u7231 1DEE  
                               u7151 1D46                                 u7071 1BF8  
                               u5471 4558                                 u8031 4A8A  
                               u8111 48F8                                 u5560 3510  
                               u7400 2910                                 u7320 2782  
                               u7240 1E2C                                 u7160 1D5A  
                               u7080 1C2E                                 u5480 457A  
                               u8040 3D7C                                 u8200 324A  
                               u8120 46E0                                 u5561 350C  
                               u7401 290C                                 u7321 277E  
                               u7241 1E28                                 u7161 1D56  
                               u7081 1C2A                                 u5481 4576  
                               u8121 46DC                                 u5570 3566  
                               u7410 293A                                 u7330 2792  
                               u7250 1E3E                                 u7170 1D76  
                               u7090 1C3C                                 u5490 458C  
                               u8050 3D9A                                 u8210 3266  
                               u8130 30FA                                 u5571 3562  
                               u7411 2936                                 u7331 278E  
                               u7251 1E3A                                 u7171 1D72  
                               u7091 1C38                                 u5491 4588  
                               u8051 3D96                                 u8211 3262  
                               u5580 35B0                                 u7500 2A36  
                               u7420 295E                                 u7340 27D6  
                               u7260 1E4E                                 u7180 1D86  
                               u9100 3A5C                                 u8300 3752  
                               u8060 3DC2                                 u8220 32A2  
                               u8140 3128                                 u5581 35AC  
                               u7501 2A32                                 u7421 295A  
                               u7341 27D2                                 u7261 1E4A  
                               u7181 1D82                                 u9101 3A58  
                               u8301 374E                                 u8061 3DBE  
                               u8045 3D72                                 u8221 329E  
                               u8205 3240                                 u8141 3124  
                               u5590 35CE                                 u7510 2A7E  
                               u7430 2974                                 u7350 27E8  
                               u7270 1E6E                                 u7190 1D98  
                               u9110 3A92                                 u8310 3764  
                               u8070 3DEC                                 u8150 314A  
                               u8230 4776                                 u5591 35CA  
                               u7511 2A7A                                 u7431 2970  
                               u7351 27E4                                 u7271 1E6A  
                               u7191 1D94                                 u9111 3A8E  
                               u8311 3760                                 u8071 3DE8  
                               u8151 3146                                 u8135 30F0  
                               u8231 4772                                 u8240 4464  
                               u7520 2AAE                                 u7440 2992  
                               u7360 27F8                                 u7600 2400  
                               u7280 1E80                                 u9200 3380  
                               u9120 3AEA                                 u8320 377E  
                               u8400 1178                                 u8241 4460  
                               u7521 2AAA                                 u7441 298E  
                               u7361 27F4                                 u7601 23FC  
                               u7281 1E7C                                 u9201 337C  
                               u9121 3AE6                                 u8321 377A  
                               u8401 1174                                 u7530 2ADC  
                               u7450 29B2                                 u7370 2838  
                               u7610 2410                                 u7290 1E9C  
                               u9210 339E                                 u9130 3B1C  
                               u9050 496C                                 u8330 378E  
                               u8250 3658                                 u8090 3E26  
                               u8170 31B6                                 u8410 11EC  
                               u7531 2AD8                                 u7451 29AE  
                               u7371 2834                                 u7611 240C  
                               u7291 1E98                                 u9211 339A  
                               u9131 3B18                                 u9051 4968  
                               u8331 378A                                 u8251 3652  
                               u8091 3E20                                 u8171 31B2  
                               u8411 11E8                                 u7460 29C4  
                               u7380 2878                                 u7700 26D0  
                               u7620 258A                                 u7540 2346  
                               u9300 2D22                                 u9220 33E8  
                               u9140 3B2E                                 u8260 365A  
                               u8180 31DA                                 u8500 1424  
                               u8420 1274                                 u8340 1052  
                               u7461 29C0                                 u7381 2874  
                               u7701 26CC                                 u7541 2342  
                               u9301 2D1E                                 u9221 33E4  
                               u9141 3B2A                                 u8085 3DFE  
                               u8165 315E                                 u8501 1420  
                               u8421 1270                                 u8341 104E  
                               u9150 4434                                 u7470 29F2  
                               u7390 28EE                                 u7710 26FE  
                               u7630 25E4                                 u7550 2358  
                               u6910 1A0A                                 u9310 2D42  
                               u9230 3422                                 u6830 3F0E  
                               u8270 366C                                 u8190 31F6  
                               u8166 3168                                 u8510 156A  
                               u8430 12A6                                 u8350 109A  
                               u9151 4430                                 u7471 29EE  
                               u7391 28EA                                 u7711 26FA  
                               u7631 25E0                                 u7551 2354  
                               u6911 1A06                                 u9311 2D3E  
                               u9231 341E                                 u6831 3F0A  
                               u8271 3668                                 u8191 31F2  
                               u8167 3178                                 u8511 1566  
                               u8431 12A2                                 u8351 1096  
                               u6904 39C0                                 u7480 2A08  
                               u7720 2738                                 u7640 2604  
                               u7560 2368                                 u6920 1A1C  
                               u9320 2D70                                 u9240 344E  
                               u7800 4098                                 u6840 3F1E  
                               u8280 3698                                 u8600 184E  
                               u8520 15D0                                 u8440 12E2  
                               u8360 10AA                                 u9160 4A3C  
                               u6905 39BC                                 u7481 2A04  
                               u7721 2734                                 u7641 2600  
                               u7625 2580                                 u7561 2364  
                               u6921 1A18                                 u9321 2D6C  
                               u9241 344A                                 u7801 4094  
                               u6841 3F1A                                 u8281 3694  
                               u8185 31D0                                 u8601 184A  
                               u8521 15CC                                 u8441 12DE  
                               u8361 10A6                                 u9161 4A38  
                               u7490 2A1C                                 u7650 2616  
                               u7570 23A8                                 u6930 1A2C  
                               u9330 2E0C                                 u9250 3484  
                               u9170 3302                                 u9090 3A4C  
                               u7730 3E4C                                 u7810 40B2  
                               u6850 3F44                                 u8290 36AE  
                               u8610 191E                                 u8530 1616  
                               u8450 136C                                 u8370 10E8  
                               u7491 2A18                                 u7651 2612  
                               u7571 23A4                                 u6931 1A28  
                               u9331 2E08                                 u9251 3480  
                               u9171 32FE                                 u9091 3A48  
                               u7731 3E48                                 u7811 40AE  
                               u6851 3F40                                 u8291 36AA  
                               u8611 191A                                 u8531 1612  
                               u8451 1368                                 u8371 10E4  
                               u7660 2644                                 u7580 23BA  
                               u6940 1A6E                                 u9260 2B2E  
                               u9180 3322                                 u7740 3E66  
                               u7820 40D0                                 u6860 3F76  
                               u7900 3CC2                                 u8620 193A  
                               u8540 1624                                 u8460 13A2  
                               u8380 10F8                                 u8700 2E8C  
                               u7661 2640                                 u7581 23B6  
                               u6941 1A6A                                 u9261 2B2A  
                               u9181 331E                                 u7741 3E62  
                               u7821 40CC                                 u6861 3F72  
                               u7901 3CBE                                 u8621 1936  
                               u8541 1620                                 u8461 139E  
                               u8381 10F4                                 u8701 2E88  
                               u6870 3914                                 u7670 265A  
                               u7590 23CA                                 u6950 1A84  
                               u9270 2B42                                 u9190 3334  
                               u7750 3E8C                                 u7830 40E6  
                               u7910 3CE2                                 u8630 199E  
                               u8550 16BE                                 u8470 13BA  
                               u8390 1168                                 u8710 2ECE  
                               u6871 3910                                 u7671 2656  
                               u7591 23C6                                 u6951 1A80  
                               u9271 2B3E                                 u9191 3330  
                               u7751 3E88                                 u7831 40E2  
                               u7911 3CDE                                 u8631 1998  
                               u8551 16BA                                 u8471 13B6  
                               u8391 1164                                 u8711 2ECA  
                               u6880 3936                                 u8800 43A0  
                               u7680 266E                                 u6960 1A96  
                               u9280 2B90                                 u7760 3EAA  
                               u7840 410A                                 u7920 3D32  
                               u8640 19A0                                 u8560 1708  
                               u8480 13EC                                 u8720 2EEA  
                               u6881 3932                                 u7681 266A  
                               u6961 1A92                                 u9281 2B8C  
                               u7761 3EA6                                 u7841 4106  
                               u7921 3D2E                                 u8561 1704  
                               u8481 13E8                                 u8721 2EE6  
                               u8810 43B0                                 u7690 2688  
                               u6970 1AA6                                 u9290 2BB4  
                               u7770 3EC6                                 u7850 414A  
                               u7930 4914                                 u8650 19B4  
                               u8570 17B4                                 u8490 13FA  
                               u8730 2FA0                                 u8811 43AC  
                               u7691 2684                                 u6971 1AA2  
                               u9291 2BB0                                 u7771 3EC2  
                               u7851 4146                                 u7931 4910  
                               u8651 19B0                                 u8571 17B0  
                               u8491 13F6                                 u8731 2F9C  
                               u6980 1AE2                                 u8740 3FCE  
                               u7780 3EEC                                 u7860 4188  
                               u7940 3B48                                 u8580 17EC  
                               u8660 4298                                 u6981 1ADE  
                               u8741 3FCA                                 u7781 3EE8  
                               u7861 4184                                 u7941 3B44  
                               u8581 17E8                                 u8661 4294  
                               u6894 395E                                 u6990 1AF0  
                               u8750 3FDE                                 u7790 407E  
                               u7870 41BC                                 u7950 3B7C  
                               u8590 17FA                                 u8670 430A  
                               u6895 395A                                 u8807 4396  
                               u6991 1AEC                                 u8751 3FDA  
                               u7791 407A                                 u7871 41B8  
                               u8591 17F6                                 u8671 4306  
                               u8680 44D6                                 u8760 4000  
                               u7880 3C66                                 u7960 3BAA  
                               u9800 1FE2                                 u8681 44D2  
                               u8761 3FFC                                 u7881 3C62  
                               u7961 3BA6                                 u9801 1FDE  
                               u8850 37D6                                 u7890 3CA4  
                               u7970 3BBE                                 u8690 2E50  
                               u9810 1FF4                                 u8851 37D2  
                               u7891 3CA0                                 u7971 3BBA  
                               u7955 3B72                                 u8691 2E4C  
                               u9811 1FF0                                 u8780 4326  
                               u8860 3820                                 u7980 3BE6  
                               u9900 2294                                 u9820 20B6  
                               u9740 1ED8                                 u8781 4322  
                               u8861 381C                                 u7981 3BE2  
                               u9901 2290                                 u9821 20B2  
                               u9741 1ED4                                 u8790 4372  
                               u8870 386A                                 u8774 405C  
                               u7990 3C06                                 u9910 22A6  
                               u9830 20FA                                 u9750 1EE8  
                               u8871 3866                                 u8775 4058  
                               u7991 3C02                                 u9911 22A2  
                               u9831 20F6                                 u9751 1EE4  
                               u8880 38B4                                 u9840 210A  
                               u9760 1F06                                 u8881 38B0  
                               u9841 2106                                 u9761 1F02  
                               u8890 4878                                 u9850 211C  
                               u9770 1F16                                 u8891 4874  
                               u9851 2118                                 u9771 1F12  
                               u8980 478A                                 u9860 212C  
                               u9780 1FAE                                 u8797 4368  
                               u8981 4786                                 u9861 2128  
                               u9781 1FAA                                 u9870 213C  
                               u9790 1FD2                                 u9927 3AAC  
                               u9871 2138                                 u9791 1FCE  
                               u9880 21D8                                 u9937 43E4  
                               u9881 21D4                                 u9890 21E8  
                               u9947 440A                                 u9891 21E4  
      ??_lcd_4bit_send_enable_signal 000D                                 abs@a 0007  
                               _dbuf 0110       gpio_pin_read_logic@_pin_config 0001  
                               _pad1 0195                                 _flag 00F6  
                               _labs 46D2                                 _main 1EB0  
                               _dtoa 3648                                 _prec 00EE  
                               pad@i 0015                                 pad@p 0012  
                               fsr0h 0FEA                                 fsr1h 0FE2  
                               indf0 0FEF                                 fsr2h 0FDA  
                               fsr0l 0FE9                                 indf1 0FE7  
                               indf2 0FDF                                 fsr1l 0FE1  
                               fsr2l 0FD9                                 _push 4B0E  
  lcd_4bit_send_char_data_pos@column 001D                        ___fpclassifyf 3D3C  
                               prodh 0FF4                                 prodl 0FF3  
                               start 0000                      ___fldiv@new_exp 0012  
                       ___param_bank 0000                    initialize_t@stack 0001  
                   evaluatePostfix@i 00E5                _lcd_4bit_send_command 4452  
                              ??_abs 0009                 _gpio_pin_write_logic 38FE  
     lcd_4bit_send_string_pos@column 001D                                ??_pad 0014  
            evaluatePostfix@operand1 0084              evaluatePostfix@operand2 0080  
                              ??_pop 0002                        ___fltol@sign1 0009  
                              ?_labs 0001                      __end_of___fladd 1EB0  
                              ?_main 0001                                ?_dtoa 0017  
           ??_application_initialize 0001                      __end_of___fldiv 2AF0  
                    __end_of___awdiv 3EFE                      __end_of___flneg 4936  
                    __end_of___awmod 411C                      __end_of___flmul 2756  
                    __end_of___flsub 4804                      __end_of___fltol 3C38  
                              ?_push 0001                      ___awdiv@divisor 0003  
                    ___awdiv@counter 0005                  relay_turn_off@F3062 00F8  
                       vfpfcnvrt@fmt 0075                                _PORTA 0F80  
                              _PORTB 0F81                                _PORTC 0F82  
                              _PORTD 0F83                                _PORTE 0F84  
                              _TRISA 0F92                                _TRISB 0F93  
                              _TRISC 0F94                                _TRISD 0F95  
                              _TRISE 0F96            lcd_4bit_set_cursor@coulmn 0016  
           __end_of_keypad_get_value 3B32                                _flags 00F2  
                              _infix 0264                  read_prec_or_width@c 0009  
                read_prec_or_width@n 000A                                _fputc 3EFE  
                              _fputs 4884                                _num_1 010C  
                              _pop_t 496E                                labs@a 0001  
                              pad@fp 000F                                _width 00EC  
                              _putch 4B88                                main@i 00E9  
                              dtoa@d 0018                                dtoa@i 0021  
                              dtoa@p 001E                                dtoa@s 0020  
                              dtoa@w 001C                                tablat 0FF5  
                              push@c 0002                                status 0FD8  
                    __end_of_sprintf 4844                       ?___fpclassifyf 0001  
  keypad_get_value@l_columns_counter 0014                      __initialization 4670  
                keypad_get_value@ret 0010                         __end_of_labs 4728  
                       __end_of_main 232C                         __end_of_dtoa 37C2  
              ?_gpio_pin_write_logic 0001                         __end_of_push 4B34  
           gpio_pin_read_logic@logic 0003                        _lat_registers 0179  
                             ??_labs 0005                               ??_main 00E7  
                             ??_dtoa 001A                               ??_push 0003  
                      __activetblptr 0002                     led_turn_on@F3063 00FD  
         __end_of_read_prec_or_width 4314                               ?_fputc 0001  
                             ?_fputs 0009                     ___awdiv@dividend 0001  
                             ?_pop_t 0001                               ?_putch 0001  
          keypad_get_value@l_counter 0012                     __end_of___xxtofl 3648  
   __end_of_lcd_4bit_send_string_pos 43B4                        ?_initialize_t 0001  
             ?_lcd_4bit_send_command 000F                         vfprintf@cfmt 0083  
                             ___flge 3C38                               ___fleq 411C  
                          ??___fladd 0030                               ___wmul 4AE8  
                          ??___fldiv 0009                               _doMath 37C2  
                          ??___awdiv 0005                            ??___flneg 0005  
                          ??___awmod 0005                            ??___flmul 0017  
                          ??___flsub 0040                            ??___fltol 0005  
                             _efgtoa 1030                               _floorf 30B2  
                             _memcpy 4728                 read_prec_or_width@ap 0008  
                             _memset 4936                               clear_0 46A8  
                             clear_1 46B4                               clear_2 46C0  
                   ___awdiv@quotient 0007                      ___awmod@divisor 0003  
                             _my_lcd 019F                               isa$std 0001  
                             _result 016B                      ___awmod@counter 0005  
                             pad@buf 0010                               _push_t 4A4A  
                             dtoa@fp 0017                               _strcpy 48C4  
                             _strlen 4A14                  infixToPostfix@infix 0005  
                             fputc@c 0001                               fputs@c 000C  
                             fputs@i 000D                               fputs@s 0009  
                    ___fpclassifyf@e 0009                      ___fpclassifyf@u 000B  
                    ___fpclassifyf@x 0001                         __mediumconst 0000  
                             tblptrh 0FF7                               tblptrl 0FF6  
                             tblptru 0FF8                               putch@c 0001  
                   __end_of_vfprintf 4884                            ??_sprintf 007F  
                 calculation_start@i 0024                           ___flge@ff1 0028  
                         ___flge@ff2 002C                      ??___fpclassifyf 0005  
                       ___xxtofl@arg 000B                         ___xxtofl@exp 000A  
                       ___xxtofl@val 0001                           ___fleq@ff1 0001  
                         ___fleq@ff2 0005                           __accesstop 0080  
            __end_of__initialization 46C8                           ___flneg@f1 0001  
                      ___rparam_used 0001                           ___fltol@f1 0001  
                   ??_lcd_send_4bits 000E                       ??_initialize_t 0002  
            _lcd_4bit_send_char_data 44C4               ??_gpio_pin_write_logic 0004  
                     __pcstackCOMRAM 0001                evaluatePostfix@result 0052  
                       __pidataBANK0 4B8A                         __pidataBANK1 49DE  
                      __end_of_fputc 3FB8                        __end_of_fputs 48C4  
                      __end_of_pop_t 49A6                        __end_of_putch 4B8A  
           lcd_4bit_send_command@lcd 000F                   evaluatePostfix@num 008E  
           lcd_4bit_send_command@ret 0012         ?_lcd_4bit_send_char_data_pos 001A  
                            ??_fputc 0004                              ??_fputs 000C  
                            ??_pop_t 0005                              ??_putch 0001  
                         __pbssBANK0 00EC                           __pbssBANK1 0100  
                         __pbssBANK2 0200               _application_initialize 4B82  
                            ?___flge 0028                              ?___fleq 0001  
                            ?___wmul 0001                              ?_doMath 0040  
                  led_turn_off@F3068 00FC                              ?_efgtoa 0040  
                            ?_floorf 001A                              ?_memcpy 0001  
                            ?_memset 0001                              ?_push_t 0049  
                            ?_strcpy 0001                              ?_strlen 0001  
                          ?___xxtofl 0001            ?_lcd_4bit_send_string_pos 001A  
               led_turn_toggle@F3073 00FB          evaluatePostfix@isFractional 0088  
                  ?_keypad_get_value 000B                   ??_keypad_get_value 000E  
                         _btn_values 1001                       _tris_registers 0183  
          ??_lcd_4bit_send_char_data 0012                              __Hparam 0000  
                            __Lparam 0000                    _calculation_start 43B4  
                         _equal_flag 00F4                              ___fladd 19F0  
                            ___fldiv 2756                  _gpio_pin_read_logic 3FB8  
                            ___awdiv 3E3A                              ___flneg 48FE  
                            ___awmod 406C                              ___flmul 232C  
                            ___flsub 47BE                              ___fltol 3B32  
                 ?_calculation_start 0021                            ?_vfprintf 0080  
                       __psmallconst 1000                              __pcinit 4670  
                            __ramtop 1000                           _initialize 4B5A  
                            __ptext0 1EB0                              __ptext1 4A14  
                            __ptext2 4804                              __ptext3 4844  
                            __ptext4 2E2E                              __ptext5 426E  
                            __ptext6 4AE8                              __ptext7 1030  
                            __ptext8 48C4                              __ptext9 4728  
                      ??_check_digit 0003                  ??_calculation_start 0022  
              read_prec_or_width@fmt 0007                           ??___xxtofl 0005  
                   ___awmod@dividend 0001                 __end_of_initialize_t 4B82  
                            efgtoa@c 0045                              efgtoa@d 0053  
                            efgtoa@e 0057                              efgtoa@f 0041  
                            efgtoa@g 006A                              efgtoa@h 0061  
                            efgtoa@i 005F                              efgtoa@l 0065  
                            efgtoa@m 0055                              efgtoa@n 006E  
                            efgtoa@p 004A                              efgtoa@t 004C  
                            efgtoa@u 0070                              efgtoa@w 0059  
                     _infixToPostfix 32C4                              _postfix 0200  
               ?_gpio_pin_read_logic 0001                              _sprintf 4804  
               end_of_initialization 46C8                    lcd_send_4bits@lcd 000B  
                  lcd_send_4bits@ret 000E                              floorf@e 0028  
                            floorf@m 0024                              floorf@u 002A  
                            floorf@x 001A                              memcpy@d 0008  
                            memcpy@n 0005                              memcpy@s 000A  
                            fputc@fp 0003                              memset@c 0003  
                            memset@n 0005                              memset@p 0007  
                      __Lmediumconst 0000                              fputs@fp 000B  
                 _read_prec_or_width 426E              ??_lcd_4bit_send_command 0012  
          __end_of_calculation_start 4452                           _precedence 4536  
                  __end_of_vfpfcnvrt 30B2                           efgtoa@mode 0051  
                         efgtoa@sign 0069                              postdec1 0FE5  
                            postdec2 0FDD                  ?_read_prec_or_width 0007  
                            postinc0 0FEE                              postinc1 0FE6  
                            postinc2 0FDE                     vfpfcnvrt@convarg 0079  
                            push_t@c 004A                           ??_vfprintf 007F  
                            strcpy@d 0005                              strlen@a 0003  
                            strlen@s 0001                    ??_evaluatePostfix 0054  
    __end_of_lcd_4bit_send_char_data 4536                          ___fladd@grs 0037  
       keypad_get_value@column_logic 0011           lcd_4bit_send_char_data@lcd 000F  
         lcd_4bit_send_char_data@ret 0012               __end_of_infixToPostfix 3494  
                      ___xxtofl@sign 0009                ??_gpio_pin_read_logic 0004  
               ??_read_prec_or_width 0009                          ___fldiv@grs 0014  
                        ___fldiv@rem 000D                  __end_of_check_digit 49DE  
                         _start_flag 00F7      lcd_4bit_send_char_data_pos@data 001E  
                        ___flmul@grs 001D               evaluatePostfix@current 0092  
                _lcd_4bit_set_cursor 41C6                   relay_turn_on@F3057 00F9  
        lcd_4bit_send_string_pos@lcd 001A          lcd_4bit_send_string_pos@ret 0020  
        lcd_4bit_send_string_pos@row 001C          lcd_4bit_send_string_pos@str 001E  
              keypad_get_value@value 000D                       __end_of___flge 3D3C  
                     __end_of___fleq 41C6               evaluatePostfix@postfix 0050  
                        vfpfcnvrt@ap 0076                          vfpfcnvrt@cp 007E  
                        vfpfcnvrt@fp 0074                       __end_of___wmul 4B0E  
                     __end_of_doMath 38FE                       __end_of_efgtoa 19F0  
                        ?_initialize 0001                       __end_of_floorf 32C4  
                     __end_of_memcpy 4778                           floorf@F521 0100  
                     __end_of_memset 496E                       __end_of_push_t 4A80  
                     __end_of_strcpy 48FE                       __end_of_strlen 4A4A  
                    ?_infixToPostfix 0005                  start_initialization 4670  
       ?_lcd_4bit_send_enable_signal 000B                 ?_lcd_4bit_set_cursor 0013  
                        __end_of_abs 4AB4                          __end_of_pad 4670  
                        __end_of_pop 4B5A              ?_application_initialize 0001  
              __end_of___fpclassifyf 3E3A                          ?_precedence 0001  
                        vfprintf@fmt 0081                          push_t@stack 0049  
                           ??___flge 0030                             ??___fleq 0009  
                           ??___wmul 0005                             ??_doMath 0048  
                           ??_efgtoa 0046                          __pdataBANK0 00FF  
                        __pdataBANK1 016F                             ??_floorf 001E  
                           ??_memcpy 0007                             ??_memset 0007  
                         memset@dest 0001         lcd_4bit_send_command@command 0011  
                           ??_push_t 004E                             ??_strcpy 0004  
                           ??_strlen 0003                            ___fladd@a 002C  
                          ___fladd@b 0028                            ___fldiv@a 0005  
                          ___fldiv@b 0001                          _check_digit 49A6  
                          ___flmul@a 0013                            ___flmul@b 000F  
                        __pbssCOMRAM 007F                ??_lcd_4bit_set_cursor 0017  
                          ___flsub@a 003C                            ___flsub@b 0038  
                      __pcstackBANK0 0080       __end_of_application_initialize 4B88  
                       check_digit@c 0003                            _calcState 00F3  
                        _efgtoa$1517 004E                            _dtoa$1486 001A  
                       _initialize_t 4B6E                             ?___fladd 0028  
    gpio_pin_write_logic@_pin_config 0001                             ?___fldiv 0001  
                           ?___awdiv 0001                             ?___flneg 0001  
                           ?___awmod 0001                             ?___flmul 000F  
                           ?___flsub 0038                             ?___fltol 0001  
          gpio_pin_write_logic@logic 0003                          __smallconst 1000  
                          doMath@op1 0040                            doMath@op2 0044  
        infixToPostfix@operatorStack 0011                             ?_sprintf 0084  
                     ___wmul@product 0005                           pop_t@stack 0001  
                    _evaluatePostfix 2AF0        __end_of_lcd_4bit_send_command 44C4  
                          _operators 018D                            _vfpfcnvrt 2E2E  
           _lcd_4bit_send_string_pos 4314                            main@i_853 00EB  
                  ___wmul@multiplier 0001                      initialize@stack 0001  
     lcd_4bit_send_char_data_pos@lcd 001A       lcd_4bit_send_char_data_pos@ret 001F  
     lcd_4bit_send_char_data_pos@row 001C  __end_of_lcd_4bit_send_char_data_pos 47BE  
        _lcd_4bit_send_char_data_pos 4778                           vfpfcnvrt@c 007D  
            gpio_pin_write_logic@ret 000A             ?_lcd_4bit_send_char_data 000F  
                          copy_data0 4684          evaluatePostfix@operandStack 0093  
             gpio_pin_read_logic@ret 0009                 _ecu_layer_initialize 0000  
      ??_lcd_4bit_send_char_data_pos 001F                             __Hrparam 0000  
                          memcpy@tmp 0007                           vfprintf@ap 0082  
                           __Lrparam 0000                           vfprintf@fp 0080  
             lcd_4bit_set_cursor@lcd 0013               lcd_4bit_set_cursor@ret 0019  
                         ?_vfpfcnvrt 0074               lcd_4bit_set_cursor@row 0015  
                   ??_infixToPostfix 0009                         ??_initialize 0002  
                 __end_of_btn_values 1019          __end_of_gpio_pin_read_logic 406C  
                 ___fpclassifyf@F465 0104          keypad_get_value@_keypad_obj 000B  
                         sprintf@fmt 0086                      infixToPostfix@i 000D  
                    infixToPostfix@j 000F                             ___xxtofl 3494  
                           __ptext10 46D2                             __ptext11 30B2  
                           __ptext20 3EFE                             __ptext12 3D3C  
                           __ptext21 4B88                             __ptext13 3B32  
                           __ptext30 4B0E                             __ptext22 4A80  
                           __ptext14 48FE                             __ptext31 4536  
                           __ptext23 406C                             __ptext15 3C38  
                           __ptext40 19F0                             __ptext32 4B34  
                           __ptext24 3E3A                             __ptext16 411C  
                           __ptext41 232C                             __ptext33 4B5A  
                           __ptext25 4936                             __ptext17 3648  
                           __ptext50 45A2                             __ptext42 2756  
                           __ptext34 2AF0                             __ptext26 4778  
                           __ptext18 460A                             __ptext51 4AB4  
                           __ptext43 49A6                             __ptext35 4A4A  
                           __ptext27 3A2A                             __ptext19 4884  
                           __ptext52 38FE                             __ptext44 3494  
                           __ptext36 496E                             __ptext28 3FB8  
                           __ptext53 4B82                             __ptext45 43B4  
                           __ptext37 4B6E                             __ptext29 32C4  
                           __ptext46 4314                             __ptext38 37C2  
                           __ptext47 41C6                             __ptext39 47BE  
                           __ptext48 4452                             __ptext49 44C4  
            __end_of_evaluatePostfix 2E2E                         precedence@op 0003  
                           doMath@op 0048                           strcpy@dest 0001  
              ?_ecu_layer_initialize 0001                   __end_of_initialize 4B6E  
                     _previousResult 0108                         ??_precedence 0003  
                   _keypad_get_value 3A2A                             efgtoa@fp 0040  
                           efgtoa@ne 0048                             efgtoa@pp 0050  
                           efgtoa@ou 005B                             isa$xinst 0000  
                           _vfprintf 4844                       _lcd_send_4bits 45A2  
                          push@stack 0001                         ?_check_digit 0001  
                           memcpy@d1 0001                             memcpy@s1 0003  
     keypad_get_value@l_rows_counter 0013                infixToPostfix@current 000C  
       __end_of_gpio_pin_write_logic 3A2A                   __end_of_precedence 45A2  
                        _res_counter 00F5                            sprintf@ap 008B  
              infixToPostfix@postfix 0007       lcd_4bit_send_enable_signal@lcd 000B  
             calculation_start@value 0021       lcd_4bit_send_enable_signal@ret 000D  
                           pop@stack 0001                            strcpy@src 0003  
                        efgtoa@nmode 0052               __end_of_lcd_send_4bits 460A  
                        ??_vfpfcnvrt 0077          __end_of_lcd_4bit_set_cursor 426E  
                           sprintf@f 008C                             sprintf@s 0084  
                     _port_registers 016F                        ___fladd@signs 0034  
               calculation_start@ret 0023               ??_ecu_layer_initialize 0001  
                   ?_evaluatePostfix 0050                         ___fladd@aexp 0035  
                       ___fladd@bexp 0036          lcd_4bit_send_char_data@data 0011  
         ??_lcd_4bit_send_string_pos 0020  
